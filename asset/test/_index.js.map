{"version":3,"sources":["../src/env.js","env.js","_index.js"],"names":["append2","name1","name2","list","R","append","init2","init","hasPath","path","x","length","last2","typeFrag","str","n","normPath","frags","rv","i","wrap","json","validate","Array","isArray","es","path2","rec","p","strip","data","root","fromJson","toJson","env","basename","Error","last","compose","base","frag0","split","frag","upcount","tail","makePath","epath","goTo","getm","meta","value","slot","hasOwnProperty","gets","setm","slot0","assocPath","sets","lookup","replace","add","location","name","index","lis","insert","value1","remove","dissoc","move","from","copy","run","assert","assertError","E","age","buddies","ident","thunk","lv","console","log","match","status","e","message","startsWith","callRun","m"],"mappings":";AAiTO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,KAAA,QAAA,OAAA,QAAA,IAAA,QAAA,QAAA,QAAA,OAAA,QAAA,OAAA,QAAA,KAAA,QAAA,KAAA,QAAA,KAAA,QAAA,KAAA,QAAA,KAAA,QAAA,SAAA,QAAA,SAAA,QAAA,KAAA,QAAA,OAAA,QAAA,cAAA,EAhTP,IAAA,EAAA,EAAA,QAAA,UAgTO,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA9SP,MAAMA,EAAU,CAACC,EAAOC,EAAOC,IACtBC,EAAEC,OAAOH,EAAOE,EAAEC,OAAOJ,EAAOE,IAGnCG,EAASH,GACNC,EAAEG,KAAKH,EAAEG,KAAKJ,IAKjBK,EAAU,CAACC,EAAMC,KACfD,EAAKE,QACJP,EAAEI,QAAQC,EAAMC,GAGnBE,EAAST,GACNA,EAAKA,EAAKQ,OAAS,GAGtBE,EAAYC,IACZ,GAAc,iBAAPA,EAAiB,OAAOA,EAC7BC,MAAAA,GAAKD,EACHC,OAAAA,EAAI,KAAOD,EAAOC,EAAID,GAG1BE,EAAYC,IACZC,IAAAA,EAAK,GACJ,IAAA,IAAIC,EAAI,EAAGA,EAAIF,EAAMN,OAAQQ,IAChB,UAAZF,EAAME,GACRD,GAAM,IACsB,iBAAZD,EAAME,IAA8B,KAAZF,EAAME,GAC9CD,GAAM,IAENA,GAAMD,EAAME,GAGTD,OAAAA,GAGHE,EAAO,CAACC,EAAMZ,EAAMa,KAChBD,OAAS,OAATA,EAAgB,OAASE,MAAMC,QAAQH,GAAQ,eAAiBA,GACjE,IAAA,QACGI,MAAAA,EAAK,GACLC,EAAQjB,EAAO,KAChB,IAAA,IAAIU,EAAI,EAAGA,EAAIE,EAAKV,OAAQQ,IAC/BM,EAAGN,GAAKC,EAAKC,EAAKF,GAAIO,EAAOJ,GAExBA,OAAAA,EAASG,EAAIhB,GACjB,IAAA,SACGkB,MAAAA,EAAM,GACP,IAAA,IAAIC,KAAKP,EACZM,EAAIC,GAAKR,EAAKC,EAAKO,GAAInB,EAAO,IAAMmB,EAAGN,GAElCA,OAAAA,EAASK,EAAKlB,GACvB,QACSa,OAAAA,EAASD,EAAMZ,KAItBoB,EAASC,IACPC,MAAAA,EAAOD,EAAK,UACVC,OAAS,OAATA,EAAgB,OAASR,MAAMC,QAAQO,GAAQ,eAAiBA,GACjE,IAAA,QACGN,MAAAA,EAAK,GACN,IAAA,IAAIN,EAAI,EAAGA,EAAIY,EAAKpB,OAAQQ,IAC/BM,EAAGN,GAAKU,EAAME,EAAKZ,IAEdM,OAAAA,EACJ,IAAA,SACGE,MAAAA,EAAM,GACP,IAAA,IAAIC,KAAKG,EACZJ,EAAIC,GAAKC,EAAME,EAAKH,IAEfD,OAAAA,EACT,QACSI,OAAAA,IAIAC,EAAW,CAACX,EAAMC,KACtB,CACLQ,KAAMV,EAAKC,EAAM,GAAIC,GACrBb,KAAM,KA4NH,QAAA,SAAA,EAxNA,MAAMwB,EAAUC,GACdL,EAAMK,EAAIJ,MAuNZ,QAAA,OAAA,EApNA,MAAMrB,EAAQyB,IACfhB,IAAAA,EAAK,GACJ,IAAA,IAAIC,EAAI,EAAGA,EAAIe,EAAIzB,KAAKE,OAAQQ,IAChB,UAAfe,EAAIzB,KAAKU,GACXD,GAAM,IAENA,GAAMgB,EAAIzB,KAAKU,GAGZD,OAAAA,GA2MF,QAAA,KAAA,EAxMA,MAAMiB,EAAYD,IACnB,IAAE9B,EAAEO,OAAOuB,EAAIzB,MACX,MAAA,IAAI2B,MAAM,gCAEXhC,OAAAA,EAAEiC,KAAKH,EAAIzB,OAoMb,QAAA,SAAA,EA5LP,MAAM6B,EAAU,CAACC,EAAM9B,KACjBA,GAAS,MAATA,EAEK8B,OAAAA,EAELC,IAAAA,EAAQpC,EAAEqC,MAAM,IAAKhC,GACrBiC,EAAO,GACPjC,GAAAA,EAAKE,OAAS,GAAgB,KAAXF,EAAK,GAAW,CAE/BkC,MAAAA,GAAWH,EAAM,GACvBE,EAAOH,EACF,IAAA,IAAIpB,EAAI,EAAGA,EAAIwB,EAASxB,IAAK,CAC5B,IAAEf,EAAEO,OAAO+B,GACP,MAAA,IAAIN,MAAM,iCAElBM,EAAOpC,EAAMoC,IAIjBF,EAAQpC,EAAEwC,KAAKJ,GACV,IAAA,IAAIrB,EAAI,EAAGA,EAAIqB,EAAM7B,OAAQQ,IAChCuB,EAAO1C,EAAQ,SAAUa,EAAS2B,EAAMrB,IAAKuB,GAExCA,OAAAA,GAGIG,EAAW,CAACpC,EAAMyB,KACvBY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAI5BS,IAAAA,EAAK,GACJ,IAAA,IAAIC,EAAI,EAAGA,EAAI2B,EAAMnC,OAAQQ,IAChB,UAAZ2B,EAAM3B,GACRD,GAAM,IAENA,GAAM4B,EAAM3B,GAGTD,OAAAA,GAqJF,QAAA,SAAA,EAlJA,MAAM6B,EAAO,CAACtC,EAAMyB,KACnBY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC5B,IAAED,EAAQsC,EAAOZ,EAAIJ,MACjB,MAAA,IAAIM,MAAM,sBAAwB3B,GAE/ByB,OAAAA,EAAAA,EAAAA,GAAAA,GAAX,GAAA,CAAgBzB,KAAKqC,KA6IhB,QAAA,KAAA,EA1IA,MAAME,EAAO,CAACvC,EAAMwC,EAAMC,EAAOhB,KAChCY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC1B0C,EAAO/C,EAAEK,KAAKqC,EAAOZ,EAAIJ,MAC3B,IAAEqB,EACE,MAAA,IAAIf,MAAM,sBAAwB3B,GAEnC0C,OAAAA,EAAKC,eAAeH,GAAQE,EAAKF,GAAQC,GAoI3C,QAAA,KAAA,EAjIA,MAAMG,EAAO,CAAC5C,EAAMyB,KACnBY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC1B0C,EAAO/C,EAAEK,KAAKqC,EAAOZ,EAAIJ,MAC3B,IAAEqB,EACE,MAAA,IAAIf,MAAM,sBAAwB3B,GAEnC0C,OAAAA,GA2HF,QAAA,KAAA,EAxHA,MAAMG,EAAO,CAAC7C,EAAMwC,EAAMC,EAAOhB,KAChCY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC1B8C,EAAQnD,EAAEK,KAAKqC,EAAOZ,EAAIJ,MAC5B,IAAEyB,EACE,MAAA,IAAInB,MAAM,sBAAwB3B,GAEpC0C,MAAAA,EAAWI,EAAAA,EAAAA,GAAAA,GAAP,GAAA,CAAeN,CAAAA,GAAMC,IACzBpB,EAAO1B,EAAEoD,UAAUV,EAAOK,EAAMjB,EAAIJ,MAC/BI,OAAAA,EAAAA,EAAAA,GAAAA,GAAX,GAAA,CAAgBJ,KAAAA,KAgHX,QAAA,KAAA,EA7GA,MAAM2B,EAAO,CAAChD,EAAM0C,EAAMjB,KACzBY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC5B,IAAED,EAAQsC,EAAOZ,EAAIJ,MACjB,MAAA,IAAIM,MAAM,sBAAwB3B,GAEpCqB,MAAAA,EAAO1B,EAAEoD,UAAUV,EAAOK,EAAMjB,EAAIJ,MAC/BI,OAAAA,EAAAA,EAAAA,GAAAA,GAAX,GAAA,CAAgBJ,KAAAA,KAuGX,QAAA,KAAA,EApGA,MAAM4B,EAAS,CAACjD,EAAMyB,KACrBY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC1B0C,EAAO/C,EAAEK,KAAKqC,EAAOZ,EAAIJ,MAC3B,IAAEqB,EACE,MAAA,IAAIf,MAAM,wBAA0B3B,GAErCoB,OAAAA,EAAMsB,IA8FR,QAAA,OAAA,EA3FA,MAAMxC,EAAS,CAACF,EAAMyB,KACrBY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC1B0C,EAAO/C,EAAEK,KAAKqC,EAAOZ,EAAIJ,MAC3B,IAAEqB,EACE,MAAA,IAAIf,MAAM,wBAA0B3B,GAExC,IAAEc,MAAMC,QAAQ2B,EAAK,WACjB,MAAA,IAAIf,MAAM,yBAA2B3B,GAEtC0C,OAAAA,EAAK,UAAUxC,QAkFjB,QAAA,OAAA,EA7EA,MAAMgD,EAAU,CAAClD,EAAMyC,EAAOhB,KAE7B,MAAA,IAAIE,MAAM,eA2EX,QAAA,QAAA,EAvEA,MAAMwB,EAAM,CAACnD,EAAMyC,EAAO5B,EAAUY,KACnCY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC1BoD,EAAWvD,EAAMwC,GACjBgB,EAAO1D,EAAEiC,KAAKS,GACdS,EAAQnD,EAAEK,KAAKoD,EAAU3B,EAAIJ,MAC/B,GAA0B,iBAAnByB,EAAM,UACT,MAAA,IAAInB,MAAM,sCAAwC3B,GAEtDc,GAAAA,MAAMC,QAAQ+B,EAAM,WAAY,CAE5BQ,MAAAA,EAAkB,MAATD,EAAgBP,EAAM,UAAU5C,OAASmD,EACpD,GAAgB,iBAATC,GAAqBA,EAAQ,GAAM,EACtC,MAAA,IAAI3B,MAAM,wBAA0B3B,GAExCsD,GAAAA,EAAQ,GAAKA,EAAQR,EAAM,UAAU5C,OACjC,MAAA,IAAIyB,MAAM,uBAAyB3B,GAErCuD,MACAb,EAAO7B,EADDlB,EAAE6D,OAAOF,EAAO3C,EAAK8B,EAAOlC,EAAS8B,GAAQxB,GAAWiC,EAAM,WAC/CvC,EAAS6C,IAC9B/B,EAAO1B,EAAEoD,UAAUK,EAAUV,EAAMjB,EAAIJ,MAClCI,OAAAA,EAAAA,EAAAA,GAAAA,GAAX,GAAA,CAAgBJ,KAAAA,IACX,CAED,GAAe,iBAARgC,EACH,MAAA,IAAI1B,MAAM,uBAAyB3B,GAErCyD,MAAAA,EAAS9C,EAAK8B,EAAOlC,EAAS8B,GAAQxB,GAEtC6B,EAAO7B,EADGiC,EAAAA,EAAAA,GAAAA,EAAM,WAAb,GAAA,CAAyBO,CAAAA,GAAMI,IACblD,EAAS6C,IAC9B/B,EAAO1B,EAAEoD,UAAUK,EAAUV,EAAMjB,EAAIJ,MAClCI,OAAAA,EAAAA,EAAAA,GAAAA,GAAX,GAAA,CAAgBJ,KAAAA,MAyCb,QAAA,IAAA,EArCA,MAAMqC,EAAS,CAAC1D,EAAMa,EAAUY,KAC/BY,MAAAA,EAAQR,EAAQJ,EAAIzB,KAAMA,GAC1BoD,EAAWvD,EAAMwC,GACjBgB,EAAO1D,EAAEiC,KAAKS,GACdS,EAAQnD,EAAEK,KAAKoD,EAAU3B,EAAIJ,MAC/B,GAA0B,iBAAnByB,EAAM,WAA6C,OAApBA,EAAM,UACxC,MAAA,IAAInB,MAAM,yCAA2C3B,GAEzDc,GAAAA,MAAMC,QAAQ+B,EAAM,WAAY,CAE9B,GAAe,iBAARO,GAAoBA,EAAO,GAAM,EACpC,MAAA,IAAI1B,MAAM,2BAA6B3B,GAE3CqD,GAAAA,EAAO,GAAKA,GAAQP,EAAM,UAAU5C,OAChC,MAAA,IAAIyB,MAAM,0BAA4B3B,GAExCuD,MACAb,EAAO7B,EADDlB,EAAE+D,OAAOL,EAAM,EAAGP,EAAM,WACTvC,EAAS6C,IAC9B/B,EAAO1B,EAAEoD,UAAUK,EAAUV,EAAMjB,EAAIJ,MAClCI,OAAAA,EAAAA,EAAAA,GAAAA,GAAX,GAAA,CAAgBJ,KAAAA,IACX,CAED,IAAEyB,EAAM,UAAUH,eAAeU,GAC7B,MAAA,IAAI1B,MAAM,iCAAmC3B,GAE/CkB,MACAwB,EAAO7B,EADDlB,EAAEgE,OAAON,EAAMP,EAAM,WACNvC,EAAS6C,IAC9B/B,EAAO1B,EAAEoD,UAAUK,EAAUV,EAAMjB,EAAIJ,MAClCI,OAAAA,EAAAA,EAAAA,GAAAA,GAAX,GAAA,CAAgBJ,KAAAA,MASb,QAAA,OAAA,EALA,MAAMuC,EAAO,CAACC,EAAM7D,EAAMyB,KAEzB,MAAA,IAAIE,MAAM,gBAGX,QAAA,KAAA,EAAA,MAAMmC,EAAO,CAACD,EAAM7D,EAAMyB,KAEzB,MAAA,IAAIE,MAAM,gBAFX,QAAA,KAAA;;ACzSA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAPP,IAAA,EAAA,EAAA,QAAA,eAOO,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EALP,MAAMd,EAAW,CAAC4B,EAAOzC,KAEhB,CAAUyC,SAAAA,IAGNsB,EAAM,CAACC,EAAQC,KAStBxC,IAAAA,EAAMyC,EAAE3C,SARC,CACX8B,KAAM,MACNc,IAAK,GACLC,QAAS,CACP,MAAO,QAIgBvD,GAC3BmD,EAAO,EAAG,IAAME,EAAEjB,OAAO,QAASxB,GAAM,OAExCA,EAAMyC,EAAEf,IAAI,SAAU,mBAAoBtC,EAAUY,GACpDuC,EAAO,EAAG,IAAME,EAAEjB,OAAO,SAAUxB,GAAM,oBACzCwC,EAAY,IAAK,IAAMC,EAAEjB,OAAO,OAAQxB,GAAM,WAE9CuC,EAAO,EAAG,IAAME,EAAEjB,OAAO,aAAcxB,GAAM,OAE7CA,EAAMyC,EAAEf,IAAI,aAAc,QAAStC,EAAUY,GAC7CuC,EAAO,EAAG,IAAME,EAAEjB,OAAO,aAAcxB,GAAM,SAC7CwC,EAAY,IAAK,IAAMC,EAAEjB,OAAO,aAAcxB,GAAM,WAEpDA,EAAMyC,EAAE5B,KAAK,WAAYb,GACzBuC,EAAO,EAAG,IAAME,EAAEjB,OAAO,MAAOxB,GAAM,SACtCwC,EAAY,IAAK,IAAMC,EAAEjB,OAAO,MAAOxB,GAAM,WAC7CA,EAAMyC,EAAE5B,KAAK,GAAIb,GAEjBA,EAAMyC,EAAEf,IAAI,aAAc,SAAUtC,EAAUY,GAC9CuC,EAAO,EAAG,IAAME,EAAEjB,OAAO,aAAcxB,GAAM,UAE7CA,EAAMyC,EAAER,OAAO,aAAc7C,EAAUY,GACvCwC,EAAY,EAAG,IAAMC,EAAEjB,OAAO,aAAcxB,GAAM,WAElDA,EAAMyC,EAAER,OAAO,SAAU7C,EAAUY,GACnCwC,EAAY,EAAG,IAAMC,EAAEjB,OAAO,SAAUxB,GAAM,WAC9CwC,EAAY,IAAK,IAAMC,EAAER,OAAO,SAAU7C,EAAUY,GAAM,WAE1DA,EAAMyC,EAAErB,KAAK,QAAS,WAAW,EAAMpB,GACvCuC,EAAO,EAAG,IAAME,EAAE3B,KAAK,QAAS,WAAW,EAAOd,IAAM,IAtCnD,QAAA,IAAA;;AC2BP,aAlCA,IAAA,EAAA,EAAA,QAAA,UAkCA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAhCA,MAAMuC,EAAS,CAACK,EAAOC,EAAO7D,KACtB8D,MAAAA,EAAKD,IACPC,GAAM9D,EACR+D,QAAQC,IAAI,WAAYJ,EAAO,MAE/BG,QAAQC,IAAI,WAAYJ,EAAO,KAAME,EAAI9D,IAIvCwD,EAAc,CAACI,EAAOC,EAAOI,KAC7BC,IAAAA,EAAS,KACT,IACSL,IACXK,EAAS,WACT,MAAOC,GACHA,GAAAA,aAAajD,OAASiD,EAAEC,QAAQC,WAAWJ,GAE7C,YADAF,QAAQC,IAAI,WAAYJ,EAAO,MAG/BM,EAAS,qBAAuBC,EAAEC,QAGtCL,QAAQC,IAAI,WAAYJ,EAAO,KAAMM,IAGjCI,EAAU,CAACC,EAAG3B,KAClBmB,QAAQC,IAAI,eAAiBpB,GAC7B2B,EAAEjB,IAAIC,EAAQC,GACdO,QAAQC,IAAI,cAAgBpB,GAC5BmB,QAAQC,IAAI,KAGdM,EAAQb,EAAG","file":"_index.js","sourceRoot":"..\\..\\tests","sourcesContent":["\r\nimport * as R from 'ramda'\r\n\r\nconst append2 = (name1, name2, list) => {\r\n  return R.append(name2, R.append(name1, list))\r\n}\r\n\r\nconst init2 = (list) => {\r\n  return R.init(R.init(list))\r\n}\r\n\r\n// see: https://github.com/ramda/ramda/pull/2841\r\n// Anyway, here we fix the original behavior.\r\nconst hasPath = (path, x) => {\r\n  if (! path.length) return true\r\n  return R.hasPath(path, x)\r\n}\r\n\r\nconst last2 = (list) => {\r\n  return list[list.length - 2]\r\n}\r\n\r\nconst typeFrag = (str) => {\r\n  if (typeof str == 'number') return str\r\n  const n = +str\r\n  return (n + \"\" === str) ? n : str\r\n}\r\n\r\nconst normPath = (frags) => {\r\n  let rv = \"\"\r\n  for (let i = 0; i < frags.length; i++) {\r\n    if (frags[i] == '@value') {\r\n      rv += '/'\r\n    } else if (typeof frags[i] == 'number' || frags[i] == '-') {\r\n      rv += '*'\r\n    } else {\r\n      rv += frags[i]\r\n    }\r\n  }\r\n  return rv\r\n}\r\n\r\nconst wrap = (json, path, validate) => {\r\n  switch (json === null ? 'null' : Array.isArray(json) ? 'array' : typeof json) {\r\n    case 'array': \r\n      const es = []\r\n      const path2 = path + '/*'\r\n      for (let i = 0; i < json.length; i++) {\r\n        es[i] = wrap(json[i], path2, validate)\r\n      }\r\n      return validate(es, path)\r\n    case 'object': \r\n      const rec = {}\r\n      for (let p in json) {\r\n        rec[p] = wrap(json[p], path + '/' + p, validate)\r\n      }\r\n      return validate(rec, path)\r\n    default: \r\n      return validate(json, path)\r\n  }\r\n}\r\n\r\nconst strip = (data) => {\r\n  const root = data['@value']\r\n  switch (root === null ? 'null' : Array.isArray(root) ? 'array' : typeof root) {\r\n    case 'array': \r\n      const es = []\r\n      for (let i = 0; i < root.length; i++) {\r\n        es[i] = strip(root[i])\r\n      }\r\n      return es\r\n    case 'object': \r\n      const rec = {}\r\n      for (let p in root) {\r\n        rec[p] = strip(root[p])\r\n      }\r\n      return rec\r\n    default: \r\n      return root\r\n  }\r\n}\r\n\r\nexport const fromJson = (json, validate) => {\r\n  return {\r\n    data: wrap(json, \"\", validate), \r\n    path: []\r\n  }\r\n}\r\n\r\nexport const toJson = (env) => {\r\n  return strip(env.data)\r\n}\r\n\r\nexport const path = (env) => {\r\n  let rv = \"\"\r\n  for (let i = 0; i < env.path.length; i++) {\r\n    if (env.path[i] == '@value') {\r\n      rv += \"/\"\r\n    } else {\r\n      rv += env.path[i]\r\n    }\r\n  }\r\n  return rv\r\n}\r\n\r\nexport const basename = (env) => {\r\n  if (! R.length(env.path)) {\r\n    throw new Error('basename/1: on root location')\r\n  }\r\n  return R.last(env.path)\r\n}\r\n\r\n/**\r\n * \r\n * @param {index[]} base internal representation of path\r\n * @param {string} path absolute or relative JSON pointer\r\n */\r\nconst compose = (base, path) => {\r\n  if (path === '0') {\r\n    // common easy case first\r\n    return base\r\n  }\r\n  let frag0 = R.split('/', path)\r\n  let frag = []\r\n  if (path.length > 0 && path[0] != '/') {\r\n    // relative\r\n    const upcount = +frag0[0]\r\n    frag = base\r\n    for (let i = 0; i < upcount; i++) {\r\n      if (! R.length(frag)) {\r\n        throw new Error('compose/1: no parent location')\r\n      }\r\n      frag = init2(frag)\r\n    }\r\n  }\r\n\r\n  frag0 = R.tail(frag0)\r\n  for (let i = 0; i < frag0.length; i++) {\r\n    frag = append2('@value', typeFrag(frag0[i]), frag)\r\n  }\r\n  return frag\r\n}\r\n\r\nexport const makePath = (path, env) => {\r\n  const epath = compose(env.path, path)\r\n  //if (! hasPath(epath, env.data)) {\r\n  //  throw new Error('makePath/1: not found: ' + path)\r\n  //}\r\n  let rv = \"\"\r\n  for (let i = 0; i < epath.length; i++) {\r\n    if (epath[i] == '@value') {\r\n      rv += \"/\"\r\n    } else {\r\n      rv += epath[i]\r\n    }\r\n  }\r\n  return rv\r\n}\r\n\r\nexport const goTo = (path, env) => {\r\n  const epath = compose(env.path, path)\r\n  if (! hasPath(epath, env.data)) {\r\n    throw new Error('goTo/1: not found: ' + path)\r\n  }\r\n  return {...env, path:epath}\r\n}\r\n\r\nexport const getm = (path, meta, value, env) => {\r\n  const epath = compose(env.path, path)\r\n  const slot = R.path(epath, env.data)\r\n  if (! slot) {\r\n    throw new Error('getm/1: not found: ' + path)\r\n  }\r\n  return slot.hasOwnProperty(meta) ? slot[meta] : value\r\n}\r\n\r\nexport const gets = (path, env) => {\r\n  const epath = compose(env.path, path)\r\n  const slot = R.path(epath, env.data)\r\n  if (! slot) {\r\n    throw new Error('gets/1: not found: ' + path)\r\n  }\r\n  return slot\r\n}\r\n\r\nexport const setm = (path, meta, value, env) => {\r\n  const epath = compose(env.path, path)\r\n  const slot0 = R.path(epath, env.data)\r\n  if (! slot0) {\r\n    throw new Error('setm/1: not found: ' + path)\r\n  }\r\n  const slot = {...slot0, [meta]:value}\r\n  const data = R.assocPath(epath, slot, env.data)\r\n  return {...env, data}\r\n}\r\n\r\nexport const sets = (path, slot, env) => {\r\n  const epath = compose(env.path, path)\r\n  if (! hasPath(epath, env.data)) {\r\n    throw new Error('sets/1: not found: ' + path)\r\n  }\r\n  const data = R.assocPath(epath, slot, env.data)\r\n  return {...env, data}\r\n}\r\n\r\nexport const lookup = (path, env) => {\r\n  const epath = compose(env.path, path)\r\n  const slot = R.path(epath, env.data)\r\n  if (! slot) {\r\n    throw new Error('lookup/1: not found: ' + path)\r\n  }\r\n  return strip(slot)\r\n}\r\n\r\nexport const length = (path, env) => {\r\n  const epath = compose(env.path, path)\r\n  const slot = R.path(epath, env.data)\r\n  if (! slot) {\r\n    throw new Error('length/1: not found: ' + path)\r\n  }\r\n  if (! Array.isArray(slot['@value'])) {\r\n    throw new Error('length/2: not a list: ' + path)\r\n  }\r\n  return slot['@value'].length\r\n}\r\n\r\n// totally replace the value of the path.\r\n// metas are generated by validation\r\nexport const replace = (path, value, env) => {\r\n  // TODO implement\r\n  throw new Error('implement!')\r\n}\r\n\r\n// generates new metas\r\nexport const add = (path, value, validate, env) => {\r\n  const epath = compose(env.path, path)\r\n  const location = init2(epath)\r\n  const name = R.last(epath)\r\n  const slot0 = R.path(location, env.data)\r\n  if (typeof slot0['@value'] != 'object') {\r\n    throw new Error('add/1 neither a record nor a list: ' + path)\r\n  }\r\n  if (Array.isArray(slot0['@value'])) {\r\n    // insert into list\r\n    const index = (name === '-') ? slot0['@value'].length : name\r\n    if (typeof index != 'number' || index % 1 !== 0) {\r\n      throw new Error('add/2 invalid index: ' + path)\r\n    }\r\n    if (index < 0 || index > slot0['@value'].length) {\r\n      throw new Error('add/3 out of range: ' + path)\r\n    }\r\n    const lis = R.insert(index, wrap(value, normPath(epath), validate), slot0['@value'])\r\n    const slot = validate(lis, normPath(location))\r\n    const data = R.assocPath(location, slot, env.data)\r\n    return {...env, data}\r\n  } else {\r\n    // define or set into record\r\n    if (typeof name != 'string') {\r\n      throw new Error('add/4 invalid name: ' + path)\r\n    }\r\n    const value1 = wrap(value, normPath(epath), validate)\r\n    const rec = {...slot0['@value'], [name]:value1}\r\n    const slot = validate(rec, normPath(location))\r\n    const data = R.assocPath(location, slot, env.data)\r\n    return {...env, data}\r\n  }\r\n}\r\n\r\nexport const remove = (path, validate, env) => {\r\n  const epath = compose(env.path, path)\r\n  const location = init2(epath)\r\n  const name = R.last(epath)\r\n  const slot0 = R.path(location, env.data)\r\n  if (typeof slot0['@value'] != 'object' || slot0['@value'] === null) {\r\n    throw new Error('remove/1 neither a record nor a list: ' + path)\r\n  }\r\n  if (Array.isArray(slot0['@value'])) {\r\n    // remove from list\r\n    if (typeof name != 'number' || name % 1 !== 0) {\r\n      throw new Error('remove/2 invalid index: ' + path)\r\n    }\r\n    if (name < 0 || name >= slot0['@value'].length) {\r\n      throw new Error('remove/3 out of range: ' + path)\r\n    }\r\n    const lis = R.remove(name, 1, slot0['@value'])\r\n    const slot = validate(lis, normPath(location))\r\n    const data = R.assocPath(location, slot, env.data)\r\n    return {...env, data}\r\n  } else {\r\n    // undefine from record\r\n    if (! slot0['@value'].hasOwnProperty(name)) {\r\n      throw new Error('remove/4: property not found: ' + path)\r\n    }\r\n    const rec = R.dissoc(name, slot0['@value'])\r\n    const slot = validate(rec, normPath(location))\r\n    const data = R.assocPath(location, slot, env.data)\r\n    return {...env, data}\r\n  }\r\n}\r\n\r\nexport const move = (from, path, env) => {\r\n  // TODO implement\r\n  throw new Error('impelement!')\r\n}\r\n\r\nexport const copy = (from, path, env) => {\r\n  // TODO implement\r\n  throw new Error('impelement!')\r\n}","\r\nimport * as E from '../src/env'\r\n\r\nconst validate = (value, path) => {\r\n  //console.log('validate called', value, path)\r\n  return {'@value':value}\r\n}\r\n\r\nexport const run = (assert, assertError) => {\r\n  const json = {\r\n    name: 'Bob', \r\n    age: 24, \r\n    buddies: [\r\n      'Mam', 'Dad'\r\n    ]\r\n  }\r\n\r\n  let env = E.fromJson(json, validate)\r\n  assert(1, () => E.lookup('/name', env), 'Bob')\r\n\r\n  env = E.add('/email', 'info@example.com', validate, env)\r\n  assert(2, () => E.lookup('/email', env), 'info@example.com')\r\n  assertError(2.1, () => E.lookup('/foo', env), 'lookup/')\r\n\r\n  assert(3, () => E.lookup('/buddies/1', env), 'Dad')\r\n\r\n  env = E.add('/buddies/1', 'Pochi', validate, env)\r\n  assert(4, () => E.lookup('/buddies/1', env), 'Pochi')\r\n  assertError(4.1, () => E.lookup('/buddies/5', env), 'lookup/')\r\n\r\n  env = E.goTo('/buddies', env)\r\n  assert(5, () => E.lookup('0/1', env), 'Pochi')\r\n  assertError(5.1, () => E.lookup('0/5', env), 'lookup/')\r\n  env = E.goTo('', env)\r\n\r\n  env = E.add('/buddies/-', 'Komino', validate, env)\r\n  assert(5, () => E.lookup('/buddies/3', env), 'Komino')\r\n\r\n  env = E.remove('/buddies/3', validate, env)\r\n  assertError(6, () => E.lookup('/buddies/3', env), 'lookup/')\r\n\r\n  env = E.remove('/email', validate, env)\r\n  assertError(7, () => E.lookup('/email', env), 'lookup/')\r\n  assertError(7.1, () => E.remove('/email', validate, env), 'remove/')\r\n\r\n  env = E.setm('/name', 'invalid', true, env)\r\n  assert(8, () => E.getm('/name', 'invalid', false, env), true)\r\n}\r\n\r\n","\r\nimport * as E from './env'\r\n\r\nconst assert = (ident, thunk, rv) => {\r\n  const lv = thunk()\r\n  if (lv == rv) {\r\n    console.log('- ASSERT', ident, 'OK')\r\n  } else {\r\n    console.log('! ASSERT', ident, 'NG', lv, rv)\r\n  }\r\n}\r\n\r\nconst assertError = (ident, thunk, match) => {\r\n  let status = null\r\n  try {\r\n    const lv = thunk()\r\n    status = \"no error\"\r\n  } catch (e) {\r\n    if (e instanceof Error && e.message.startsWith(match)) {\r\n      console.log('- ASSERT', ident, 'OK')\r\n      return\r\n    } else {\r\n      status = \"matching failure: \" + e.message\r\n    }\r\n  }\r\n  console.log('! ASSERT', ident, 'NG', status)\r\n}\r\n\r\nconst callRun = (m, name) => {\r\n  console.log('TEST START: ' + name)\r\n  m.run(assert, assertError)\r\n  console.log('TEST DONE: ' + name)\r\n  console.log('')\r\n}\r\n\r\ncallRun(E, 'env')"]}