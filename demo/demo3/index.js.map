{"version":3,"sources":["../../src/core/utils.js","../../node_modules/ramda/es/F.js","../../node_modules/ramda/es/T.js","../../node_modules/ramda/es/__.js","../../node_modules/ramda/es/internal/_isPlaceholder.js","../../node_modules/ramda/es/internal/_curry1.js","../../node_modules/ramda/es/internal/_curry2.js","../../node_modules/ramda/es/add.js","../../node_modules/ramda/es/internal/_concat.js","../../node_modules/ramda/es/internal/_arity.js","../../node_modules/ramda/es/internal/_curryN.js","../../node_modules/ramda/es/curryN.js","../../node_modules/ramda/es/addIndex.js","../../node_modules/ramda/es/internal/_curry3.js","../../node_modules/ramda/es/adjust.js","../../node_modules/ramda/es/internal/_isArray.js","../../node_modules/ramda/es/internal/_isTransformer.js","../../node_modules/ramda/es/internal/_dispatchable.js","../../node_modules/ramda/es/internal/_reduced.js","../../node_modules/ramda/es/internal/_xfBase.js","../../node_modules/ramda/es/internal/_xall.js","../../node_modules/ramda/es/all.js","../../node_modules/ramda/es/max.js","../../node_modules/ramda/es/internal/_map.js","../../node_modules/ramda/es/internal/_isString.js","../../node_modules/ramda/es/internal/_isArrayLike.js","../../node_modules/ramda/es/internal/_xwrap.js","../../node_modules/ramda/es/bind.js","../../node_modules/ramda/es/internal/_reduce.js","../../node_modules/ramda/es/internal/_xmap.js","../../node_modules/ramda/es/internal/_has.js","../../node_modules/ramda/es/internal/_isArguments.js","../../node_modules/ramda/es/keys.js","../../node_modules/ramda/es/map.js","../../node_modules/ramda/es/internal/_isInteger.js","../../node_modules/ramda/es/nth.js","../../node_modules/ramda/es/paths.js","../../node_modules/ramda/es/path.js","../../node_modules/ramda/es/prop.js","../../node_modules/ramda/es/pluck.js","../../node_modules/ramda/es/reduce.js","../../node_modules/ramda/es/allPass.js","../../node_modules/ramda/es/always.js","../../node_modules/ramda/es/and.js","../../node_modules/ramda/es/internal/_xany.js","../../node_modules/ramda/es/any.js","../../node_modules/ramda/es/anyPass.js","../../node_modules/ramda/es/ap.js","../../node_modules/ramda/es/internal/_aperture.js","../../node_modules/ramda/es/internal/_xaperture.js","../../node_modules/ramda/es/aperture.js","../../node_modules/ramda/es/append.js","../../node_modules/ramda/es/apply.js","../../node_modules/ramda/es/values.js","../../node_modules/ramda/es/applySpec.js","../../node_modules/ramda/es/applyTo.js","../../node_modules/ramda/es/ascend.js","../../node_modules/ramda/es/assoc.js","../../node_modules/ramda/es/isNil.js","../../node_modules/ramda/es/assocPath.js","../../node_modules/ramda/es/nAry.js","../../node_modules/ramda/es/binary.js","../../node_modules/ramda/es/internal/_isFunction.js","../../node_modules/ramda/es/liftN.js","../../node_modules/ramda/es/lift.js","../../node_modules/ramda/es/both.js","../../node_modules/ramda/es/curry.js","../../node_modules/ramda/es/call.js","../../node_modules/ramda/es/internal/_makeFlat.js","../../node_modules/ramda/es/internal/_forceReduced.js","../../node_modules/ramda/es/internal/_flatCat.js","../../node_modules/ramda/es/internal/_xchain.js","../../node_modules/ramda/es/chain.js","../../node_modules/ramda/es/clamp.js","../../node_modules/ramda/es/internal/_cloneRegExp.js","../../node_modules/ramda/es/type.js","../../node_modules/ramda/es/internal/_clone.js","../../node_modules/ramda/es/clone.js","../../node_modules/ramda/es/comparator.js","../../node_modules/ramda/es/not.js","../../node_modules/ramda/es/complement.js","../../node_modules/ramda/es/internal/_pipe.js","../../node_modules/ramda/es/internal/_checkForMethod.js","../../node_modules/ramda/es/slice.js","../../node_modules/ramda/es/tail.js","../../node_modules/ramda/es/pipe.js","../../node_modules/ramda/es/reverse.js","../../node_modules/ramda/es/compose.js","../../node_modules/ramda/es/composeK.js","../../node_modules/ramda/es/internal/_pipeP.js","../../node_modules/ramda/es/pipeP.js","../../node_modules/ramda/es/composeP.js","../../node_modules/ramda/es/head.js","../../node_modules/ramda/es/internal/_identity.js","../../node_modules/ramda/es/identity.js","../../node_modules/ramda/es/pipeWith.js","../../node_modules/ramda/es/composeWith.js","../../node_modules/ramda/es/internal/_arrayFromIterator.js","../../node_modules/ramda/es/internal/_includesWith.js","../../node_modules/ramda/es/internal/_functionName.js","../../node_modules/ramda/es/internal/_objectIs.js","../../node_modules/ramda/es/internal/_equals.js","../../node_modules/ramda/es/equals.js","../../node_modules/ramda/es/internal/_indexOf.js","../../node_modules/ramda/es/internal/_includes.js","../../node_modules/ramda/es/internal/_quote.js","../../node_modules/ramda/es/internal/_toISOString.js","../../node_modules/ramda/es/internal/_complement.js","../../node_modules/ramda/es/internal/_filter.js","../../node_modules/ramda/es/internal/_isObject.js","../../node_modules/ramda/es/internal/_xfilter.js","../../node_modules/ramda/es/filter.js","../../node_modules/ramda/es/reject.js","../../node_modules/ramda/es/internal/_toString.js","../../node_modules/ramda/es/toString.js","../../node_modules/ramda/es/concat.js","../../node_modules/ramda/es/cond.js","../../node_modules/ramda/es/constructN.js","../../node_modules/ramda/es/construct.js","../../node_modules/ramda/es/contains.js","../../node_modules/ramda/es/converge.js","../../node_modules/ramda/es/internal/_xreduceBy.js","../../node_modules/ramda/es/reduceBy.js","../../node_modules/ramda/es/countBy.js","../../node_modules/ramda/es/dec.js","../../node_modules/ramda/es/defaultTo.js","../../node_modules/ramda/es/descend.js","../../node_modules/ramda/es/internal/_Set.js","../../node_modules/ramda/es/difference.js","../../node_modules/ramda/es/differenceWith.js","../../node_modules/ramda/es/dissoc.js","../../node_modules/ramda/es/remove.js","../../node_modules/ramda/es/update.js","../../node_modules/ramda/es/dissocPath.js","../../node_modules/ramda/es/divide.js","../../node_modules/ramda/es/internal/_xdrop.js","../../node_modules/ramda/es/drop.js","../../node_modules/ramda/es/internal/_xtake.js","../../node_modules/ramda/es/take.js","../../node_modules/ramda/es/internal/_dropLast.js","../../node_modules/ramda/es/internal/_xdropLast.js","../../node_modules/ramda/es/dropLast.js","../../node_modules/ramda/es/internal/_dropLastWhile.js","../../node_modules/ramda/es/internal/_xdropLastWhile.js","../../node_modules/ramda/es/dropLastWhile.js","../../node_modules/ramda/es/internal/_xdropRepeatsWith.js","../../node_modules/ramda/es/last.js","../../node_modules/ramda/es/dropRepeatsWith.js","../../node_modules/ramda/es/dropRepeats.js","../../node_modules/ramda/es/internal/_xdropWhile.js","../../node_modules/ramda/es/dropWhile.js","../../node_modules/ramda/es/or.js","../../node_modules/ramda/es/either.js","../../node_modules/ramda/es/empty.js","../../node_modules/ramda/es/takeLast.js","../../node_modules/ramda/es/endsWith.js","../../node_modules/ramda/es/eqBy.js","../../node_modules/ramda/es/eqProps.js","../../node_modules/ramda/es/evolve.js","../../node_modules/ramda/es/internal/_xfind.js","../../node_modules/ramda/es/find.js","../../node_modules/ramda/es/internal/_xfindIndex.js","../../node_modules/ramda/es/findIndex.js","../../node_modules/ramda/es/internal/_xfindLast.js","../../node_modules/ramda/es/findLast.js","../../node_modules/ramda/es/internal/_xfindLastIndex.js","../../node_modules/ramda/es/findLastIndex.js","../../node_modules/ramda/es/flatten.js","../../node_modules/ramda/es/flip.js","../../node_modules/ramda/es/forEach.js","../../node_modules/ramda/es/forEachObjIndexed.js","../../node_modules/ramda/es/fromPairs.js","../../node_modules/ramda/es/groupBy.js","../../node_modules/ramda/es/groupWith.js","../../node_modules/ramda/es/gt.js","../../node_modules/ramda/es/gte.js","../../node_modules/ramda/es/hasPath.js","../../node_modules/ramda/es/has.js","../../node_modules/ramda/es/hasIn.js","../../node_modules/ramda/es/identical.js","../../node_modules/ramda/es/ifElse.js","../../node_modules/ramda/es/inc.js","../../node_modules/ramda/es/includes.js","../../node_modules/ramda/es/indexBy.js","../../node_modules/ramda/es/indexOf.js","../../node_modules/ramda/es/init.js","../../node_modules/ramda/es/innerJoin.js","../../node_modules/ramda/es/insert.js","../../node_modules/ramda/es/insertAll.js","../../node_modules/ramda/es/uniqBy.js","../../node_modules/ramda/es/uniq.js","../../node_modules/ramda/es/intersection.js","../../node_modules/ramda/es/intersperse.js","../../node_modules/ramda/es/internal/_objectAssign.js","../../node_modules/ramda/es/objOf.js","../../node_modules/ramda/es/internal/_stepCat.js","../../node_modules/ramda/es/into.js","../../node_modules/ramda/es/invert.js","../../node_modules/ramda/es/invertObj.js","../../node_modules/ramda/es/invoker.js","../../node_modules/ramda/es/is.js","../../node_modules/ramda/es/isEmpty.js","../../node_modules/ramda/es/join.js","../../node_modules/ramda/es/juxt.js","../../node_modules/ramda/es/keysIn.js","../../node_modules/ramda/es/lastIndexOf.js","../../node_modules/ramda/es/internal/_isNumber.js","../../node_modules/ramda/es/length.js","../../node_modules/ramda/es/lens.js","../../node_modules/ramda/es/lensIndex.js","../../node_modules/ramda/es/lensPath.js","../../node_modules/ramda/es/lensProp.js","../../node_modules/ramda/es/lt.js","../../node_modules/ramda/es/lte.js","../../node_modules/ramda/es/mapAccum.js","../../node_modules/ramda/es/mapAccumRight.js","../../node_modules/ramda/es/mapObjIndexed.js","../../node_modules/ramda/es/match.js","../../node_modules/ramda/es/mathMod.js","../../node_modules/ramda/es/maxBy.js","../../node_modules/ramda/es/sum.js","../../node_modules/ramda/es/mean.js","../../node_modules/ramda/es/median.js","../../node_modules/ramda/es/memoizeWith.js","../../node_modules/ramda/es/merge.js","../../node_modules/ramda/es/mergeAll.js","../../node_modules/ramda/es/mergeWithKey.js","../../node_modules/ramda/es/mergeDeepWithKey.js","../../node_modules/ramda/es/mergeDeepLeft.js","../../node_modules/ramda/es/mergeDeepRight.js","../../node_modules/ramda/es/mergeDeepWith.js","../../node_modules/ramda/es/mergeLeft.js","../../node_modules/ramda/es/mergeRight.js","../../node_modules/ramda/es/mergeWith.js","../../node_modules/ramda/es/min.js","../../node_modules/ramda/es/minBy.js","../../node_modules/ramda/es/modulo.js","../../node_modules/ramda/es/move.js","../../node_modules/ramda/es/multiply.js","../../node_modules/ramda/es/negate.js","../../node_modules/ramda/es/none.js","../../node_modules/ramda/es/nthArg.js","../../node_modules/ramda/es/o.js","../../node_modules/ramda/es/internal/_of.js","../../node_modules/ramda/es/of.js","../../node_modules/ramda/es/omit.js","../../node_modules/ramda/es/once.js","../../node_modules/ramda/es/internal/_assertPromise.js","../../node_modules/ramda/es/otherwise.js","../../node_modules/ramda/es/over.js","../../node_modules/ramda/es/pair.js","../../node_modules/ramda/es/internal/_createPartialApplicator.js","../../node_modules/ramda/es/partial.js","../../node_modules/ramda/es/partialRight.js","../../node_modules/ramda/es/partition.js","../../node_modules/ramda/es/pathEq.js","../../node_modules/ramda/es/pathOr.js","../../node_modules/ramda/es/pathSatisfies.js","../../node_modules/ramda/es/pick.js","../../node_modules/ramda/es/pickAll.js","../../node_modules/ramda/es/pickBy.js","../../node_modules/ramda/es/pipeK.js","../../node_modules/ramda/es/prepend.js","../../node_modules/ramda/es/product.js","../../node_modules/ramda/es/useWith.js","../../node_modules/ramda/es/project.js","../../node_modules/ramda/es/propEq.js","../../node_modules/ramda/es/propIs.js","../../node_modules/ramda/es/propOr.js","../../node_modules/ramda/es/propSatisfies.js","../../node_modules/ramda/es/props.js","../../node_modules/ramda/es/range.js","../../node_modules/ramda/es/reduceRight.js","../../node_modules/ramda/es/reduceWhile.js","../../node_modules/ramda/es/reduced.js","../../node_modules/ramda/es/times.js","../../node_modules/ramda/es/repeat.js","../../node_modules/ramda/es/replace.js","../../node_modules/ramda/es/scan.js","../../node_modules/ramda/es/sequence.js","../../node_modules/ramda/es/set.js","../../node_modules/ramda/es/sort.js","../../node_modules/ramda/es/sortBy.js","../../node_modules/ramda/es/sortWith.js","../../node_modules/ramda/es/split.js","../../node_modules/ramda/es/splitAt.js","../../node_modules/ramda/es/splitEvery.js","../../node_modules/ramda/es/splitWhen.js","../../node_modules/ramda/es/startsWith.js","../../node_modules/ramda/es/subtract.js","../../node_modules/ramda/es/symmetricDifference.js","../../node_modules/ramda/es/symmetricDifferenceWith.js","../../node_modules/ramda/es/takeLastWhile.js","../../node_modules/ramda/es/internal/_xtakeWhile.js","../../node_modules/ramda/es/takeWhile.js","../../node_modules/ramda/es/internal/_xtap.js","../../node_modules/ramda/es/tap.js","../../node_modules/ramda/es/internal/_isRegExp.js","../../node_modules/ramda/es/test.js","../../node_modules/ramda/es/andThen.js","../../node_modules/ramda/es/toLower.js","../../node_modules/ramda/es/toPairs.js","../../node_modules/ramda/es/toPairsIn.js","../../node_modules/ramda/es/toUpper.js","../../node_modules/ramda/es/transduce.js","../../node_modules/ramda/es/transpose.js","../../node_modules/ramda/es/traverse.js","../../node_modules/ramda/es/trim.js","../../node_modules/ramda/es/tryCatch.js","../../node_modules/ramda/es/unapply.js","../../node_modules/ramda/es/unary.js","../../node_modules/ramda/es/uncurryN.js","../../node_modules/ramda/es/unfold.js","../../node_modules/ramda/es/union.js","../../node_modules/ramda/es/uniqWith.js","../../node_modules/ramda/es/unionWith.js","../../node_modules/ramda/es/unless.js","../../node_modules/ramda/es/unnest.js","../../node_modules/ramda/es/until.js","../../node_modules/ramda/es/valuesIn.js","../../node_modules/ramda/es/view.js","../../node_modules/ramda/es/when.js","../../node_modules/ramda/es/where.js","../../node_modules/ramda/es/whereEq.js","../../node_modules/ramda/es/without.js","../../node_modules/ramda/es/xor.js","../../node_modules/ramda/es/xprod.js","../../node_modules/ramda/es/zip.js","../../node_modules/ramda/es/zipObj.js","../../node_modules/ramda/es/zipWith.js","../../node_modules/ramda/es/thunkify.js","../../node_modules/ramda/es/index.js","../../src/core/env.js","../../src/core/schema.js","../../node_modules/hyperapp/src/index.js","../../src/core/framework.js","../../src/core/components.js","../../src/bindings/bulma.js","src.js"],"names":["isIntStr","x","n","normalizePath","path","frags","split","i","length","join","appendPath","base","charAt","base1","pathToArray","frag0","frag","upcount","splice","shift","concat","normalizePathArray","rv","push","typeOf","Array","isArray","emptyObject","emptyArray","isJsonValue","commonPath","path1","path2","frags1","frags2","normalizeQuery","obj","omitEmptyString","p","F","T","_isPlaceholder","a","_curry1","fn","f1","arguments","apply","_curry2","f2","b","_b","_a","add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combinedIdx","combined","argsIdx","left","curryN","addIndex","origFn","list","args","prototype","slice","call","_curry3","f3","c","_c","adjust","start","_idx","_list","val","Object","toString","_isTransformer","_dispatchable","methodNames","xf","pop","transducer","_reduced","init","_xall","XAll","f","all","_xfBase","input","max","_map","functor","len","_isString","_isArrayLike","nodeType","hasOwnProperty","XWrap","acc","_xwrap","bind","thisObj","_arrayReduce","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","_reduce","reduce","TypeError","_xmap","XMap","_has","prop","_isArguments","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","map","key","isInteger","nth","offset","paths","pathsArray","pathAr","pluck","allPass","preds","always","and","_xany","XAny","any","anyPass","ap","applyF","applyX","_aperture","limit","_xaperture","XAperture","pos","full","store","getCopy","aperture","append","el","values","props","vals","applySpec","mapValues","spec","v","applyTo","ascend","aa","bb","assoc","isNil","assocPath","nextObj","arr","nAry","binary","_isFunction","type","liftN","arity","lifted","lift","both","g","curry","_makeFlat","recursive","flatt","jlen","j","ilen","_forceReduced","_flatCat","preservingReduced","ret","rxf","_xchain","chain","monad","clamp","min","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","clone","comparator","pred","not","complement","_pipe","_checkForMethod","methodname","fromIndex","toIndex","tail","Infinity","pipe","reverse","compose","composeK","last","_pipeP","ctx","then","pipeP","composeP","head","_identity","identity","pipeWith","headList","tailList","composeWith","_arrayFromIterator","_includesWith","_functionName","match","String","_objectIs","is","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","name","message","size","entries","keysA","extendedStackA","extendedStackB","_indexOf","inf","indexOf","_includes","_quote","s","replace","_toISOString","pad","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter","XFilter","filter","filterable","reject","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","cond","pairs","pair","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","construct","converge","after","fns","context","_xreduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","reduceBy","elt","countBy","elem","dec","defaultTo","descend","_Set","_nativeSet","Set","_items","hasOrAdd","has","shouldAdd","set","prevSize","bIdx","difference","first","second","out","firstLen","secondLen","toFilterOut","differenceWith","dissoc","remove","count","update","dissocPath","divide","_xdrop","XDrop","drop","Math","_xtake","XTake","take","dropLast","_xdropLast","XDropLast","_dropLast","dropLastWhile","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_dropLastWhile","_xdropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","dropRepeatsWith","dropRepeats","_xdropWhile","XDropWhile","dropWhile","or","either","empty","takeLast","endsWith","suffix","eqBy","eqProps","obj1","obj2","evolve","transformations","object","transformation","_xfind","XFind","found","find","_xfindIndex","XFindIndex","findIndex","_xfindLast","XFindLast","findLast","_xfindLastIndex","XFindLastIndex","lastIdx","findLastIndex","flatten","flip","forEach","forEachObjIndexed","keyList","fromPairs","groupBy","groupWith","res","nextidx","gt","gte","hasPath","_path","hasIn","identical","ifElse","condition","onTrue","onFalse","inc","includes","indexBy","target","innerJoin","ys","insert","insertAll","elts","uniqBy","appliedItem","uniq","intersection","list1","list2","lookupList","filteredList","intersperse","separator","_objectAssign","output","nextKey","assign","objOf","_stepCatArray","_stepCatString","_stepCatObject","_stepCat","into","invert","invertObj","invoker","method","Ctor","isEmpty","juxt","keysIn","lastIndexOf","_isNumber","lens","getter","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","lt","lte","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","str","mathMod","m","maxBy","sum","mean","median","width","memoizeWith","mFn","cache","merge","l","r","mergeAll","mergeWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeLeft","mergeRight","mergeWith","_","_l","_r","minBy","modulo","move","from","to","positiveFrom","positiveTo","multiply","negate","none","nthArg","o","_of","of","omit","names","index","once","called","_assertPromise","otherwise","over","Identity","fst","snd","_createPartialApplicator","partial","partialRight","partition","pathEq","pathOr","pathSatisfies","propPath","pick","pickAll","pickBy","pipeK","prepend","product","useWith","transformers","project","propEq","propIs","propOr","propSatisfies","ps","range","reduceRight","reduceWhile","reduced","times","RangeError","repeat","regex","replacement","scan","sequence","traversable","sortBy","sortWith","splitAt","array","splitEvery","splitWhen","prefix","startsWith","subtract","symmetricDifference","symmetricDifferenceWith","takeLastWhile","_xtakeWhile","XTakeWhile","takeWhile","_xtap","XTap","tap","_isRegExp","andThen","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","outerlist","innerlist","traverse","trim","ws","zeroWidth","hasProtoTrim","beginRx","endRx","tryCatch","tryer","catcher","e","unapply","unary","uncurryN","depth","currentDepth","endIdx","unfold","seed","union","uniqWith","unionWith","unless","whenFalseFn","unnest","until","valuesIn","vs","view","Const","when","whenTrueFn","where","testObj","whereEq","without","xor","Boolean","xprod","zip","zipObj","zipWith","thunkify","fnArgs","init2","makeSlot","invalid","touched","wrap","data","inner","es","rec","strip","tree","root","makeEnv","schemaDb","validate","trackUpdate","updatePoint","extra","isSame","env0","env1","internPath","externPath","intersect","path0","beginUpdateTracking","env","endUpdateTracking","console","log","JSON","stringify","extract","epath","slot","getSlot","setSlot","slot0","location","type0","value1","lis","basePath","lookup","pathToLookup","npath","value0","mapDeep","reduceDeep","cur","duplicate","fromEnv","toEnv","setExtra","info","getExtra","setRet","env2","doReturn","isEnv","nullable","lastChar","defaultMessages","buildDb","schema","db","properties","items","makeMessage","dict","code","arg","format","testType","defaultRules","param","required","switchRequired","tag","tagProperty","types","same","multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","maxItems","minItems","rules","coerce","h","attributes","rest","children","node","nodeName","app","state","actions","container","skipRender","rootElement","oldNode","recycleElement","element","toLowerCase","childNodes","nodeValue","lifecycle","isRecycling","globalState","wiredActions","wireStateToActions","action","getPartialState","scheduleRender","setPartialState","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","appendChild","updateAttribute","insertBefore","removeElement","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","newKey","keyedNode","setTimeout","eventListener","event","currentTarget","events","oldValue","style","cssText","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","removeChild","removeChildren","ondestroy","onremove","API","E","touchAll","countValidationErrors","validationErrors","errors","_cur","foldValidity","sleep","ms","Promise","fulfill","startReordering","endReordering","getReordering","openDialog","closeDialog","getDialog","openFeedback","closeFeedback","getFeedback","setPage","current","getPage","nextPage","prevPage","setSwitch","shown","getSwitch","toggleSwitch","openProgress","unknown","closeProgress","getProgress","withEnv","handler","result1","onPromiseThen","res1","editItem","itemPath","actionUrl","formPath","form","createItem","commitItem","listPath","options","opts","errorSelector","commitMethod","loadMethod","totalCountHeader","loadingName","successName","failureName","actionPath","dataPath","loadUrl","queryPath","itemsPath","totalCountPath","numErrors","window","targetEl","querySelector","scrollIntoView","url","fetchOptions","mode","body","headers","fetch","response","ok","error","statusText","fetchOptions2","qs","URLSearchParams","json","total","get","catch","discardItem","deleteItem","deleteMethod","confirmName","_unused","loadItems","page","pageProperty","searchItems","submit","reorder","fromPath","reset","editPart","partPath","createPart","pathToAdd","commitPart","nextIdPath","idProperty","nextId","discardPart","removePart","copyPart","updateEnabledApis","containerEl","updates","_pointer","_prevEnv","S","updatePointer","actions0","onTextboxInput","ev","dataset","mgPath","mgValueAttribute","baseEnv","slotb","slotb0","onTextboxBlur","onSliderInput","onSliderChange","onListboxChange","onRadioChange","onCheckboxChange","mgCheckedAttribute","onSmartControlChange","onUpdate","mgUpdate","parse","mgContext","func","onPromiseSettle","mgName","mgResult","requestAnimationFrame","h0","defaultAttributeMap","textbox","oninput","onblur","class","invalidClass","fixedClass","slider","onchange","listbox","option","selected","radio","checked","checkbox","smartControl","field","updateButton","onclick","settleButton","dialog","shownClass","feedback","progress","reorderable","active","activeClass","onstart","onend","pagination","prev","siblings","listItem","modal","flatpickr","pickr","suspendRoot","rootEl","documentElement","mgSuspendCount","overflow","resumeRoot","prepareToDestroy","anim","tid","onfinish","clearTimeout","p1","p2","C","addClass","attr","clazz","addAttr","playTextbox","Textbox","playSlider","Slider","convertChildren","selectedAttr","valueAttr","playListbox","Listbox","playRadio","Radio","playCheckbox","Checkbox","playSmartControl","playField","playUpdateButton","UpdateButton","playSettleButton","SettleButton","dialogOnCreate","fade","animate","opacity","scale","transform","dialogOnRemove","playDialog","feedbackOnCreate","zoom","slide","getBoundingClientRect","maxHeight","height","feedbackOnRemove","playFeedback","duration","timeoutId","playProgress","playPage","playSwitch","switch","playReorderable","getSiblings","pageNo","firstPageNo","lastPageNo","playPagination","limitProperty","query","totalCount","ceil","listItemOnCreate","listItemOnRemove","playListItem","playModal","createFlatpickr","defaultValue","clearerId","config","instance","cfg","defaultDate","onChange","selectedDates","dateStr","clearer","getElementById","clear","destroy","playFlatpickr","createPickr","useAsButton","default","Pickr","create","on","color","toHEXA","hide","setColor","playPickr","Input","Textarea","Select","dataMgPath","dataMgValueAttribute","disabled","dataMgCheckedAttribute","Field","label","DeleteButton","Clickable","Dialog","title","createMessage","hideCancelButton","okLabel","cancelLabel","Notification","Progress","Modal","defaultShow","Pagination","show","prevLabel","nextLabel","loadItemsOptions","pno","DatePicker","ColorPicker","iconClass","iconText","instantiateSortable","onStart","onEnd","marker","effectiveOptions","nextElementSibling","oldIndex","toPath","newIndex","Sortable","firstChild","ReorderableMenu","zipPattern","date","date2","color2","email","firstTime","secondTime","address","pref","city","street","bld","persons","complementAddress","zipSlot","YubinBango","Core","region","locality","onZipCreated","maybeComplementAddress","pickrOptions","components","preview","hue","interaction","hex","rgba","hsla","hsva","cmyk","save"],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["//@ts-check\r\n\r\n/**\r\n * Returns true if x is an string representation of an integer value.\r\n * @param {any} x\r\n * @returns {boolean} \r\n */\r\nexport const isIntStr = (x) => {\r\n  const n = +x\r\n  return (n % 1 === 0 && x === \"\" + n)\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n * @returns {string}\r\n */\r\nexport const normalizePath = (path) => {\r\n  const frags = path.split('/')\r\n  for (let i = 1; i < frags.length; i++) {\r\n    if (isIntStr(frags[i])) {\r\n      frags[i] = '*'\r\n    }\r\n  }\r\n  return frags.join('/')\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} base \r\n * @param {string} path \r\n * @returns {string}\r\n */\r\nexport const appendPath = (base, path) => {\r\n  if (path.charAt(0) == '' || path.charAt(0) == '/') return path  // absolute path\r\n  if (path === '0') return base  // easy frequent case\r\n  \r\n  const base1 = pathToArray(base)\r\n  let frag0 = path.split('/')\r\n  let frag = []\r\n  let unused = null\r\n\r\n  let upcount = +frag0[0]\r\n  frag = base1\r\n  if (upcount > frag.length) {\r\n    upcount = frag.length\r\n  }\r\n  frag.splice(frag.length - upcount, upcount)\r\n\r\n  frag0.shift()\r\n\r\n  if (frag0.length == 0 && frag.length == 0) return ''\r\n  return '/' + frag.concat(frag0).join('/')\r\n}\r\n\r\n/**\r\n * \r\n * @param {(string | number)[]} path\r\n * @returns {string} \r\n */\r\nexport const normalizePathArray = (path) => {\r\n  let rv = ''\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (typeof path[i] == 'number' || isIntStr(path[i])) {\r\n      rv += '/*'\r\n    } else {\r\n      rv += '/' + path[i]\r\n    }\r\n  }\r\n  return rv\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n * @returns {(string | number)[]}\r\n */\r\nexport const pathToArray = (path) => {\r\n  const frags = path.split('/')\r\n  const rv = []\r\n  for (let i = 1; i < frags.length; i++) {\r\n    rv.push(isIntStr(frags[i]) ? +frags[i] : frags[i])\r\n  }\r\n  return rv\r\n}\r\n\r\n/**\r\n * A variant of `typeof`, which handles null and Array appropreately.\r\n * @param {null|array|object|boolean|number|string} x \r\n * @returns {string}\r\n */\r\nexport const typeOf = (x) => x === null ? 'null' : Array.isArray(x) ? 'array' : typeof x\r\n\r\n/**\r\n * @type {{}}\r\n */\r\nexport const emptyObject = {}\r\n\r\n/**\r\n * @template T\r\n * @type {T[]}\r\n */\r\nexport const emptyArray = []\r\n\r\n/**\r\n * Returns true if `x' is json value.\r\n * @param {any} x\r\n * @returns {boolean} \r\n */\r\nexport const isJsonValue = (x) => {\r\n  switch (typeOf(x)) {\r\n    case 'null': \r\n    case 'number': \r\n    case 'boolean': \r\n    case 'string': \r\n    case 'object': \r\n    case 'array': \r\n      return true\r\n    default: \r\n      return false\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} path1 \r\n * @param {string} path2 \r\n * @return {string}\r\n */\r\nexport const commonPath = (path1, path2) => {\r\n  const frags1 = path1.split('/')\r\n  const frags2 = path2.split('/')\r\n  const rv = []\r\n  for (let i = 0; i < frags1.length; i++) {\r\n    if (frags2.length <= i) break\r\n    if (frags1[i] != frags2[i]) break\r\n    rv.push(frags1[i])\r\n  }\r\n  return rv.join('/')\r\n}\r\n\r\n/**\r\n * \r\n * @param {Object} obj \r\n * @param {boolean} omitEmptyString \r\n * @returns {Record<string, string>}\r\n */\r\nexport const normalizeQuery = (obj, omitEmptyString) => {\r\n  const rv = /** @type {Record<string, string>} */ ({})\r\n  for (let p in obj) {\r\n    switch (typeOf(p)) {\r\n      case 'null': \r\n        if (!omitEmptyString) rv[p] = ''\r\n        break\r\n      case 'boolean': \r\n        rv[p] = obj[p] ? 'true' : 'false'\r\n        break\r\n      case 'number': \r\n        rv[p] = \"\" + obj[p]\r\n        break\r\n      case 'string': \r\n        if (omitEmptyString && obj[p] === \"\") break\r\n        rv[p] = obj[p]\r\n        break\r\n    }\r\n  }\r\n  return rv\r\n}","/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\n\nexport default F;","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _concat from \"./internal/_concat.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndex;","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n\n  var start = idx < 0 ? list.length : 0;\n\n  var _idx = start + idx;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nexport default _xall;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xall from \"./internal/_xall.js\";\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nexport default paths;","import _curry2 from \"./internal/_curry2.js\";\nimport paths from \"./paths.js\";\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nexport default path;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nexport default allPass;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both, R.xor\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nexport default and;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nexport default _xany;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xany from \"./internal/_xany.js\";\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nexport default anyPass;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport map from \"./map.js\";\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}","import _concat from \"./_concat.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nexport default _xaperture;","import _aperture from \"./internal/_aperture.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xaperture from \"./internal/_xaperture.js\";\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nexport default aperture;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import _curry1 from \"./internal/_curry1.js\";\nimport apply from \"./apply.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\nimport keys from \"./keys.js\";\nimport values from \"./values.js\"; // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nexport default applySpec;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nexport default applyTo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nexport default assoc;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport assoc from \"./assoc.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\nexport default assocPath;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nexport default nAry;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nexport default binary;","export default function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport ap from \"./ap.js\";\nimport curryN from \"./curryN.js\";\nimport map from \"./map.js\";\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;","import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport and from \"./and.js\";\nimport lift from \"./lift.js\";\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","import curry from \"./curry.js\";\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from \"./_isArrayLike.js\";\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from \"./_forceReduced.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","import _curry2 from \"./_curry2.js\";\nimport _flatCat from \"./_flatCat.js\";\nimport map from \"../map.js\";\n\nvar _xchain =\n/*#__PURE__*/\n_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\nexport default _xchain;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\nimport _xchain from \"./internal/_xchain.js\";\nimport map from \"./map.js\";\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nexport default clamp;","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}","import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nexport default clone;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar comparator =\n/*#__PURE__*/\n_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\nexport default comparator;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import lift from \"./lift.js\";\nimport not from \"./not.js\";\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;","import pipe from \"./pipe.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}","import chain from \"./chain.js\";\nimport compose from \"./compose.js\";\nimport map from \"./map.js\";\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @deprecated since v0.26.0\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       const get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       const getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\n\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from \"./internal/_arity.js\";\nimport _pipeP from \"./internal/_pipeP.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The first argument may have any arity; the remaining arguments\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @deprecated since v0.26.0\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\n\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from \"./pipeP.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The last arguments may have any arity; the remaining\n * arguments must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @deprecated since v0.26.0\n * @example\n *\n *      const db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      const lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      const lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      const followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\n\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n\n  return pipeP.apply(this, reverse(arguments));\n}","import nth from \"./nth.js\";\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport head from \"./head.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport tail from \"./tail.js\";\nimport identity from \"./identity.js\";\n/**\n * Performs left-to-right function composition using transforming function. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried. Transforming function is not used on the\n * first argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, g(...args)))\n */\n\nvar pipeWith =\n/*#__PURE__*/\n_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\n\nexport default pipeWith;","import _curry2 from \"./internal/_curry2.js\";\nimport pipeWith from \"./pipeWith.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition using transforming function. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried. Transforming function is not used on the\n * last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nexport default composeWith;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport _isString from \"./internal/_isString.js\";\nimport toString from \"./toString.js\";\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport map from \"./map.js\";\nimport max from \"./max.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nexport default cond;","import _curry2 from \"./internal/_curry2.js\";\nimport curry from \"./curry.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nexport default constructN;","import _curry1 from \"./internal/_curry1.js\";\nimport constructN from \"./constructN.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\nvar contains =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default contains;","import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;","import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import reduceBy from \"./reduceBy.js\";\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from \"./add.js\";\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\nvar dec =\n/*#__PURE__*/\nadd(-1);\nexport default dec;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nexport default descend;","import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import _curry2 from \"./internal/_curry2.js\";\nimport _Set from \"./internal/_Set.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default difference;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default differenceWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n});\n\nexport default dissoc;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","import _curry3 from \"./internal/_curry3.js\";\nimport adjust from \"./adjust.js\";\nimport always from \"./always.js\";\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\n\nexport default update;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\nimport dissoc from \"./dissoc.js\";\nimport remove from \"./remove.js\";\nimport update from \"./update.js\";\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdrop from \"./internal/_xdrop.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtake from \"./internal/_xtake.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;","import take from \"../take.js\";\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nexport default _xdropLast;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLast from \"./internal/_dropLast.js\";\nimport _xdropLast from \"./internal/_xdropLast.js\";\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nexport default dropLast;","import slice from \"../slice.js\";\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}","import _curry2 from \"./_curry2.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile =\n/*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\n\nexport default _xdropLastWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLastWhile from \"./internal/_dropLastWhile.js\";\nimport _xdropLastWhile from \"./internal/_xdropLastWhile.js\";\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nexport default dropLastWhile;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\n_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\n\nexport default _xdropRepeatsWith;","import nth from \"./nth.js\";\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport last from \"./last.js\";\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nexport default dropRepeatsWith;","import _curry1 from \"./internal/_curry1.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile =\n/*#__PURE__*/\n_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nexport default _xdropWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropWhile from \"./internal/_xdropWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nexport default dropWhile;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either, R.xor\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport lift from \"./lift.js\";\nimport or from \"./or.js\";\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nexport default either;","import _curry1 from \"./internal/_curry1.js\";\nimport _isArguments from \"./internal/_isArguments.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\n\nexport default empty;","import _curry2 from \"./internal/_curry2.js\";\nimport drop from \"./drop.js\";\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport takeLast from \"./takeLast.js\";\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nexport default endsWith;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfind from \"./internal/_xfind.js\";\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindIndex from \"./internal/_xfindIndex.js\";\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast =\n/*#__PURE__*/\n_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\n\nexport default _xfindLast;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLast from \"./internal/_xfindLast.js\";\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nexport default findLast;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex =\n/*#__PURE__*/\n_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\n\nexport default _xfindLastIndex;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLastIndex from \"./internal/_xfindLastIndex.js\";\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;","import _curry1 from \"./internal/_curry1.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nexport default flatten;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;","import _curry2 from \"./internal/_curry2.js\";\nimport keys from \"./keys.js\";\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nexport default groupBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nexport default groupWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\nvar gt =\n/*#__PURE__*/\n_curry2(function gt(a, b) {\n  return a > b;\n});\n\nexport default gt;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\nvar gte =\n/*#__PURE__*/\n_curry2(function gte(a, b) {\n  return a >= b;\n});\n\nexport default gte;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default hasPath;","import _curry2 from \"./internal/_curry2.js\";\nimport hasPath from \"./hasPath.js\";\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nexport default has;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n\nexport default hasIn;","import _objectIs from \"./internal/_objectIs.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nexport default identical;","import _curry3 from \"./internal/_curry3.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;","import add from \"./add.js\";\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\nvar inc =\n/*#__PURE__*/\nadd(1);\nexport default inc;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default includes;","import reduceBy from \"./reduceBy.js\";\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from \"./internal/_curry2.js\";\nimport _indexOf from \"./internal/_indexOf.js\";\nimport _isArray from \"./internal/_isArray.js\";\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nexport default indexOf;","import slice from \"./slice.js\";\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\nvar init =\n/*#__PURE__*/\nslice(0, -1);\nexport default init;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _filter from \"./internal/_filter.js\";\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\n\nexport default innerJoin;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\nvar insert =\n/*#__PURE__*/\n_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\nexport default insert;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\nvar insertAll =\n/*#__PURE__*/\n_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nexport default insertAll;","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqBy;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport flip from \"./flip.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\n\nexport default intersection;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\n\nvar intersperse =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nexport default intersperse;","import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;","import _objectAssign from \"./_objectAssign.js\";\nimport _identity from \"./_identity.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _isTransformer from \"./_isTransformer.js\";\nimport objOf from \"../objOf.js\";\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from \"./internal/_clone.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _isTransformer from \"./internal/_isTransformer.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _stepCat from \"./internal/_stepCat.js\";\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nexport default into;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport keys from \"./keys.js\";\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport curryN from \"./curryN.js\";\nimport toString from \"./toString.js\";\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n\nexport default is;","import _curry1 from \"./internal/_curry1.js\";\nimport empty from \"./empty.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;","import invoker from \"./invoker.js\";\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nexport default join;","import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nexport default keysIn;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;","import _curry1 from \"./internal/_curry1.js\";\nimport lens from \"./lens.js\";\nimport nth from \"./nth.js\";\nimport update from \"./update.js\";\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over, R.nth\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nexport default lensIndex;","import _curry1 from \"./internal/_curry1.js\";\nimport assocPath from \"./assocPath.js\";\nimport lens from \"./lens.js\";\nimport path from \"./path.js\";\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;","import _curry1 from \"./internal/_curry1.js\";\nimport assoc from \"./assoc.js\";\nimport lens from \"./lens.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nexport default lt;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nexport default lte;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\nvar mapAccum =\n/*#__PURE__*/\n_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccum;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\n\nvar mapAccumRight =\n/*#__PURE__*/\n_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccumRight;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport keys from \"./keys.js\";\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nexport default match;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\nvar maxBy =\n/*#__PURE__*/\n_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\nexport default maxBy;","import add from \"./add.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;","import _curry1 from \"./internal/_curry1.js\";\nimport sum from \"./sum.js\";\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nexport default mean;","import _curry1 from \"./internal/_curry1.js\";\nimport mean from \"./mean.js\";\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nexport default median;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nexport default memoizeWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default merge;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nexport default mergeAll;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nexport default mergeWithKey;","import _curry3 from \"./internal/_curry3.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nexport default mergeLeft;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default mergeRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nexport default mergeWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\nvar min =\n/*#__PURE__*/\n_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\n\nexport default min;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\nvar minBy =\n/*#__PURE__*/\n_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\nexport default minBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\nvar move =\n/*#__PURE__*/\n_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\nvar negate =\n/*#__PURE__*/\n_curry1(function negate(n) {\n  return -n;\n});\n\nexport default negate;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport all from \"./all.js\";\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nexport default nthArg;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\nvar o =\n/*#__PURE__*/\n_curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _of from \"./internal/_of.js\";\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nexport default of;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nexport default once;","import _isFunction from \"./_isFunction.js\";\nimport _toString from \"./_toString.js\";\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.then\n * @example\n *\n *      var failedFetch = (id) => Promise.reject('bad ID');\n *      var useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' })\n *\n *      //recoverFromFailure :: String -> Promise ({firstName, lastName})\n *      var recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.then(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log)\n */\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nexport default otherwise;","import _curry3 from \"./internal/_curry3.js\"; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function (x) {\n  return {\n    value: x,\n    map: function (f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nexport default pair;","import _arity from \"./_arity.js\";\nimport _curry2 from \"./_curry2.js\";\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nexport default partial;","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\nimport flip from \"./flip.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nexport default partialRight;","import filter from \"./filter.js\";\nimport juxt from \"./juxt.js\";\nimport reject from \"./reject.js\";\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\nimport path from \"./path.js\";\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;","import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport path from \"./path.js\";\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;","import _curry3 from \"./internal/_curry3.js\";\nimport path from \"./path.js\";\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n *      R.pathSatisfies(R.is(Object), [], {x: {y: 2}}); //=> true\n */\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return pred(path(propPath, obj));\n});\n\nexport default pathSatisfies;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pick;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default pickBy;","import composeK from \"./composeK.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\n\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","import multiply from \"./multiply.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nexport default product;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;","import _map from \"./internal/_map.js\";\nimport identity from \"./identity.js\";\nimport pickAll from \"./pickAll.js\";\nimport useWith from \"./useWith.js\";\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nexport default project;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\nexport default propEq;","import _curry3 from \"./internal/_curry3.js\";\nimport is from \"./is.js\";\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n\nexport default propIs;","import _curry3 from \"./internal/_curry3.js\";\nimport pathOr from \"./pathOr.js\";\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return pathOr(val, [p], obj);\n});\n\nexport default propOr;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\nexport default propSatisfies;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return path([p], obj);\n  });\n});\n\nexport default props;","import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nexport default reduceRight;","import _curryN from \"./internal/_curryN.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 === 1;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nexport default reduceWhile;","import _curry1 from \"./internal/_curry1.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is only available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nexport default reduced;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nexport default replace;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\nvar scan =\n/*#__PURE__*/\n_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default scan;","import _curry2 from \"./internal/_curry2.js\";\nimport ap from \"./ap.js\";\nimport map from \"./map.js\";\nimport prepend from \"./prepend.js\";\nimport reduceRight from \"./reduceRight.js\";\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nexport default sequence;","import _curry3 from \"./internal/_curry3.js\";\nimport always from \"./always.js\";\nimport over from \"./over.js\";\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nexport default sort;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\nvar sortWith =\n/*#__PURE__*/\n_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nexport default sortWith;","import invoker from \"./invoker.js\";\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `sep`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nexport default split;","import _curry2 from \"./internal/_curry2.js\";\nimport length from \"./length.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nexport default splitEvery;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\nvar splitWhen =\n/*#__PURE__*/\n_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\nexport default splitWhen;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport take from \"./take.js\";\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nexport default startsWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\nvar subtract =\n/*#__PURE__*/\n_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\nexport default subtract;","import _curry2 from \"./internal/_curry2.js\";\nimport concat from \"./concat.js\";\nimport difference from \"./difference.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nexport default symmetricDifference;","import _curry3 from \"./internal/_curry3.js\";\nimport concat from \"./concat.js\";\nimport differenceWith from \"./differenceWith.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nexport default symmetricDifferenceWith;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nexport default takeLastWhile;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile =\n/*#__PURE__*/\n_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\n\nexport default _xtakeWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtakeWhile from \"./internal/_xtakeWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nexport default takeWhile;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap =\n/*#__PURE__*/\n_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\n\nexport default _xtap;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtap from \"./internal/_xtap.js\";\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from \"./internal/_cloneRegExp.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _isRegExp from \"./internal/_isRegExp.js\";\nimport toString from \"./toString.js\";\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n */\n\nvar andThen =\n/*#__PURE__*/\n_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n\n  return p.then(f);\n});\n\nexport default andThen;","import invoker from \"./invoker.js\";\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\nvar toPairsIn =\n/*#__PURE__*/\n_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nexport default toPairsIn;","import invoker from \"./invoker.js\";\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from \"./internal/_reduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 === 1;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\nvar transpose =\n/*#__PURE__*/\n_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nexport default transpose;","import _curry3 from \"./internal/_curry3.js\";\nimport map from \"./map.js\";\nimport sequence from \"./sequence.js\";\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\n\nexport default traverse;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from \"./internal/_arity.js\";\nimport _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nexport default uncurryN;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nexport default unfold;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport compose from \"./compose.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqWith;","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport uniqWith from \"./uniqWith.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nexport default unionWith;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","import _identity from \"./internal/_identity.js\";\nimport chain from \"./chain.js\";\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nexport default unnest;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nexport default until;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\nvar valuesIn =\n/*#__PURE__*/\n_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});\n\nexport default valuesIn;","import _curry2 from \"./internal/_curry2.js\"; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function (x) {\n  return {\n    value: x,\n    'fantasy-land/map': function () {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport map from \"./map.js\";\nimport where from \"./where.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nexport default whereEq;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport flip from \"./flip.js\";\nimport reject from \"./reject.js\";\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nexport default without;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\nvar xor =\n/*#__PURE__*/\n_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nexport default xor;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\nvar zip =\n/*#__PURE__*/\n_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zip;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\nvar zipWith =\n/*#__PURE__*/\n_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zipWith;","import curryN from \"./curryN.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\n\nvar thunkify =\n/*#__PURE__*/\n_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;","export { default as F } from \"./F.js\";\nexport { default as T } from \"./T.js\";\nexport { default as __ } from \"./__.js\";\nexport { default as add } from \"./add.js\";\nexport { default as addIndex } from \"./addIndex.js\";\nexport { default as adjust } from \"./adjust.js\";\nexport { default as all } from \"./all.js\";\nexport { default as allPass } from \"./allPass.js\";\nexport { default as always } from \"./always.js\";\nexport { default as and } from \"./and.js\";\nexport { default as any } from \"./any.js\";\nexport { default as anyPass } from \"./anyPass.js\";\nexport { default as ap } from \"./ap.js\";\nexport { default as aperture } from \"./aperture.js\";\nexport { default as append } from \"./append.js\";\nexport { default as apply } from \"./apply.js\";\nexport { default as applySpec } from \"./applySpec.js\";\nexport { default as applyTo } from \"./applyTo.js\";\nexport { default as ascend } from \"./ascend.js\";\nexport { default as assoc } from \"./assoc.js\";\nexport { default as assocPath } from \"./assocPath.js\";\nexport { default as binary } from \"./binary.js\";\nexport { default as bind } from \"./bind.js\";\nexport { default as both } from \"./both.js\";\nexport { default as call } from \"./call.js\";\nexport { default as chain } from \"./chain.js\";\nexport { default as clamp } from \"./clamp.js\";\nexport { default as clone } from \"./clone.js\";\nexport { default as comparator } from \"./comparator.js\";\nexport { default as complement } from \"./complement.js\";\nexport { default as compose } from \"./compose.js\";\nexport { default as composeK } from \"./composeK.js\";\nexport { default as composeP } from \"./composeP.js\";\nexport { default as composeWith } from \"./composeWith.js\";\nexport { default as concat } from \"./concat.js\";\nexport { default as cond } from \"./cond.js\";\nexport { default as construct } from \"./construct.js\";\nexport { default as constructN } from \"./constructN.js\";\nexport { default as contains } from \"./contains.js\";\nexport { default as converge } from \"./converge.js\";\nexport { default as countBy } from \"./countBy.js\";\nexport { default as curry } from \"./curry.js\";\nexport { default as curryN } from \"./curryN.js\";\nexport { default as dec } from \"./dec.js\";\nexport { default as defaultTo } from \"./defaultTo.js\";\nexport { default as descend } from \"./descend.js\";\nexport { default as difference } from \"./difference.js\";\nexport { default as differenceWith } from \"./differenceWith.js\";\nexport { default as dissoc } from \"./dissoc.js\";\nexport { default as dissocPath } from \"./dissocPath.js\";\nexport { default as divide } from \"./divide.js\";\nexport { default as drop } from \"./drop.js\";\nexport { default as dropLast } from \"./dropLast.js\";\nexport { default as dropLastWhile } from \"./dropLastWhile.js\";\nexport { default as dropRepeats } from \"./dropRepeats.js\";\nexport { default as dropRepeatsWith } from \"./dropRepeatsWith.js\";\nexport { default as dropWhile } from \"./dropWhile.js\";\nexport { default as either } from \"./either.js\";\nexport { default as empty } from \"./empty.js\";\nexport { default as endsWith } from \"./endsWith.js\";\nexport { default as eqBy } from \"./eqBy.js\";\nexport { default as eqProps } from \"./eqProps.js\";\nexport { default as equals } from \"./equals.js\";\nexport { default as evolve } from \"./evolve.js\";\nexport { default as filter } from \"./filter.js\";\nexport { default as find } from \"./find.js\";\nexport { default as findIndex } from \"./findIndex.js\";\nexport { default as findLast } from \"./findLast.js\";\nexport { default as findLastIndex } from \"./findLastIndex.js\";\nexport { default as flatten } from \"./flatten.js\";\nexport { default as flip } from \"./flip.js\";\nexport { default as forEach } from \"./forEach.js\";\nexport { default as forEachObjIndexed } from \"./forEachObjIndexed.js\";\nexport { default as fromPairs } from \"./fromPairs.js\";\nexport { default as groupBy } from \"./groupBy.js\";\nexport { default as groupWith } from \"./groupWith.js\";\nexport { default as gt } from \"./gt.js\";\nexport { default as gte } from \"./gte.js\";\nexport { default as has } from \"./has.js\";\nexport { default as hasIn } from \"./hasIn.js\";\nexport { default as hasPath } from \"./hasPath.js\";\nexport { default as head } from \"./head.js\";\nexport { default as identical } from \"./identical.js\";\nexport { default as identity } from \"./identity.js\";\nexport { default as ifElse } from \"./ifElse.js\";\nexport { default as inc } from \"./inc.js\";\nexport { default as includes } from \"./includes.js\";\nexport { default as indexBy } from \"./indexBy.js\";\nexport { default as indexOf } from \"./indexOf.js\";\nexport { default as init } from \"./init.js\";\nexport { default as innerJoin } from \"./innerJoin.js\";\nexport { default as insert } from \"./insert.js\";\nexport { default as insertAll } from \"./insertAll.js\";\nexport { default as intersection } from \"./intersection.js\";\nexport { default as intersperse } from \"./intersperse.js\";\nexport { default as into } from \"./into.js\";\nexport { default as invert } from \"./invert.js\";\nexport { default as invertObj } from \"./invertObj.js\";\nexport { default as invoker } from \"./invoker.js\";\nexport { default as is } from \"./is.js\";\nexport { default as isEmpty } from \"./isEmpty.js\";\nexport { default as isNil } from \"./isNil.js\";\nexport { default as join } from \"./join.js\";\nexport { default as juxt } from \"./juxt.js\";\nexport { default as keys } from \"./keys.js\";\nexport { default as keysIn } from \"./keysIn.js\";\nexport { default as last } from \"./last.js\";\nexport { default as lastIndexOf } from \"./lastIndexOf.js\";\nexport { default as length } from \"./length.js\";\nexport { default as lens } from \"./lens.js\";\nexport { default as lensIndex } from \"./lensIndex.js\";\nexport { default as lensPath } from \"./lensPath.js\";\nexport { default as lensProp } from \"./lensProp.js\";\nexport { default as lift } from \"./lift.js\";\nexport { default as liftN } from \"./liftN.js\";\nexport { default as lt } from \"./lt.js\";\nexport { default as lte } from \"./lte.js\";\nexport { default as map } from \"./map.js\";\nexport { default as mapAccum } from \"./mapAccum.js\";\nexport { default as mapAccumRight } from \"./mapAccumRight.js\";\nexport { default as mapObjIndexed } from \"./mapObjIndexed.js\";\nexport { default as match } from \"./match.js\";\nexport { default as mathMod } from \"./mathMod.js\";\nexport { default as max } from \"./max.js\";\nexport { default as maxBy } from \"./maxBy.js\";\nexport { default as mean } from \"./mean.js\";\nexport { default as median } from \"./median.js\";\nexport { default as memoizeWith } from \"./memoizeWith.js\";\nexport { default as merge } from \"./merge.js\";\nexport { default as mergeAll } from \"./mergeAll.js\";\nexport { default as mergeDeepLeft } from \"./mergeDeepLeft.js\";\nexport { default as mergeDeepRight } from \"./mergeDeepRight.js\";\nexport { default as mergeDeepWith } from \"./mergeDeepWith.js\";\nexport { default as mergeDeepWithKey } from \"./mergeDeepWithKey.js\";\nexport { default as mergeLeft } from \"./mergeLeft.js\";\nexport { default as mergeRight } from \"./mergeRight.js\";\nexport { default as mergeWith } from \"./mergeWith.js\";\nexport { default as mergeWithKey } from \"./mergeWithKey.js\";\nexport { default as min } from \"./min.js\";\nexport { default as minBy } from \"./minBy.js\";\nexport { default as modulo } from \"./modulo.js\";\nexport { default as move } from \"./move.js\";\nexport { default as multiply } from \"./multiply.js\";\nexport { default as nAry } from \"./nAry.js\";\nexport { default as negate } from \"./negate.js\";\nexport { default as none } from \"./none.js\";\nexport { default as not } from \"./not.js\";\nexport { default as nth } from \"./nth.js\";\nexport { default as nthArg } from \"./nthArg.js\";\nexport { default as o } from \"./o.js\";\nexport { default as objOf } from \"./objOf.js\";\nexport { default as of } from \"./of.js\";\nexport { default as omit } from \"./omit.js\";\nexport { default as once } from \"./once.js\";\nexport { default as or } from \"./or.js\";\nexport { default as otherwise } from \"./otherwise.js\";\nexport { default as over } from \"./over.js\";\nexport { default as pair } from \"./pair.js\";\nexport { default as partial } from \"./partial.js\";\nexport { default as partialRight } from \"./partialRight.js\";\nexport { default as partition } from \"./partition.js\";\nexport { default as path } from \"./path.js\";\nexport { default as paths } from \"./paths.js\";\nexport { default as pathEq } from \"./pathEq.js\";\nexport { default as pathOr } from \"./pathOr.js\";\nexport { default as pathSatisfies } from \"./pathSatisfies.js\";\nexport { default as pick } from \"./pick.js\";\nexport { default as pickAll } from \"./pickAll.js\";\nexport { default as pickBy } from \"./pickBy.js\";\nexport { default as pipe } from \"./pipe.js\";\nexport { default as pipeK } from \"./pipeK.js\";\nexport { default as pipeP } from \"./pipeP.js\";\nexport { default as pipeWith } from \"./pipeWith.js\";\nexport { default as pluck } from \"./pluck.js\";\nexport { default as prepend } from \"./prepend.js\";\nexport { default as product } from \"./product.js\";\nexport { default as project } from \"./project.js\";\nexport { default as prop } from \"./prop.js\";\nexport { default as propEq } from \"./propEq.js\";\nexport { default as propIs } from \"./propIs.js\";\nexport { default as propOr } from \"./propOr.js\";\nexport { default as propSatisfies } from \"./propSatisfies.js\";\nexport { default as props } from \"./props.js\";\nexport { default as range } from \"./range.js\";\nexport { default as reduce } from \"./reduce.js\";\nexport { default as reduceBy } from \"./reduceBy.js\";\nexport { default as reduceRight } from \"./reduceRight.js\";\nexport { default as reduceWhile } from \"./reduceWhile.js\";\nexport { default as reduced } from \"./reduced.js\";\nexport { default as reject } from \"./reject.js\";\nexport { default as remove } from \"./remove.js\";\nexport { default as repeat } from \"./repeat.js\";\nexport { default as replace } from \"./replace.js\";\nexport { default as reverse } from \"./reverse.js\";\nexport { default as scan } from \"./scan.js\";\nexport { default as sequence } from \"./sequence.js\";\nexport { default as set } from \"./set.js\";\nexport { default as slice } from \"./slice.js\";\nexport { default as sort } from \"./sort.js\";\nexport { default as sortBy } from \"./sortBy.js\";\nexport { default as sortWith } from \"./sortWith.js\";\nexport { default as split } from \"./split.js\";\nexport { default as splitAt } from \"./splitAt.js\";\nexport { default as splitEvery } from \"./splitEvery.js\";\nexport { default as splitWhen } from \"./splitWhen.js\";\nexport { default as startsWith } from \"./startsWith.js\";\nexport { default as subtract } from \"./subtract.js\";\nexport { default as sum } from \"./sum.js\";\nexport { default as symmetricDifference } from \"./symmetricDifference.js\";\nexport { default as symmetricDifferenceWith } from \"./symmetricDifferenceWith.js\";\nexport { default as tail } from \"./tail.js\";\nexport { default as take } from \"./take.js\";\nexport { default as takeLast } from \"./takeLast.js\";\nexport { default as takeLastWhile } from \"./takeLastWhile.js\";\nexport { default as takeWhile } from \"./takeWhile.js\";\nexport { default as tap } from \"./tap.js\";\nexport { default as test } from \"./test.js\";\nexport { default as andThen } from \"./andThen.js\";\nexport { default as times } from \"./times.js\";\nexport { default as toLower } from \"./toLower.js\";\nexport { default as toPairs } from \"./toPairs.js\";\nexport { default as toPairsIn } from \"./toPairsIn.js\";\nexport { default as toString } from \"./toString.js\";\nexport { default as toUpper } from \"./toUpper.js\";\nexport { default as transduce } from \"./transduce.js\";\nexport { default as transpose } from \"./transpose.js\";\nexport { default as traverse } from \"./traverse.js\";\nexport { default as trim } from \"./trim.js\";\nexport { default as tryCatch } from \"./tryCatch.js\";\nexport { default as type } from \"./type.js\";\nexport { default as unapply } from \"./unapply.js\";\nexport { default as unary } from \"./unary.js\";\nexport { default as uncurryN } from \"./uncurryN.js\";\nexport { default as unfold } from \"./unfold.js\";\nexport { default as union } from \"./union.js\";\nexport { default as unionWith } from \"./unionWith.js\";\nexport { default as uniq } from \"./uniq.js\";\nexport { default as uniqBy } from \"./uniqBy.js\";\nexport { default as uniqWith } from \"./uniqWith.js\";\nexport { default as unless } from \"./unless.js\";\nexport { default as unnest } from \"./unnest.js\";\nexport { default as until } from \"./until.js\";\nexport { default as update } from \"./update.js\";\nexport { default as useWith } from \"./useWith.js\";\nexport { default as values } from \"./values.js\";\nexport { default as valuesIn } from \"./valuesIn.js\";\nexport { default as view } from \"./view.js\";\nexport { default as when } from \"./when.js\";\nexport { default as where } from \"./where.js\";\nexport { default as whereEq } from \"./whereEq.js\";\nexport { default as without } from \"./without.js\";\nexport { default as xor } from \"./xor.js\";\nexport { default as xprod } from \"./xprod.js\";\nexport { default as zip } from \"./zip.js\";\nexport { default as zipObj } from \"./zipObj.js\";\nexport { default as zipWith } from \"./zipWith.js\";\nexport { default as thunkify } from \"./thunkify.js\";","//@ts-check\r\n\r\nimport {normalizePath, typeOf, isIntStr, normalizePathArray, appendPath} from './utils'\r\nimport {hasPath as rhasPath, init, path as rpath, assocPath, insert, last, dissoc, remove as rremove, update } from 'ramda'\r\n\r\n/**\r\n * \r\n * @typedef {import(\"./schema\").Json} Json\r\n * @typedef {import(\"./schema\").Schema} Schema\r\n * @typedef {import(\"./schema\").Slot} Slot\r\n * @typedef {import(\"./schema\").SchemaDb} SchemaDb\r\n * @typedef {import(\"./schema\").LookupFunc} LookupFunc\r\n * @typedef {{\r\n *   tree: Json, \r\n *   trackUpdate: boolean\r\n *   updatePoint: ((string|number)[])|null\r\n *   schemaDb: SchemaDb, \r\n *   validate: (value:any, slot:Slot, schema:Schema, lookup:LookupFunc) => Slot\r\n *   extra: {[name:string]:any}\r\n *   ret?: (env:Env) => void\r\n * }} Env\r\n */\r\n\r\n\r\n/**\r\n * see: https://github.com/ramda/ramda/pull/2841\r\n * Anyway, here we fix the original behavior.\r\n * @param {string[]} path \r\n * @param {any} x \r\n * @return {boolean}\r\n */\r\nconst hasPath = (path, x) => {\r\n  if (! path.length) return true\r\n  return rhasPath(path, x)\r\n}\r\n\r\nconst init2 = (list) => {\r\n  return init(init(list))\r\n}\r\n\r\n/**\r\n * \r\n * @param {Json} value \r\n * @return {Slot} \r\n */\r\nconst makeSlot = (value) => {\r\n  const rv = {'@value':value, invalid:false, message:''}\r\n  switch (typeOf(value)) {\r\n    case 'object': // FALLTHRU\r\n    case 'array': \r\n      break\r\n    case 'number': // FALLTHRU\r\n    case 'integer': \r\n      rv.input = '' + value\r\n      rv.touched = false\r\n      break\r\n    case 'boolean': \r\n      rv.input = (value) ? 'true' : 'false'\r\n      rv.touched = false\r\n      break\r\n    case 'null': \r\n      rv.input = ''\r\n      rv.touched = false\r\n      break\r\n    case 'string': \r\n      rv.input = value\r\n      rv.touched = false\r\n      break\r\n  }\r\n  return rv\r\n}\r\n\r\n/**\r\n * \r\n * @param {Json} data \r\n * @returns {Slot}\r\n */\r\nconst wrap = (data) => {\r\n  /** @type {(data:Json) => Slot} */\r\n  const inner = (data) => {\r\n    switch (typeOf(data)) {\r\n      case 'array': \r\n        const es = []\r\n        for (let i = 0; i < /** @type {Json[]} */ (data).length; i++) {\r\n          es[i] = inner(data[i])\r\n        }\r\n        return makeSlot(es)\r\n      case 'object': \r\n        const rec = {}\r\n        for (let p in /** @type {{[name:string]:Json}} */ (data)) {\r\n          rec[p] = inner(data[p])\r\n        }\r\n        return makeSlot(rec)\r\n      default: \r\n        return makeSlot(data)\r\n    }\r\n  }\r\n  return inner(data)\r\n}\r\n\r\n/**\r\n * \r\n * @param {Json} tree \r\n * @returns {Json}\r\n */\r\nconst strip = (tree) => {\r\n  const root = tree['@value']\r\n  switch (typeOf(root)) {\r\n    case 'array': \r\n      const es = []\r\n      for (let i = 0; i < root.length; i++) {\r\n        es[i] = strip(root[i])\r\n      }\r\n      return es\r\n    case 'object': \r\n      const rec = {}\r\n      for (let p in root) {\r\n        rec[p] = strip(root[p])\r\n      }\r\n      return rec\r\n    default: \r\n      return root\r\n  }\r\n}\r\n\r\n/**\r\n * Makes env.\r\n * @param {Json} data \r\n * @param {SchemaDb} schemaDb \r\n * @param {(value:any, slot:Slot, schema:Schema, lookup:LookupFunc) => Slot} validate\r\n * @param {boolean} trackUpdate\r\n * @returns {Env}\r\n */\r\nexport const makeEnv = (data, schemaDb, validate, trackUpdate) => {\r\n  const tree = wrap(data)\r\n  return {\r\n    tree, \r\n    trackUpdate, \r\n    updatePoint: trackUpdate ? [] : null, \r\n    schemaDb, \r\n    validate, \r\n    extra: {}\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {Env} env0 \r\n * @param {Env} env1 \r\n * @returns {boolean}\r\n */\r\nexport const isSame = (env0, env1) => {\r\n  return (env0.tree === env1.tree && env0.extra === env1.extra)\r\n}\r\n\r\n/**\r\n * Internalizes a path\r\n * @param {string} path \r\n * @returns {(string|number)[]}\r\n */\r\nconst internPath = (path) => {\r\n  const frags = path.split('/')\r\n  const rv = []\r\n  for (let i = 1; i < frags.length; i++) {\r\n    rv.push('@value')\r\n    rv.push(isIntStr(frags[i]) ? +frags[i] : frags[i])\r\n  }\r\n  return rv\r\n}\r\n\r\n/**\r\n * \r\n * @param {(string|number)[]} path \r\n * @returns {string}\r\n */\r\nconst externPath = (path) => {\r\n  let rv = \"\"\r\n  for (let i = 0; i < path.length; i += 2) {\r\n    rv += \"/\" + path[i + 1]\r\n  }\r\n  return rv\r\n}\r\n\r\n/**\r\n * \r\n * @param {((string|number)[])|null} path0 \r\n * @param {((string|number)[])|null} path1\r\n * @returns {((string|number)[])|null} \r\n */\r\nconst intersect = (path0, path1) => {\r\n  if (path0 === null) return path1\r\n  if (path1 === null) return path0\r\n\r\n  const rv = []\r\n  for (let i = 0; i < path0.length; i += 2) {\r\n    if (i >= path1.length) break\r\n    if (path0[i + 1] !== path1[i + 1]) break\r\n    rv.push(path0[i])\r\n    rv.push(path0[i + 1])\r\n  }\r\n  return rv\r\n}\r\n\r\n/**\r\n * \r\n * @param {Env} env \r\n * @returns {Env}\r\n */\r\nexport const beginUpdateTracking = (env) => {\r\n  // Essentially, `updatePoint' should be set to null, but it can be omitted \r\n  // because the value when disabled is null.\r\n  return {...env, trackUpdate:true}\r\n}\r\n\r\n/**\r\n * \r\n * @param {Env} env \r\n * @returns {[string|null, Env]}\r\n */\r\nexport const endUpdateTracking = (env) => {\r\n  const updatePoint = env.updatePoint ? externPath(env.updatePoint) : null\r\n  console.log('update occurred at ' + JSON.stringify(updatePoint))\r\n  return [\r\n    updatePoint, \r\n    {...env, trackUpdate:false, updatePoint:null}\r\n  ]\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n * @param {Env} env \r\n * @returns {boolean}\r\n */\r\nexport const test = (path, env) => {\r\n  return hasPath(/** @type {string[]} */ (internPath(path)), env.tree)\r\n}\r\n\r\n/**\r\n * Extracts a subtree of Env.\r\n * @param {string} path\r\n * @param {Env} env\r\n * @returns {Json}\r\n */\r\nexport const extract = (path, env) => {\r\n  const epath = /** @type {string[]} */ (internPath(path))\r\n  const slot = rpath(epath, env.tree)\r\n  if (! slot) {\r\n    throw new Error('extract/1: not found: ' + path)\r\n  }\r\n  return strip(slot)\r\n}\r\n\r\n/**\r\n * Low-level api.\r\n * @param {string} path \r\n * @param {Env} env\r\n * @returns {Slot} \r\n */\r\nexport const getSlot = (path, env) => {\r\n  const epath = /** @type {string[]} */ (internPath(path))\r\n  const slot = rpath(epath, env.tree)\r\n  if (! slot) {\r\n    throw new Error('getSlot/1: not found: ' + path)\r\n  }\r\n  return slot\r\n}\r\n\r\n/**\r\n * Low-level api. This function executes neither validation nor coercion.\r\n * @param {string} path \r\n * @param {Slot} slot \r\n * @param {Env} env\r\n * @returns {Env} \r\n * \r\n * slot value must be a scalar.\r\n */\r\nexport const setSlot = (path, slot, env) => {\r\n  const epath = /** @type {string[]} */ (internPath(path))\r\n  const slot0 = rpath(epath, env.tree)\r\n  if (! slot0) {\r\n    throw new Error('setSlot/1: not found: ' + path)\r\n  }\r\n  switch (typeOf(slot0['@value'])) {\r\n    case 'null': \r\n    case 'boolean': \r\n    case 'number': \r\n    case 'string': \r\n    case 'undefined': \r\n      break\r\n    default: \r\n      throw new Error('setSlot/2: not a scalar: ' + path)\r\n  }\r\n  const tree = assocPath(epath, slot, env.tree)\r\n  const updatePoint = env.trackUpdate ? intersect(env.updatePoint, epath) : env.updatePoint\r\n  return {...env, tree, updatePoint}\r\n}\r\n\r\n/**\r\n * Adds value to env. `add' function of JSON patch.\r\n * @param {string} path \r\n * @param {Json} value \r\n * @param {Env} env \r\n * @returns {Env}\r\n */\r\nexport const add = (path, value, env) => {\r\n  const epath = /** @type {string[]} */ (internPath(path))\r\n  const location = init2(epath)\r\n  const name = last(epath)\r\n  const slot0 = rpath(location, env.tree)\r\n  const type0 = typeOf(slot0['@value'])\r\n  if (type0 != 'object' && type0 != 'array') {\r\n    throw new Error('add/1 neither an object nor an array: ' + path)\r\n  }\r\n  if (type0 == 'array') {\r\n    // insert into array\r\n    const index = (name === '-') ? slot0['@value'].length : name\r\n    if (typeof index != 'number' || index % 1 !== 0) {\r\n      throw new Error('add/2 invalid index: ' + path)\r\n    }\r\n    if (index < 0 || index > slot0['@value'].length) {\r\n      throw new Error('add/3 index out of range: ' + path)\r\n    }\r\n    const value1 = wrap(value)\r\n    const lis = insert(index, value1, slot0['@value'])\r\n    const slot = makeSlot(lis)\r\n    const tree = assocPath(location, slot, env.tree)\r\n    // Insertion to a list is an update not to an item but to the list.\r\n    const updatePoint = env.trackUpdate ? intersect(env.updatePoint, location) : env.updatePoint\r\n    return {...env, tree, updatePoint}\r\n  } else {\r\n    // define or replace into object\r\n    if (typeof name != 'string') {\r\n      throw new Error('add/4 invalid name: ' + path)\r\n    }\r\n    const value1 = wrap(value)\r\n    const rec = {...slot0['@value'], [name]:value1}\r\n    const slot = makeSlot(rec)\r\n    const tree = assocPath(location, slot, env.tree)\r\n    // Adding a property is an update to an object, while replacing a property is an update to an property value.\r\n    const updatePoint = !env.trackUpdate ? env.updatePoint \r\n      : intersect(env.updatePoint, (name in slot0['@value']) ? epath : location)\r\n    return {...env, tree, updatePoint}\r\n  }\r\n}\r\n\r\n/**\r\n * Removes a value specified by path from env. `remove' function of JSON patch.\r\n * @param {string} path \r\n * @param {Env} env \r\n * @returns {Env}\r\n */\r\nexport const remove = (path, env) => {\r\n  const epath = /** @type {string[]} */ (internPath(path))\r\n  const location = init2(epath)\r\n  const name = last(epath)\r\n  const slot0 = rpath(location, env.tree)\r\n  const type0 = typeOf(slot0['@value'])\r\n  if (type0 != 'object' && type0 != 'array') {\r\n    throw new Error('remove/1 neither an object nor an array: ' + path)\r\n  }\r\n  if (type0 == 'array') {\r\n    // removes from array\r\n    if (typeof name != 'number' || name % 1 !== 0) {\r\n      throw new Error('remove/2 invalid index: ' + path)\r\n    }\r\n    if (name < 0 || name >= slot0['@value'].length) {\r\n      throw new Error('remove/3 out of range: ' + path)\r\n    }\r\n    const lis = rremove(name, 1, slot0['@value'])\r\n    const slot = makeSlot(lis)\r\n    const tree = assocPath(location, slot, env.tree)\r\n    const updatePoint = env.trackUpdate ? intersect(env.updatePoint, location) : env.updatePoint\r\n    return {...env, tree, updatePoint}\r\n  } else {\r\n    // delete property from object\r\n    if (! slot0['@value'].hasOwnProperty(name)) {\r\n      throw new Error('remove/4: property not found: ' + path)\r\n    }\r\n    const rec = dissoc(name, slot0['@value'])\r\n    const slot = makeSlot(rec)\r\n    const tree = assocPath(location, slot, env.tree)\r\n    const updatePoint = env.trackUpdate ? intersect(env.updatePoint, location) : env.updatePoint\r\n    return {...env, tree, updatePoint}\r\n  }\r\n}\r\n\r\n/**\r\n * Replaces a value specified by path into value.  Implements replace function of JSON patch.\r\n * @param {string} path \r\n * @param {Json} value \r\n * @param {Env} env \r\n * @returns {Env}\r\n */\r\nexport const replace = (path, value, env) => {\r\n  const epath = /** @type {string[]} */ (internPath(path))\r\n  if (epath.length == 0) {\r\n    // replace whole data\r\n    const tree = wrap(value)\r\n    const updatePoint = env.trackUpdate ? [] : env.updatePoint\r\n    return {...env, tree, updatePoint}\r\n  }\r\n  const location = init2(epath)\r\n  const name = last(epath)\r\n  const slot0 = rpath(location, env.tree)\r\n  const type0 = typeOf(slot0['@value'])\r\n  if (type0 != 'object' && type0 != 'array') {\r\n    throw new Error('replace/1 neither an object nor an array: ' + path)\r\n  }\r\n  if (type0 == 'array') {\r\n    // replace an element in array\r\n    if (typeof name != 'number' || name % 1 !== 0) {\r\n      throw new Error('replace/2 invalid index: ' + path)\r\n    }\r\n    if (name < 0 || name >= slot0['@value'].length) {\r\n      throw new Error('replace/3 out of range: ' + path)\r\n    }\r\n    const value1 = wrap(value)\r\n    const lis = update(name, value1, slot0['@value'])\r\n    const slot = makeSlot(lis)\r\n    const tree = assocPath(location, slot, env.tree)\r\n    const updatePoint = env.trackUpdate ? intersect(env.updatePoint, epath) : env.updatePoint\r\n    return {...env, tree, updatePoint}\r\n  } else {\r\n    // replace a property of object\r\n    if (typeof name != 'string') {\r\n      throw new Error('replace/4 invalid name: ' + path)\r\n    }\r\n    if (!(name in slot0['@value'])) {\r\n      throw new Error('replace/5 undefined property: ' + path)\r\n    }\r\n    const value1 = wrap(value)\r\n    const rec = {...slot0['@value'], [name]:value1}\r\n    const slot = makeSlot(rec)\r\n    const tree = assocPath(location, slot, env.tree)\r\n    const updatePoint = env.trackUpdate ? intersect(env.updatePoint, epath) : env.updatePoint\r\n    return {...env, tree, updatePoint}\r\n  }\r\n}\r\n\r\n/**\r\n * Moves a value located in from, to a location specified by path.  Implements move function of JSON patch.\r\n * @param {string} from \r\n * @param {string} path \r\n * @param {Env} env\r\n * @returns {Env} \r\n */\r\nexport const move = (from, path, env) => {\r\n  const value = extract(from, env)\r\n  env = remove(from, env)\r\n  env = add(path, value, env)\r\n  return env\r\n}\r\n\r\n/**\r\n * Copies a value located in from, to a location specified by path.  Impelementing copy function of JSON patch.\r\n * @param {string} from \r\n * @param {string} path \r\n * @param {Env} env\r\n * @returns {Env} \r\n */\r\nexport const copy = (from, path, env) => {\r\n  const value = extract(from, env)\r\n  env = add(path, value, env)\r\n  return env\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n * @param {Env} env\r\n * @returns {Env} \r\n */\r\nexport const validate = (path, env) => {\r\n  let basePath = null\r\n\r\n  /**\r\n   * \r\n   * @param {string} path \r\n   * @returns {Json}\r\n   */\r\n  const lookup = (path) => {\r\n    const pathToLookup = appendPath(basePath, path)\r\n    return extract(pathToLookup, env)\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Slot} slot0 \r\n   * @param {string} npath\r\n   * @param {string} path\r\n   * @returns {Slot} \r\n   */\r\n  const inner = (slot0, npath, path) => {\r\n    const value0 = slot0['@value']\r\n    switch (typeOf(value0)) {\r\n      case 'array': \r\n        const lis = []\r\n        for (let i = 0; i < (/** @type {Json[]} */(value0)).length; i++) {\r\n          lis[i] = inner(value0[i], npath + '/*', path + '/' + i)\r\n        }\r\n        basePath = path\r\n        return env.validate(lis, slot0, env.schemaDb[npath], lookup)\r\n      case 'object': \r\n        const rec = {}\r\n        for (let p in  /** @type {{[name:string]:Json}} */(value0)) {\r\n          rec[p] = inner(value0[p], npath + '/' + p, path + '/' + p)\r\n        }\r\n        basePath = path\r\n        return env.validate(rec, slot0, env.schemaDb[npath], lookup)\r\n      default: \r\n        basePath = path\r\n        const slot = env.validate(value0, slot0, env.schemaDb[npath], lookup)\r\n        if (slot['@value'] !== value0) {\r\n          throw new Error('validate/0: value changed: ' + path)\r\n        }\r\n        return slot\r\n    }\r\n  }\r\n\r\n  const epath = internPath(path)\r\n  const slot0 = rpath(epath, env.tree)\r\n  if (! slot0) {\r\n    throw new Error('validate/1: not found: ' + path)\r\n  }\r\n  const slot = inner(slot0, normalizePath(path), path)\r\n  const tree = assocPath(epath, slot, env.tree)\r\n  return {...env, tree}\r\n}\r\n\r\n/**\r\n * By f, maps every slot descending to a location specified by path.\r\n * @param {(slot:Slot, path:string) => Slot} f \r\n * @param {string} path \r\n * @param {Env} env \r\n * @returns {Env}\r\n */\r\nexport const mapDeep = (f, path, env) => {\r\n  const inner = (slot0, path) => {\r\n    const value0 = slot0['@value']\r\n    switch (typeOf(value0)) {\r\n      case 'array': \r\n        const lis = []\r\n        for (let i = 0; i < value0.length; i++) {\r\n          lis[i] = inner(value0[i], path + '/' + i)\r\n        }\r\n        return {...f(slot0, path), '@value':lis}\r\n      case 'object': \r\n        const rec = {}\r\n        for (let p in value0) {\r\n          rec[p] = inner(value0[p], path + '/' + p)\r\n        }\r\n        return {...f(slot0, path), '@value':rec}\r\n      default: \r\n        return {...f(slot0, path), '@value':value0}\r\n    }\r\n  }\r\n  const epath = internPath(path)\r\n  const slot0 = rpath(epath, env.tree)\r\n  if (! slot0) {\r\n    throw new Error('mapDeep/1: not found: ' + path)\r\n  }\r\n  const slot = inner(slot0, path)\r\n  const tree = assocPath(epath, slot, env.tree)\r\n  return {...env, tree}\r\n}\r\n\r\n/**\r\n * By f, deeply reduces a subtree of path.\r\n * @template T\r\n * @param {(cur:T, slot:Slot, path:String) => T} f \r\n * @param {T} cur \r\n * @param {string} path \r\n * @param {Env} env \r\n */\r\nexport const reduceDeep = (f, cur, path, env) => {\r\n  const inner = (cur, slot, path) => {\r\n    const value0 = slot['@value']\r\n    switch (typeOf(value0)) {\r\n      case 'array': \r\n        for (let i = 0; i < value0.length; i++) {\r\n          cur = inner(cur, value0[i], path + '/' + i)\r\n        }\r\n        return f(cur, slot, path)\r\n      case 'object': \r\n        for (let p in value0) {\r\n          cur = inner(cur, value0[p], path + '/' + p)\r\n        }\r\n        return f(cur, slot, path)\r\n      default: \r\n        return f(cur, slot, path)\r\n    }\r\n  }\r\n  const epath = internPath(path)\r\n  const slot = rpath(epath, env.tree)\r\n  if (! slot) {\r\n    throw new Error('reduceDeep/1: not found: ' + path)\r\n  }\r\n  return inner(cur, slot, path)\r\n}\r\n\r\nexport const duplicate = (path, fromEnv, toEnv) => {\r\n  const epath = /** @type {string[]} */ (internPath(path))\r\n  if (epath.length == 0) {\r\n    // duplicate whole data\r\n    const tree = fromEnv.tree\r\n    const updatePoint = toEnv.trackUpdate ? [] : toEnv.updatePoint\r\n    return {...toEnv, tree, updatePoint}\r\n  }\r\n  const location = init2(epath)\r\n  const name = last(epath)\r\n  const slot0 = rpath(location, fromEnv.tree)\r\n  const type0 = typeOf(slot0['@value'])\r\n  if (type0 != 'object' && type0 != 'array') {\r\n    throw new Error('duplicate/1 neither an object nor an array: ' + path)\r\n  }\r\n  if (type0 == 'array') {\r\n    // duplicate an element in an array\r\n    if (typeof name != 'number' || name % 1 !== 0) {\r\n      throw new Error('duplicate/2 invalid index: ' + path)\r\n    }\r\n    if (name < 0 || name >= slot0['@value'].length) {\r\n      throw new Error('duplicate/3 out of range: ' + path)\r\n    }\r\n    const value1 = slot0['@value'][name]\r\n    const lis = update(name, value1, slot0['@value'])\r\n    const slot = makeSlot(lis)\r\n    const tree = assocPath(location, slot, toEnv.tree)\r\n    const updatePoint = toEnv.trackUpdate ? intersect(toEnv.updatePoint, epath) : toEnv.updatePoint\r\n    return {...toEnv, tree, updatePoint}\r\n  } else {\r\n    // duplicate a property of an object\r\n    if (typeof name != 'string') {\r\n      throw new Error('replace/4 invalid name: ' + path)\r\n    }\r\n    if (!(name in slot0['@value'])) {\r\n      throw new Error('replace/5 undefined property: ' + path)\r\n    }\r\n    const value1 = slot0['@value'][name]\r\n    const rec = {...slot0['@value'], [name]:value1}\r\n    const slot = makeSlot(rec)\r\n    const tree = assocPath(location, slot, toEnv.tree)\r\n    const updatePoint = toEnv.trackUpdate ? intersect(toEnv.updatePoint, epath) : toEnv.updatePoint\r\n    return {...toEnv, tree, updatePoint}\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} name \r\n * @param {Object|null} info \r\n * @param {Env} env\r\n * @returns {Env} \r\n */\r\nexport const setExtra = (name, info, env) => {\r\n  if (info === null) {\r\n    const {[name]:_unused, ...extra} = env.extra\r\n    return {...env, extra}\r\n  } else {\r\n    const extra = {...env.extra, [name]:info}\r\n    return {...env, extra}\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} name \r\n * @param {Env} env\r\n * @returns {Object|null} \r\n */\r\nexport const getExtra = (name, env) => {\r\n  return env.extra[name] || null\r\n}\r\n\r\n/**\r\n * \r\n * @param {((env:Env) => void)|null} ret \r\n * @param {Env} env \r\n * @returns {Env}\r\n */\r\nexport const setRet = (ret, env) => {\r\n  if (ret) return {...env, ret}\r\n  const {ret:_unused, ...env2} = env\r\n  return env2\r\n}\r\n\r\n/**\r\n * \r\n * @param {Env} env\r\n * @returns {void} \r\n */\r\nexport const doReturn = (env) => {\r\n  if (env.ret) {\r\n    env.ret(env)\r\n  } else {\r\n    throw new Error('doReturn/0: no ret')\r\n  }\r\n}\r\n\r\nexport const isEnv = (x) => {\r\n  return (x != null \r\n    && typeof x == \"object\" \r\n    && \"tree\" in x)\r\n}","//@ts-check\r\n\r\nimport {emptyObject, typeOf, isJsonValue, appendPath} from './utils'\r\n\r\n/**\r\n * @typedef {null|number|string|boolean|any[]|{[name:string]:any}} Json \r\n * @typedef {{\r\n *   invalid?:boolean, \r\n *   message?:string, \r\n *   touched?:boolean, \r\n *   input?:string, \r\n *   ['@value']?:Json\r\n * }} Slot\r\n * @typedef {import(\"./env\").Env} Env\r\n * @typedef {{\r\n *   type:string, \r\n *   [rule:string]:Json\r\n * }} Schema\r\n * @typedef {(path:string) => Json} LookupFunc\r\n * @typedef {(param:Json, value:Json, lookup:LookupFunc) => true|string} RuleFunc\r\n * @typedef {{[name:string]:RuleFunc}} Rules\r\n * @typedef {{[key:string]:string}} Dictionary\r\n * @typedef {{[path:string]:Schema}} SchemaDb\r\n * \r\n */\r\n\r\n/**\r\n * Returns true if type specification allows null.\r\n * @param {string|null|undefined} type a type in schema\r\n */\r\nconst nullable = (type) => {\r\n  if (! type) return true\r\n  const lastChar = type.charAt(type.length - 1)\r\n  return type == 'null' || lastChar == '?'\r\n}\r\n\r\n/**\r\n * Maps error codes to messages. Use your own messages for localization.\r\n * @type {Dictionary}\r\n */\r\nexport const defaultMessages = {\r\n  'schema.ruleError.enum': 'Invalid input',   // 不正な入力です\r\n  'schema.ruleError.const': 'Invalid input',   // 不正な入力です\r\n  'schema.ruleError.required': 'Missing properties',  // フィールドが不足しています\r\n  'schema.ruleError.switchRequired': 'Unknown instance',  // 未知のインスタンスです\r\n  'schema.ruleError.same': 'Not a same value', \r\n  'schema.ruleError.multipleOf': 'Please enter a multiple of {{0}}',  // %Sの倍数を入力してください\r\n  'schema.ruleError.maximum': 'Please enter {{0}} or less',  // %s以下を入力してください\r\n  'schema.ruleError.exclusiveMaximum': 'Please enter a number less than {{0}}',  // %sより小さい数を入力してください\r\n  'schema.ruleError.minimum': 'Please enter {{0}} or more',  // %s以上を入力してください\r\n  'schema.ruleError.exclusiveMinimum': 'Please enter a number more than {{0}}',  // %sより大きい数を入力してください\r\n  'schema.ruleError.maxLength': 'Please enter no more than {{0}} characters',  // %s文字以下で入力してください\r\n  'schema.ruleError.minLength0': 'Please enter',  // 入力してください\r\n  'schema.ruleError.minLength': 'Please enter at least {{0}} characters',  // %s文字以上で入力してください\r\n  'schema.ruleError.pattern': 'Invalid format',  // 形式が不正です\r\n  'schema.ruleError.maxItems': 'Please make it less than or equal to {{0}}',  // %s個以下にしてください\r\n  'schema.ruleError.minItems': 'Please make it more than or equal to {{0}}',  // %s個以上にしてください\r\n  'schema.valueError.generic': 'Invalid value',  // 不正な値です\r\n  'schema.valueError.null': 'Invalid input', \r\n  'schema.valueError.number': 'Please input a number', \r\n  'schema.valueError.number?': 'Please input a number', \r\n  'schema.valueError.integer': 'Please input an integer', \r\n  'schema.valueError.integer?': 'Please input an integer', \r\n  'schema.valueError.boolean': 'Please input true or false', \r\n  'schema.valueError.boolean?': 'Please input true or false', \r\n  'schema.valueError.string': 'Invalid input', \r\n  'schema.valueError.array': 'Invalid input', \r\n  'schema.valueError.array?': 'Invalid input', \r\n  'schema.valueError.object': 'Invalid input', \r\n  'schema.valueError.object?': 'Invalid input'\r\n}\r\n\r\n/**\r\n * \r\n * @param {Json} schema \r\n * @returns {SchemaDb}\r\n */\r\nexport const buildDb = (schema) => {\r\n  const db = /** @type SchemaDb */ ({})\r\n  const inner = (schema, path) => {\r\n    db[path] = schema\r\n    switch (schema.type) {\r\n      case 'object': \r\n      case 'object?': \r\n        for (let p in schema.properties) {\r\n          inner(schema.properties[p], path + '/' + p)\r\n        }\r\n        break\r\n      case 'array': \r\n      case 'array?': \r\n        inner(schema.items, path + '/*')\r\n        break\r\n      default: \r\n        break\r\n    }\r\n  }\r\n  inner(schema, \"\")\r\n  return db\r\n}\r\n\r\n/**\r\n * Makes a localized message for error code.\r\n * @param {Dictionary} dict \r\n * @param {string} code an error code\r\n * @param {Json} arg a parameter for validation rule\r\n * @return {string}\r\n */\r\nconst makeMessage = (dict, code, arg = null) => {\r\n  const format = dict[code] || (code + ': {{0}}')\r\n  return format.replace('{{0}}', '' + arg)\r\n}\r\n\r\n/**\r\n * Returns true if the value is in an specified type\r\n * @param {Json} value\r\n * @param {string} type \r\n * @returns {boolean}\r\n */\r\nconst testType = (value, type) => {\r\n  if (! type) return true\r\n  if (value === null) {\r\n    return nullable(type)\r\n  } else {\r\n    switch (type) {\r\n      case 'null': \r\n        return false\r\n      case 'number':  // FALLTHRU\r\n      case 'number?': \r\n        return typeof value == 'number'\r\n      case 'integer':  // FALLTHRU\r\n      case 'integer?': \r\n        return (typeof value == 'number' && value % 1 === 0)\r\n      case 'boolean':  // FALLTHRU\r\n      case 'boolean?': \r\n        return typeof value == 'boolean'\r\n      case 'string': \r\n        return typeof value == 'string'\r\n      case 'object':  // FALLTHRU\r\n      case 'object?': \r\n        return (typeof value == 'object' && value !== null)\r\n      case 'array':  // FALLTHRU\r\n      case 'array?': \r\n        return Array.isArray(value)\r\n      default: \r\n        throw new Error('unknown type: ' + type)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * validation rules.\r\n * @type {Rules}\r\n */\r\nexport const defaultRules = {\r\n  'enum': (param, value) => {\r\n    if (! Array.isArray(param)) throw new Error('invalid parameter')\r\n    for (let i = 0; i < param.length; i++) {\r\n      if (param[i] === value) return true\r\n    }\r\n    return 'schema.ruleError.enum'\r\n  }, \r\n  'const': (param, value) => {\r\n    if (param === value) return true\r\n    return 'schema.ruleError.const'\r\n  }, \r\n  required: (param, value) => {\r\n    if (! Array.isArray(param)) throw new Error('invalid parameter')\r\n    if (typeof value != 'object') return true\r\n    for (let i = 0; i < param.length; i++) {\r\n      if (! value.hasOwnProperty(param[i])) return 'schema.ruleError.required'\r\n    }\r\n    return true\r\n  }, \r\n  switchRequired: (param, value, lookup) => {\r\n    if (typeOf(param) != 'object' || !('tagProperty' in /** @type {object} */ (param))) throw new Error('invalid parameter')\r\n    if (typeOf(value) != 'object') return true\r\n    const tag = /** @type {string} */ (lookup('0/' + param.tagProperty))\r\n    if (!tag || !param.types[tag]) return 'schema.ruleError.switchRequired'\r\n    const required = param.types[tag]\r\n    if (! Array.isArray(required)) throw new Error('invalid parameter')\r\n    for (let i = 0; i < required.length; i++) {\r\n      if (! value.hasOwnProperty(required[i])) return 'schema.ruleError.switchRequired'\r\n    }\r\n    return true\r\n  }, \r\n  same: (param, value, lookup) => {\r\n    if (typeof param != 'string') throw new Error('invalid parameter')\r\n    const target = lookup(param)\r\n    if (target !== value) return 'schema.ruleError.same'\r\n    return true\r\n  }, \r\n  multipleOf: (param, value) => {\r\n    if (typeof param != 'number') throw new Error('invalid parameter')\r\n    if (typeof value != 'number') return true\r\n    if (value % param === 0) return true\r\n    return 'schema.ruleError.multipleOf'\r\n  }, \r\n  maximum: (param, value) => {\r\n    if (typeof value != 'number') return true\r\n    if (param >= value) return true\r\n    return 'schema.ruleError.maximum'\r\n  }, \r\n  exclusiveMaximum: (param, value) => {\r\n    if (typeof value != 'number') return true\r\n    if (param > value) return true\r\n    return 'schema.ruleError.exclusiveMaximum'\r\n  }, \r\n  minimum: (param, value) => {\r\n    if (typeof value != 'number') return true\r\n    if (param <= value) return true\r\n    return 'schema.ruleError.minimum'\r\n  }, \r\n  exclusiveMinimum: (param, value) => {\r\n    if (typeof value != 'number') return true\r\n    if (param < value) return true\r\n    return 'schema.ruleError.exclusiveMinimum'\r\n  }, \r\n  maxLength: (param, value) => {\r\n    if (typeof value != 'string') return true\r\n    if (value.length <= param) return true\r\n    return 'schema.ruleError.maxLength'\r\n  }, \r\n  minLength: (param, value) => {\r\n    if (typeof value != 'string') return true\r\n    if (value.length >= param) return true\r\n    return (param == 1) ? 'schema.ruleError.minLength0' : 'schema.ruleError.minLength'\r\n  }, \r\n  'pattern': (param, value) => {\r\n    if (typeof param != 'string') throw new Error('invalid parameter')\r\n    if (typeof value != 'string') return true\r\n    if (new RegExp(param).test(value)) return true\r\n    return 'schema.ruleError.pattern'\r\n  }, \r\n  maxItems: (param, value) => {\r\n    if (typeof param != 'number') throw new Error('invalid parameter')\r\n    if (! Array.isArray(value)) return true\r\n    if (value.length <= param) return true\r\n    return 'schema.ruleError.maxItems'\r\n  }, \r\n  minItems: (param, value) => {\r\n    if (typeof param != 'number') throw new Error('invalid parameter')\r\n    if (! Array.isArray(value)) return true\r\n    if (value.length >= param) return true\r\n    return 'schema.ruleError.minItems'\r\n  }\r\n}\r\n\r\n/**\r\n * Validates a value with a schema.\r\n * @description shallow validation\r\n * @param {Rules} rules\r\n * @param {Dictionary} dict\r\n * @returns {(value:any, slot:Slot, schema:Schema, lookup:LookupFunc) => Slot} \r\n */\r\nexport const validate = (rules, dict) => (value, slot, schema, lookup) => {\r\n  if (! isJsonValue(value)) {\r\n    const code = (schema && schema.type) ? 'schema.valueError.' + schema.type : 'schema.valueError.generic'\r\n    return {...slot, '@value':value, invalid:true, message:makeMessage(dict, code, null)}\r\n  }\r\n  if (schema && schema.type) {\r\n    if (! testType(value, schema.type)) {\r\n      return {...slot, '@value':value, invalid:true, message:makeMessage(dict, 'schema.typeError.' + schema.type, null)}\r\n    }\r\n  }\r\n\r\n  for (let p in schema) {\r\n    const f = rules[p]\r\n    if (! f) continue\r\n    const result = f(schema[p], value, lookup)\r\n    if (result !== true) {\r\n      const message = makeMessage(dict, result, schema[p])\r\n      return {...slot, '@value':value, invalid:true, message}\r\n    }\r\n  }\r\n  return {...slot, '@value':value, invalid:false, message:''}\r\n}\r\n\r\n/**\r\n * \r\n * @param {Rules} rules \r\n * @param {Dictionary} dict \r\n * @returns {(input:string, slot:Slot, schema:Schema) => Slot}\r\n */\r\nexport const coerce = (rules, dict) => (input, slot, schema) => {\r\n  input = \"\" + input  // coerce to string\r\n  if (! schema) {\r\n    throw new Error('coerce/0: no schema')\r\n  }\r\n  if (! schema.type) {\r\n    throw new Error('coerce/1: type not specified')\r\n  }\r\n  if (['null', 'boolean', 'boolean?', 'integer', 'integer?', 'number', 'number?', 'string'].indexOf(schema.type) == -1) {\r\n    throw new Error('coerce/2: not a coercion enabled type: ' + schema.type)\r\n  }\r\n\r\n  switch (schema.type) {\r\n    case 'null': \r\n      break\r\n    case 'number': \r\n    case 'number?': \r\n      const n = +input\r\n      if (\"\" + n === input) {\r\n        return {'@value':n, input, touched:slot.touched}\r\n      }\r\n      break\r\n    case 'integer': \r\n    case 'integer?': \r\n      const i = +input\r\n      if (\"\" + i === input && i % 1 === 0) {\r\n        return {'@value':i, input, touched:slot.touched}\r\n      }\r\n      break\r\n    case 'boolean': \r\n    case 'boolean?': \r\n      if (input === \"true\" || input === \"false\") {\r\n        return {'@value':input===\"true\", input, touched:slot.touched}\r\n      }\r\n      break\r\n    case 'string': \r\n      return {'@value':input, input, touched:slot.touched}\r\n  }\r\n  if (input == \"\" && nullable(schema.type)) {\r\n    return {'@value':null, input, touched:slot.touched}\r\n  }\r\n  return {input, touched:slot.touched}\r\n}\r\n","export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","//@ts-check\r\n\r\nimport { normalizePath, normalizeQuery } from './utils'\r\nimport * as E from './env'\r\nimport * as S from './schema'\r\nimport { app, h as h0 } from 'hyperapp'\r\n\r\n/**\r\n * \r\n * @typedef {import(\"./schema\").Json} Json\r\n * @typedef {import(\"./schema\").Schema} Schema\r\n * @typedef {import(\"./schema\").Slot} Slot\r\n * @typedef {import(\"./schema\").SchemaDb} SchemaDb\r\n * @typedef {import(\"./schema\").LookupFunc} LookupFunc\r\n * @typedef {import(\"./env\").Env} Env\r\n */\r\n\r\n\r\n /**\r\n  * @namespace\r\n  */\r\nexport const API = {\r\n  // re-export from env\r\n  test: E.test, \r\n  extract: E.extract, \r\n  getSlot: E.getSlot, \r\n  add: E.add, \r\n  remove: E.remove, \r\n  replace: E.replace, \r\n  move: E.move, \r\n  copy: E.copy, \r\n  duplicate: E.duplicate, \r\n  validate: E.validate, \r\n  mapDeep: E.mapDeep, \r\n  reduceDeep: E.reduceDeep, \r\n  getExtra: E.getExtra, \r\n\r\n  /**\r\n   * \r\n   * @param {string} path \r\n   * @param {Env} env\r\n   * @returns {Env} \r\n   */\r\n  touchAll: (path, env) => {\r\n    return E.mapDeep((slot, _path) => ({...slot, touched:true}), path, env)\r\n  }, \r\n\r\n  /**\r\n   * \r\n   * @param {string} path \r\n   * @param {Env} env\r\n   * @returns {number} \r\n   */\r\n  countValidationErrors: (path, env) => {\r\n    return E.reduceDeep((cur, slot, _path) => {\r\n      const d = slot.touched && slot.invalid ? 1 : 0\r\n      return cur + d\r\n    }, 0, path, env)\r\n  }, \r\n\r\n  /**\r\n   * \r\n   * @param {string} path \r\n   * @param {Env} env\r\n   * @returns {string[]} \r\n   */\r\n  validationErrors: (path, env) => {\r\n    const errors = []\r\n    E.reduceDeep((_cur, slot, path) => {\r\n      if (slot.touched && slot.invalid) {\r\n        errors.push(path)\r\n      }\r\n      return null\r\n    }, null, path, env)\r\n    return errors\r\n  }, \r\n\r\n  /**\r\n   * @param {string} path\r\n   * @param {Env} env\r\n   * @returns {{invalid:boolean, message:string}}\r\n   */\r\n  foldValidity: (path, env) => {\r\n    return API.reduceDeep((cur, slot, _path) => {\r\n      if (cur.invalid) return cur\r\n      if (slot.touched && slot.invalid) return {invalid:true, message:slot.message}\r\n      return cur\r\n    }, /** @type {{invalid:boolean,message:string}} */({invalid:false, message:''}), path, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {number} ms\r\n   * @param {Env} env\r\n   * @returns {Promise}\r\n   */\r\n  sleep: (ms, env) => {\r\n    const p = new Promise((fulfill, reject) => {\r\n      setTimeout(() => {\r\n        fulfill(null)\r\n      }, ms)\r\n    })\r\n    E.doReturn(env)\r\n    return p\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Promise}\r\n   */\r\n  startReordering: (name, env) => {\r\n    const p = new Promise((fulfill, reject) => {\r\n      env = E.setExtra(name, {fulfill, reject}, env)\r\n    })\r\n    E.doReturn(env)\r\n    return p\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  endReordering: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    if (! extra) return env\r\n    return E.setExtra(name, null, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {true|null}\r\n   */\r\n  getReordering: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    if (! extra) return null\r\n    return true\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {any} data\r\n   * @param {Env} env\r\n   * @returns {Promise}\r\n   */\r\n  openDialog: (name, data, env) => {\r\n    const p = new Promise((fulfill, reject) => {\r\n      env = E.setExtra(name, {data, fulfill, reject}, env)\r\n    })\r\n    E.doReturn(env)\r\n    return p\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  closeDialog: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    if (! extra) return env\r\n    return E.setExtra(name, null, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {any|null}\r\n   */\r\n  getDialog: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    if (! extra) return null\r\n    return extra.data\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {any} data\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  openFeedback: (name, data, env) => {\r\n    return E.setExtra(name, data, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  closeFeedback: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    if (! extra) return env\r\n    return E.setExtra(name, null, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {any|null}\r\n   */\r\n  getFeedback: (name, env) => {\r\n    return E.getExtra(name, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {number} current\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  setPage: (name, current, env) => {\r\n    return E.setExtra(name, current, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {number}\r\n   */\r\n  getPage: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    return (extra !== null) ? extra : 0\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  nextPage: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    const current = (extra !== null) ? extra : 0\r\n    return E.setExtra(name, current + 1, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  prevPage: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    const current = (extra !== null) ? extra : 0\r\n    return E.setExtra(name, current - 1, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {boolean} shown\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  setSwitch: (name, shown, env) => {\r\n    return E.setExtra(name, shown, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {boolean}\r\n   */\r\n  getSwitch: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    return (extra !== null) ? extra : false\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  toggleSwitch: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    const current = (extra !== null) ? extra : false\r\n    return E.setExtra(name, !current, env)\r\n  }, \r\n\r\n  /*\r\n   * TODO: progress bar, ReadStream, ...\r\n   */\r\n  /**\r\n   * @param {string} name\r\n   * @param {any} unknown\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  openProgress: (name, unknown, env) => {\r\n    return E.setExtra(name, {current:-1}, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  closeProgress: (name, env) => {\r\n    return E.setExtra(name, null, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name\r\n   * @param {Env} env\r\n   * @returns {number|null}\r\n   */\r\n  getProgress: (name, env) => {\r\n    const extra = E.getExtra(name, env)\r\n    if (! extra) return null\r\n    return extra.current\r\n  }, \r\n\r\n  /**\r\n   * @template P\r\n   * @param {Env} env\r\n   * @param {P} p\r\n   * @returns {P}\r\n   */\r\n  withEnv: (env, p) => {\r\n    if (env) E.doReturn(env)\r\n    return p\r\n  }, \r\n\r\n  /**\r\n   * @param {(result:any, env:Env) => any} handler\r\n   * @returns {(result:any) => any}\r\n   */\r\n  wrap: (handler) => {  // Our customized handler :: [result, env] => ...\r\n    return (result) => {  // This is the actual, standard promise handler\r\n      let result1 = null  // We will get the result in this variable.\r\n      const ret = (res1) => {result1 = res1}\r\n      actions.onPromiseThen({result, handler, ret})  // enter into hyperapp. Its result is undefined.\r\n      return result1\r\n    }\r\n  }, \r\n\r\n  /**\r\n   * @param {string} itemPath\r\n   * @param {string} actionUrl\r\n   * @param {string} formPath\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  editItem: (itemPath, actionUrl, formPath, env) => {\r\n    const form = {\r\n      action: actionUrl, \r\n      data: API.extract(itemPath, env)\r\n    }\r\n    return API.add(formPath, form, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {Json} data\r\n   * @param {string} actionUrl\r\n   * @param {string} formPath\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  createItem: (data, actionUrl, formPath, env) => {\r\n    const form = {\r\n      action: actionUrl, \r\n      data\r\n    }\r\n    return API.add(formPath, form, env)\r\n  }, \r\n\r\n  /**\r\n   * @param {string} formPath\r\n   * @param {string} listPath\r\n   * @param {Object} options\r\n   * @param {string} options.errorSelector\r\n   * @param {string} options.commitMethod\r\n   * @param {string} options.loadMethod\r\n   * @param {string} options.totalCountHeader\r\n   * @param {string} options.loadingName\r\n   * @param {string} options.successName\r\n   * @param {string} options.failureName\r\n   * @param {boolean} options.omitEmptyString\r\n   * @param {Env} env\r\n   * @returns {Env|Promise}\r\n   */\r\n  commitItem: (formPath, listPath, options, env) => {\r\n    const opts = {\r\n      errorSelector: null, \r\n      commitMethod: 'POST', \r\n      loadMethod: 'GET', \r\n      totalCountHeader: '', \r\n      loadingName: 'loading', \r\n      successName: 'success', \r\n      failureName: 'failure', \r\n      omitEmptyString: true, \r\n      ...options\r\n    }\r\n    const actionPath = formPath + '/action'\r\n    const dataPath = formPath + '/data'\r\n    const loadUrl = API.extract(listPath + '/baseUrl', env)\r\n    const queryPath = listPath + '/query'\r\n    const itemsPath = listPath + '/items'\r\n    const totalCountPath = listPath + '/totalCount'\r\n    env = API.touchAll(dataPath, env)\r\n    env = API.validate(dataPath, env)\r\n    const numErrors = API.countValidationErrors(dataPath, env)\r\n    if (numErrors) {\r\n      if (opts.errorSelector) {\r\n        window.setTimeout(() => {\r\n          const targetEl = document.querySelector(opts.errorSelector)\r\n          if (targetEl) targetEl.scrollIntoView()\r\n        }, 100)\r\n      }\r\n      return env\r\n    } else {\r\n      const url = /** @type {string} */ (API.extract(actionPath, env))\r\n      const data = API.extract(dataPath, env)\r\n      const fetchOptions = {\r\n        method: opts.commitMethod, \r\n        mode: 'cors', \r\n        body: JSON.stringify(data), \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      env = API.openProgress(opts.loadingName, null, env)\r\n      return API.withEnv(env, \r\n        /** @ts-ignore */\r\n        fetch(url, fetchOptions)\r\n        .then(API.wrap((response, env) => {\r\n          if (! response.ok) {\r\n            const error = new Error(response.statusText)\r\n            error.name = 'HTTP Error'\r\n            throw API.withEnv(env, error)\r\n          }\r\n          const fetchOptions2 = {\r\n            method: opts.loadMethod, \r\n            mode: 'cors', \r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n          const qs = new URLSearchParams(normalizeQuery(API.extract(queryPath, env), opts.omitEmptyString))\r\n          const url = loadUrl + '?' + qs.toString()\r\n          return API.withEnv(env, \r\n            /** @ts-ignore */\r\n            fetch(url, fetchOptions2)\r\n            .then(API.wrap((response, env) => {\r\n              if (! response.ok) {\r\n                const error = new Error(response.statusText)\r\n                error.name = 'HTTP Error'\r\n                throw API.withEnv(env, error)\r\n              }\r\n              return API.withEnv(env, response.json())\r\n                .then(API.wrap((items, env) => {\r\n                  env = API.replace(itemsPath, items, env)\r\n                  env = API.replace(formPath, null, env)\r\n                  env = API.closeProgress(opts.loadingName, env)\r\n                  if (opts.totalCountHeader && API.test(totalCountPath, env)) {\r\n                    const total = +(response.headers.get(opts.totalCountHeader))\r\n                    env = API.replace(totalCountPath, total, env)\r\n                  }\r\n                  return API.sleep(500, env)\r\n                    .then(API.wrap((response, env) => {\r\n                      return API.openFeedback(opts.successName, {}, env)\r\n                    }))\r\n                }))\r\n            }))\r\n          )\r\n        }))\r\n        .catch(API.wrap((error, env) => {\r\n          env = API.closeProgress(opts.loadingName, env)\r\n          console.error('commision failed', error)\r\n          const data = {name:error.name, message:error.message, url}\r\n          return API.openFeedback(opts.failureName, data, env)\r\n        }))\r\n      )\r\n    }\r\n  }, \r\n\r\n  /**\r\n   * @param {string} formPath\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  discardItem: (formPath, env) => {\r\n    env = API.replace(formPath, null, env)\r\n    return env\r\n  }, \r\n\r\n  /**\r\n   * @param {string} url\r\n   * @param {string} listPath\r\n   * @param {Object} options\r\n   * @param {string} options.deleteMethod\r\n   * @param {string} options.loadMethod\r\n   * @param {string} options.totalCountHeader\r\n   * @param {string} options.confirmName\r\n   * @param {string} options.loadingName\r\n   * @param {string} options.successName\r\n   * @param {string} options.failureName\r\n   * @param {boolean} options.omitEmptyString\r\n   * @param {Env} env\r\n   * @returns {Env|Promise}\r\n   */\r\n  deleteItem: (url, listPath, options, env) => {\r\n    const opts = {\r\n      deleteMethod: 'DELETE', \r\n      loadMethod: 'GET', \r\n      totalCountHeader: '', \r\n      confirmName: 'confirm', \r\n      loadingName: 'loading', \r\n      successName: 'success', \r\n      failureName: 'failure', \r\n      omitEmptyString: true, \r\n      ...options\r\n    }\r\n    const loadUrl = API.extract(listPath + '/baseUrl', env)\r\n    const queryPath = listPath + '/query'\r\n    const itemsPath = listPath + '/items'\r\n    const totalCountPath = listPath + '/totalCount'\r\n    return API.openDialog(opts.confirmName, {}, env)\r\n      .then(API.wrap((ok, env) => {\r\n        env = API.closeDialog(opts.confirmName, env)\r\n        if (! ok) return env\r\n        env = API.openProgress(opts.loadingName, null, env)\r\n        const fetchOptions = {\r\n          method: opts.deleteMethod, \r\n          mode: 'cors', \r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n        return API.withEnv(env, \r\n          /** @ts-ignore */\r\n          fetch(url, fetchOptions)\r\n          .then(API.wrap((response, env) => {\r\n            if (! response.ok) {\r\n              const error = new Error(response.statusText)\r\n              error.name = 'HTTP Error'\r\n              throw API.withEnv(env, error)\r\n            }\r\n            const fetchOptions2 = {\r\n              method: opts.loadMethod, \r\n              mode: 'cors', \r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }\r\n            const qs = new URLSearchParams(normalizeQuery(API.extract(queryPath, env), opts.omitEmptyString))\r\n            const url = loadUrl + '?' + qs.toString()\r\n            return API.withEnv(env, \r\n              /** @ts-ignore */\r\n              fetch(url, fetchOptions2)\r\n              .then(API.wrap((response, env) => {\r\n                if (! response.ok) {\r\n                  const error = new Error(response.statusText)\r\n                  error.name = 'HTTP Error'\r\n                  throw API.withEnv(env, error)\r\n                }\r\n                return API.withEnv(env, response.json())\r\n                  .then(API.wrap((items, env) => {\r\n                    env = API.closeProgress(opts.loadingName, env)\r\n                    env = API.replace(itemsPath, items, env)\r\n                    if (opts.totalCountHeader && API.test(totalCountPath, env)) {\r\n                      const total = +(response.headers.get(opts.totalCountHeader))\r\n                      env = API.replace(totalCountPath, total, env)\r\n                    }\r\n                    return API.sleep(500, env)\r\n                      .then(API.wrap((_unused, env) => {\r\n                        return API.openFeedback(opts.successName, {}, env)\r\n                      }))\r\n                  }))\r\n              }))\r\n            )\r\n          }))\r\n          .catch(API.wrap((error, env) => {\r\n            env = API.closeProgress(opts.loadingName, env)\r\n            console.error('deletion failed', error)\r\n            const data = {name:error.name, message:error.message, url}\r\n            return API.openFeedback(opts.failureName, data, env)\r\n          }))\r\n        )\r\n      }))\r\n  }, \r\n\r\n  /**\r\n   * @param {string} listPath\r\n   * @param {Object} options\r\n   * @param {string} options.totalCountHeader\r\n   * @param {string} options.method\r\n   * @param {string} options.loadingName\r\n   * @param {string} options.failureName\r\n   * @param {number} options.page\r\n   * @param {string} options.pageProperty\r\n   * @param {boolean} options.omitEmptyString\r\n   * @param {Env} env\r\n   * @returns {Env|Promise}\r\n   */\r\n  loadItems: (listPath, options, env) => {\r\n    const opts = {\r\n      totalCountHeader: '', \r\n      method: 'GET', \r\n      loadingName: 'loading', \r\n      failureName: 'failure', \r\n      page: null, \r\n      pageProperty: null, \r\n      omitEmptyString: true, \r\n      ...options\r\n    }\r\n    const loadUrl = API.extract(listPath + '/baseUrl', env)\r\n    const queryPath = listPath + '/query'\r\n    const itemsPath = listPath + '/items'\r\n    const totalCountPath = listPath + '/totalCount'\r\n    const fetchOptions = {\r\n      method: opts.method, \r\n      mode: 'cors', \r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    if (opts.page !== null && opts.pageProperty) {\r\n      env = API.replace(queryPath + '/' + opts.pageProperty, opts.page, env)\r\n    }\r\n    env = API.openProgress(opts.loadingName, null, env)\r\n    const qs = new URLSearchParams(normalizeQuery(API.extract(queryPath, env), opts.omitEmptyString))\r\n    const url = loadUrl + '?' + qs.toString()\r\n    return API.withEnv(env, \r\n      /** @ts-ignore */\r\n      fetch(url, fetchOptions)\r\n      .then(API.wrap((response, env) => {\r\n        if (! response.ok) {\r\n          const error = new Error(response.statusText)\r\n          error.name = 'HTTP Error'\r\n          throw API.withEnv(env, error)\r\n        }\r\n        return API.withEnv(env, response.json())\r\n          .then(API.wrap((items, env) => {\r\n            env = API.closeProgress(opts.loadingName, env)\r\n            env = API.replace(itemsPath, items, env)\r\n            if (opts.totalCountHeader && API.test(totalCountPath, env)) {\r\n              const total = +(response.headers.get(opts.totalCountHeader))\r\n              env = API.replace(totalCountPath, total, env)\r\n            }\r\n            return env\r\n          }))\r\n      }))\r\n      .catch(API.wrap((error, env) => {\r\n        env = API.closeProgress(opts.loadingName, env)\r\n        console.error('loading failed', error)\r\n        const data = {name:error.name, message:error.message, url}\r\n        return API.openFeedback(opts.failureName, data, env)\r\n      }))\r\n    )\r\n  }, \r\n\r\n  /**\r\n   * @param {string} formPath\r\n   * @param {string} listPath\r\n   * @param {Object} options\r\n   * @param {string} options.errorSelector\r\n   * @param {string} options.totalCountHeader\r\n   * @param {string} options.method\r\n   * @param {string} options.loadingName\r\n   * @param {string} options.failureName\r\n   * @param {number} options.page\r\n   * @param {string} options.pageProperty\r\n   * @param {boolean} options.omitEmptyString\r\n   * @param {Env} env\r\n   * @returns {Env|Promise}\r\n   */\r\n  searchItems: (formPath, listPath, options, env) => {\r\n    let errorSelector = null\r\n    if (\"errorSelector\" in options) {\r\n      errorSelector = options.errorSelector\r\n      delete options.errorSelector\r\n    }    \r\n    env = API.touchAll(formPath, env)\r\n    env = API.validate(formPath, env)\r\n    const numErrors = API.countValidationErrors(formPath, env)\r\n    if (numErrors) {\r\n      if (errorSelector) {\r\n        window.setTimeout(() => {\r\n          const targetEl = document.querySelector(errorSelector)\r\n          if (targetEl) targetEl.scrollIntoView()\r\n        }, 100)\r\n      }\r\n      return env\r\n    }\r\n    env = API.copy(formPath, listPath + '/query', env)\r\n    return API.loadItems(listPath, options, env)\r\n  }, \r\n\r\n  /**\r\n   * \r\n   * @param {string} url\r\n   * @param {Object} options\r\n   * @param {string} options.path\r\n   * @param {string} options.errorSelector\r\n   * @param {string} options.method\r\n   * @param {string} options.loadingName\r\n   * @param {string} options.successName\r\n   * @param {string} options.failureName\r\n   * @param {Env} env\r\n   * @returns {Env|Promise}\r\n   */\r\n  submit: (url, options, env) => {\r\n    const opts = {\r\n      path: '', \r\n      errorSelector: null, \r\n      method: 'POST', \r\n      loadingName: 'loading', \r\n      successName: 'success', \r\n      failureName: 'failure', \r\n      ...options\r\n    }\r\n    env = API.touchAll(opts.path, env)\r\n    env = API.validate(opts.path, env)\r\n    const numErrors = API.countValidationErrors(opts.path, env)\r\n    if (numErrors) {\r\n      if (opts.errorSelector) {\r\n        window.setTimeout(() => {\r\n          const targetEl = document.querySelector(opts.errorSelector)\r\n          if (targetEl) targetEl.scrollIntoView()\r\n        }, 100)\r\n      }\r\n      return env\r\n    } else {\r\n      const fetchOptions = {\r\n        method: opts.method, \r\n        mode: 'cors', \r\n        body: JSON.stringify(E.extract(opts.path, env)), \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      env = API.openProgress(opts.loadingName, null, env)\r\n      return API.withEnv(env, \r\n        /** @ts-ignore */\r\n        fetch(url, fetchOptions)\r\n        .then(API.wrap((response, env) => {\r\n          if (! response.ok) {\r\n            const error = new Error(response.statusText)\r\n            error.name = 'HTTP Error'\r\n            throw API.withEnv(env, error)\r\n          }\r\n          env = API.closeProgress(opts.loadingName, env)\r\n          return API.sleep(500, env)\r\n            .then(API.wrap((_unused, env) => {\r\n              return API.openFeedback(opts.successName, {}, env)\r\n            }))\r\n        }))\r\n        .catch(API.wrap((error, env) => {\r\n          env = API.closeProgress(opts.loadingName, env)\r\n          console.error('loading failed', error)\r\n          const data = {name:error.name, message:error.message, url}\r\n          return API.openFeedback(opts.failureName, data, env)\r\n        }))\r\n      )\r\n    }\r\n  }, \r\n\r\n  /**\r\n   * @param {string} name \r\n   * @param {string} fromPath \r\n   * @param {Env} env\r\n   * @returns {Env|Promise}\r\n   */\r\n  reorder: (name, fromPath, env) => {\r\n    return API.startReordering(name, env)\r\n      .then(API.wrap(({path}, env) => {\r\n        env = API.endReordering(name, env)\r\n        return API.move(fromPath, path, env)\r\n      }))\r\n  }, \r\n\r\n  /**\r\n   * \r\n   * @param {Json} data\r\n   * @param {Object} options\r\n   * @param {string} options.confirmName\r\n   * @param {Env} env\r\n   * @returns {Env|Promise}\r\n   */\r\n  reset: (data, options, env) => {\r\n    const opts = {\r\n      confirmName: 'confirm', \r\n      ...options\r\n    }\r\n    return API.openDialog(opts.confirmName, {}, env)\r\n      .then(API.wrap((ok, env) => {\r\n        env = API.closeDialog(opts.confirmName, env)\r\n        if (ok) {\r\n          return API.replace(\"\", data, env)\r\n        } else {\r\n          return env\r\n        }\r\n      }))\r\n  }, \r\n\r\n  /**\r\n   * @param {string} partPath\r\n   * @param {string} formPath\r\n   * @param {Env} env\r\n   * @returns {Env}\r\n   */\r\n  editPart: (partPath, formPath, env) => {\r\n    const form = {\r\n      action: partPath, \r\n      data: API.extract(partPath, env)\r\n    }\r\n    env = API.replace(formPath, form, env)\r\n    return env\r\n  }, \r\n\r\n  /**\r\n   * @param {string} pathToAdd \r\n   * @param {Json} data \r\n   * @param {string} formPath \r\n   * @param {Env} env\r\n   */\r\n  createPart: (pathToAdd, data, formPath, env) => {\r\n    const form = {\r\n      action: pathToAdd, \r\n      data\r\n    }\r\n    env = API.replace(formPath, form, env)\r\n    return env\r\n  }, \r\n\r\n  /**\r\n   * @param {string} formPath\r\n   * @param {string | null} nextIdPath \r\n   * @param {Object} options\r\n   * @param {string | null} options.errorSelector\r\n   * @param {string | null} options.idProperty\r\n   * @param {Env} env \r\n   * @returns {Env}\r\n   */\r\n  commitPart: (formPath, nextIdPath, options, env) => {\r\n    const opts = {\r\n      errorSelector: null, \r\n      idProperty: 'id', \r\n      ...options\r\n    }\r\n    const actionPath = formPath + '/action'\r\n    const dataPath = formPath + '/data'\r\n    env = API.touchAll(dataPath, env)\r\n    env = API.validate(dataPath, env)\r\n    const numErrors = API.countValidationErrors(dataPath, env)\r\n    if (numErrors) {\r\n      if (opts.errorSelector) {\r\n        window.setTimeout(() => {\r\n          const targetEl = document.querySelector(opts.errorSelector)\r\n          if (targetEl) targetEl.scrollIntoView()\r\n        }, 100)\r\n      }\r\n      return env\r\n    } else {\r\n      const path = /** @type {string} */ (API.extract(actionPath, env))\r\n      const data = API.extract(dataPath, env)\r\n      if (path[path.length - 1] == '-') {\r\n        if (opts.idProperty && nextIdPath) {\r\n          const nextId = /** @type {number} */ (API.extract(nextIdPath, env))\r\n          env = API.replace(nextIdPath, nextId + 1, env)\r\n          data[opts.idProperty] = nextId\r\n        }\r\n        env = API.add(path, data, env)\r\n      } else {\r\n        env = API.replace(path, data, env)\r\n      }\r\n      env = API.replace(formPath, null, env)\r\n      return env\r\n    }\r\n  }, \r\n\r\n  /**\r\n   * @param {string} formPath \r\n   * @param {Env} env \r\n   * @returns {Env}\r\n   */\r\n  discardPart: (formPath, env) => {\r\n    env = API.replace(formPath, null, env)\r\n    return env\r\n  }, \r\n\r\n  /**\r\n   * \r\n   * @param {string} partPath\r\n   * @param {Object} options\r\n   * @param {string} options.confirmName\r\n   * @param {Env} env\r\n   * @returns {Promise}\r\n   */\r\n  removePart: (partPath, options, env) => {\r\n    const opts = {\r\n      confirmName: 'confirm', \r\n      ...options\r\n    }\r\n    return API.openDialog(opts.confirmName, {}, env)\r\n      .then(API.wrap((ok, env) => {\r\n        env = API.closeDialog(opts.confirmName, env)\r\n        if (ok) {\r\n          env = API.remove(partPath, env)\r\n          return env\r\n        } else {\r\n          return env\r\n        }\r\n      }))\r\n  }, \r\n\r\n  /**\r\n   * @param {string} partPath \r\n   * @param {string | null} nextIdPath\r\n   * @param {Object} options\r\n   * @param {string | null} options.pathToAdd\r\n   * @param {string | null} options.idProperty\r\n   * @param {Env} env\r\n   */\r\n  copyPart: (partPath, nextIdPath, options, env) => {\r\n    const opts = {\r\n      pathToAdd: '', \r\n      idProperty: 'id', \r\n      ...options\r\n    }\r\n    const data = API.extract(partPath, env)\r\n    if (opts.idProperty && nextIdPath) {\r\n      const nextId = /** @type {number} */ (API.extract(nextIdPath, env))\r\n      data[opts.idProperty] = nextId\r\n      env = API.add(nextIdPath, nextId + 1, env)\r\n    }\r\n    const pathToAdd = opts.pathToAdd || partPath\r\n    env = API.add(pathToAdd, data, env)\r\n    return env\r\n  }\r\n}\r\n\r\nconst updateEnabledApis = {\r\n  openDialog: API.openDialog, \r\n  closeDialog: API.closeDialog, \r\n  openFeedback: API.openFeedback, \r\n  closeFeedback: API.closeFeedback, \r\n  openProgress: API.openProgress, \r\n  closeProgress: API.closeProgress, \r\n  setPage: API.setPage, \r\n  nextPage: API.nextPage, \r\n  prevPage: API.prevPage, \r\n  setSwitch: API.setSwitch, \r\n  toggleSwitch: API.toggleSwitch, \r\n  editItem: API.editItem, \r\n  createItem: API.createItem, \r\n  commitItem: API.commitItem, \r\n  discardItem: API.discardItem, \r\n  deleteItem: API.deleteItem, \r\n  loadItems: API.loadItems, \r\n  searchItems: API.searchItems, \r\n  submit: API.submit, \r\n  reorder: API.reorder, \r\n  reset: API.reset, \r\n  editPart: API.editPart, \r\n  createPart: API.createPart, \r\n  commitPart: API.commitPart, \r\n  discardPart: API.discardPart, \r\n  removePart: API.removePart, \r\n  copyPart: API.copyPart\r\n}\r\n\r\n/**\r\n * @type {Object|null}\r\n */\r\nlet actions = null\r\n\r\n/**\r\n * @param {Object} params\r\n * @param {Json} params.data\r\n * @param {Schema} params.schema\r\n * @param {(Env) => import('hyperapp').VNode} params.view\r\n * @param {Element} params.containerEl\r\n * @param {((env:Env, updatePointer:string, prevEnv:Env|null) => Env) | null} params.evolve\r\n * @param {{[name:string]:(any)}} params.updates\r\n * @param {((value:any, slot:Slot, schema:Schema, lookup:LookupFunc) => Slot) | null} params.validate\r\n * @param {((input:string, slot:Slot, schema:Schema) => Slot) | null} params.coerce\r\n */\r\nexport const start = (\r\n    {\r\n      data, \r\n      schema, \r\n      view, \r\n      containerEl, \r\n      evolve = null, \r\n      updates = {}, \r\n      validate = null, \r\n      coerce = null\r\n    }) => {\r\n  // complements reasonable defaults\r\n  if (! evolve) evolve = (env, _pointer, _prevEnv) => env\r\n  if (! validate) validate = S.validate(S.defaultRules, S.defaultMessages)\r\n  if (! coerce) coerce = S.coerce(S.defaultRules, S.defaultMessages)\r\n\r\n  const schemaDb = S.buildDb(schema)\r\n\r\n  const actions0 = {\r\n    onTextboxInput: (ev) => (state, actions) => {\r\n      const path = ev.currentTarget.dataset.mgPath\r\n      const value = ev.currentTarget[ev.currentTarget.dataset.mgValueAttribute]\r\n      const slot0 = E.getSlot(path, state.baseEnv)\r\n      const slot = {...slot0, input:value}\r\n      const baseEnv = E.setSlot(path, slot, state.baseEnv)\r\n      // We don't call evolve() here, because oninput is not a check point of evolve().\r\n      // Thus we update not only baseEnv but also env.\r\n      const slotb0 = E.getSlot(path, state.env)\r\n      const slotb = {...slotb0, input:value}\r\n      const env = E.setSlot(path, slotb, state.env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onTextboxBlur: (ev) => (state, actions) => {\r\n      const path = ev.currentTarget.dataset.mgPath\r\n      const value = ev.currentTarget[ev.currentTarget.dataset.mgValueAttribute]\r\n      const npath = normalizePath(path)\r\n      const slot0 = {...E.getSlot(path, state.baseEnv), touched:true}\r\n      const slot = coerce(value, slot0, schemaDb[npath])\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      baseEnv = E.setSlot(path, slot, baseEnv)\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = evolve(baseEnv, updatePointer, baseEnv)\r\n      env = E.validate(\"\", env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onSliderInput: (ev) => (state, actions) => {\r\n      const path = ev.currentTarget.dataset.mgPath\r\n      const value = ev.currentTarget[ev.currentTarget.dataset.mgValueAttribute]\r\n      const slot0 = E.getSlot(path, state.baseEnv)\r\n      const slot = {...slot0, input:value}\r\n      const baseEnv = E.setSlot(path, slot, state.baseEnv)\r\n      // We don't call evolve() here, because oninput is not a check point of evolve().\r\n      // Thus we update not only baseEnv but also env.\r\n      const slotb0 = E.getSlot(path, state.env)\r\n      const slotb = {...slotb0, input:value}\r\n      const env = E.setSlot(path, slotb, state.env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onSliderChange: (ev) => (state, actions) => {\r\n      const path = ev.currentTarget.dataset.mgPath\r\n      const value = ev.currentTarget[ev.currentTarget.dataset.mgValueAttribute]\r\n      const npath = normalizePath(path)\r\n      const slot0 = {...E.getSlot(path, state.baseEnv), touched:true}\r\n      const slot = coerce(value, slot0, schemaDb[npath])\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      baseEnv = E.setSlot(path, slot, baseEnv)\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = evolve(baseEnv, updatePointer, state.env)\r\n      env = E.validate(\"\", env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onListboxChange: (ev) => (state, actions) => {\r\n      const path = ev.currentTarget.dataset.mgPath\r\n      const value = ev.currentTarget[ev.currentTarget.dataset.mgValueAttribute]\r\n      const npath = normalizePath(path)\r\n      const slot0 = {...E.getSlot(path, state.baseEnv), touched:true}\r\n      const slot = coerce(value, slot0, schemaDb[npath])\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      baseEnv = E.setSlot(path, slot, baseEnv)\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = evolve(baseEnv, updatePointer, state.env)\r\n      env = E.validate(\"\", env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onRadioChange: (ev) => (state, actions) => {\r\n      const path = ev.currentTarget.dataset.mgPath\r\n      const value = ev.currentTarget[ev.currentTarget.dataset.mgValueAttribute]\r\n      const npath = normalizePath(path)\r\n      const slot0 = {...E.getSlot(path, state.baseEnv), touched:true}\r\n      const slot = coerce(value, slot0, schemaDb[npath])\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      baseEnv = E.setSlot(path, slot, baseEnv)\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = evolve(baseEnv, updatePointer, state.env)\r\n      env = E.validate(\"\", env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onCheckboxChange: (ev) => (state, actions) => {\r\n      const path = ev.currentTarget.dataset.mgPath\r\n      const checked = ev.currentTarget[ev.currentTarget.dataset.mgCheckedAttribute]\r\n      const value = checked ? \"true\" : \"false\"\r\n      const npath = normalizePath(path)\r\n      const slot0 = {...E.getSlot(path, state.baseEnv), touched:true}\r\n      const slot = coerce(value, slot0, schemaDb[npath])\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      baseEnv = E.setSlot(path, slot, baseEnv)\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = evolve(baseEnv, updatePointer, state.env)\r\n      env = E.validate(\"\", env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onSmartControlChange: (pair) => (state, actions) => {\r\n      const pairs = Array.isArray(pair) ? pair : [pair]\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      for (let i = 0; i < pairs.length; i++) {\r\n        const {path, input} = pairs[i]\r\n        const slot0 = {...E.getSlot(path, baseEnv), touched:true}\r\n        const slot = coerce(input, slot0, schemaDb[normalizePath(path)])\r\n        baseEnv = E.setSlot(path, slot, baseEnv)\r\n      }\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = evolve(baseEnv, updatePointer, state.env)\r\n      env = E.validate(\"\", env)\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onUpdate: (ev) => (state, actions) => {\r\n      const update = ('currentTarget' in ev) ? ev.currentTarget.dataset.mgUpdate : ev.update\r\n      const context = ('currentTarget' in ev) ? JSON.parse(ev.currentTarget.dataset.mgContext || \"null\") : ev.context\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      baseEnv = E.setRet((env0) => {baseEnv = env0}, baseEnv)\r\n      const func = updates[update] || updateEnabledApis[update]\r\n      if (! func) throw new Error('onUpdate/0: no update or unknown update')\r\n      if (! Array.isArray(context)) throw new Error('onUpdate/1: parameter must be an array')\r\n      if (context.length + 1 != func.length) throw new Error('onUpdate/2: bad number of parameters')\r\n      const res = func.apply(null, [...context, baseEnv])\r\n      baseEnv = E.setRet(null, E.isEnv(res) ? res : baseEnv)\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = state.env\r\n      if (! E.isSame(state.baseEnv, baseEnv)) {\r\n        env = evolve(baseEnv, updatePointer, env)\r\n        env = E.validate(\"\", env)\r\n      }\r\n      return {...state, baseEnv, env}\r\n    }, \r\n    onPromiseSettle: (ev) => (state, actions) => {\r\n      const name = ('currentTarget' in ev) ? ev.currentTarget.dataset.mgName : ev.name\r\n      const result = ('currentTarget' in ev) ? JSON.parse(ev.currentTarget.dataset.mgResult || \"null\") : ev.result\r\n      const extra = E.getExtra(name, state.baseEnv)\r\n      if (! extra || ! extra.fulfill) throw new Error('onPromiseSettle/0: no callback or unknown callback')\r\n      // Calling fulfill directly will cause the process to re-enter the hyperapp, \r\n      // so use a different tick.\r\n      window.requestAnimationFrame(() => {\r\n        extra.fulfill(result)\r\n      })\r\n    }, \r\n    onPromiseThen: (context) => (state, actions) => {\r\n      let updatePointer\r\n      let baseEnv = E.beginUpdateTracking(state.baseEnv)\r\n      baseEnv = E.setRet((env0) => {baseEnv = env0}, baseEnv)\r\n      const res = context.handler(context.result, baseEnv)\r\n      baseEnv = E.setRet(null, E.isEnv(res) ? res : baseEnv)\r\n      baseEnv = E.validate(\"\", baseEnv);\r\n      [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n      let env = state.env\r\n      if (! E.isSame(state.baseEnv, baseEnv)) {\r\n        env = evolve(baseEnv, updatePointer, env)\r\n        env = E.validate(\"\", env)\r\n      }\r\n      if (! E.isEnv(res)) {\r\n        context.ret(res)\r\n      }\r\n      return {...state, baseEnv, env}\r\n    }\r\n  }\r\n\r\n  let updatePointer\r\n  let baseEnv = E.makeEnv(data, schemaDb, validate, true)\r\n  baseEnv = E.validate(\"\", baseEnv);\r\n  [updatePointer, baseEnv] = E.endUpdateTracking(baseEnv)\r\n  let env = evolve(baseEnv, updatePointer, null)\r\n  env = E.validate(\"\", env)\r\n  const state = {\r\n    baseEnv, \r\n    env\r\n  }\r\n  const view1 = (state, actions) => view(state.env)\r\n  actions = app(state, actions0, view1, containerEl)\r\n  return {\r\n    onUpdate: actions.onUpdate, \r\n  }\r\n}\r\n\r\n\r\n\r\nexport const h = h0","\r\nimport { API, h } from './framework'\r\n\r\nexport const defaultAttributeMap = {\r\n  textbox: {\r\n    oninput: 'oninput', \r\n    onblur: 'onblur', \r\n    value: 'value', \r\n    class: 'class', \r\n    invalidClass: 'mg-invalid', \r\n    invalid: '', \r\n    message: '', \r\n    fixedClass: ''\r\n  }, \r\n  slider: {\r\n    oninput: 'oninput', \r\n    onchange: 'onchange', \r\n    value: 'value', \r\n    class: 'class', \r\n    invalidClass: 'mg-invalid', \r\n    invalid: '', \r\n    message: '', \r\n    fixedClass: ''\r\n  }, \r\n  listbox: {\r\n    onchange: 'onchange', \r\n    class: 'class', \r\n    invalidClass: 'mg-invalid', \r\n    invalid: '', \r\n    value: 'value', \r\n    option: {\r\n      selected: 'selected', \r\n      value: 'value'\r\n    }, \r\n    message: '', \r\n    fixedClass: ''\r\n  }, \r\n  radio: {\r\n    onchange: 'onchange', \r\n    checked: 'checked', \r\n    value: 'value', \r\n    class: 'class', \r\n    invalidClass: 'mg-invalid', \r\n    invalid: '', \r\n    message: '', \r\n    fixedClass: ''\r\n  }, \r\n  checkbox: {\r\n    onchange: 'onchange', \r\n    checked: 'checked', \r\n    class: 'class', \r\n    invalidClass: 'mg-invalid', \r\n    invalid: '', \r\n    message: '', \r\n    fixedClass: ''\r\n  }, \r\n  smartControl: {\r\n    onchange: 'onchange', \r\n    value: '', \r\n    class: 'class', \r\n    fixedClass: ''\r\n    // TODO: follow standard\r\n  }, \r\n  field: {\r\n    class: 'class', \r\n    invalidClass: '', \r\n    invalid: 'invalid', \r\n    message: 'message', \r\n    fixedClass: ''\r\n  }, \r\n  updateButton: {\r\n    onclick: 'onclick', \r\n    class: 'class', \r\n    fixedClass: ''\r\n  }, \r\n  settleButton: {\r\n    onclick: 'onclick', \r\n    class: 'class', \r\n    fixedClass: ''\r\n  }, \r\n  dialog: {\r\n    '@nullIfHidden': true, \r\n    data: 'data', \r\n    class: 'class', \r\n    shown: 'shown', \r\n    shownClass: 'mg-shown', \r\n    fixedClass: '', \r\n    '@transition': 'fade'\r\n  }, \r\n  feedback: {\r\n    '@nullIfHidden': true, \r\n    data: 'data', \r\n    class: 'class', \r\n    shown: 'shown', \r\n    shownClass: 'mg-shown', \r\n    fixedClass: '', \r\n    '@transition': 'slide'\r\n  }, \r\n  progress: {\r\n    '@nullIfHidden': true, \r\n    current: 'current', \r\n    class: 'class', \r\n    shown: 'shown', \r\n    shownClass: 'mg-shown', \r\n    fixedClass: ''\r\n  }, \r\n  page: {\r\n    '@nullIfHidden': true, \r\n    class: 'class', \r\n    shown: 'shown', \r\n    shownClass: 'mg-shown', \r\n    fixedClass: ''\r\n  }, \r\n  'switch': {\r\n    '@nullIfHidden': true, \r\n    class: 'class', \r\n    shown: 'shown', \r\n    shownClass: 'mg-shown', \r\n    fixedClass: ''\r\n  }, \r\n  reorderable: {\r\n    active: 'active', \r\n    activeClass: 'mg-active', \r\n    onstart: 'onstart', \r\n    onend: 'onend', \r\n    fixedClass: ''\r\n  }, \r\n  pagination: {\r\n    current: 'current', \r\n    prev: 'prev', \r\n    next: 'next', \r\n    first: 'first', \r\n    last: 'last', \r\n    siblings: 'siblings', \r\n    fixedClass: ''\r\n  }, \r\n  listItem: {\r\n    '@transition': 'slide'\r\n  }, \r\n  modal: {\r\n    '@nullIfHidden': true, \r\n    class: 'class', \r\n    shown: 'shown', \r\n    shownClass: 'mg-shown', \r\n    fixedClass: '', \r\n    '@transition': 'fade'\r\n  }, \r\n  flatpickr: {\r\n    invalid: '', \r\n    class: 'class', \r\n    invalidClass: 'mg-invalid', \r\n    message: '', \r\n    fixedClass: ''\r\n  }, \r\n  pickr: {\r\n    value: 'value', \r\n    invalid: '', \r\n    class: 'class', \r\n    invalidClass: 'mg-invalid', \r\n    message: '', \r\n    fixedClass: ''\r\n  }\r\n}\r\n\r\nexport const suspendRoot = () => {\r\n  const rootEl = document.documentElement\r\n  const c = rootEl.dataset.mgSuspendCount\r\n  if (!c || c < 1) {\r\n    rootEl.dataset.mgSuspendCount = 1\r\n    rootEl.style.overflow = \"hidden\"\r\n  } else {\r\n    rootEl.dataset.mgSuspendCount = c - 1\r\n  }\r\n}\r\n\r\nexport const resumeRoot = () => {\r\n  const rootEl = document.documentElement\r\n  const c = rootEl.dataset.mgSuspendCount\r\n  if (c <= 1) {\r\n    delete rootEl.dataset.mgSuspendCount\r\n    rootEl.style.overflow = null\r\n  } else {\r\n    rootEl.dataset.mgSuspendCount = c + 1\r\n  }\r\n}\r\n\r\nexport const prepareToDestroy = (el, anim, done) => {\r\n  const tid = setTimeout(() => {\r\n    done()\r\n    anim.onfinish = null\r\n  }, 800)\r\n  anim.onfinish = () => {\r\n    done()\r\n    clearTimeout(tid)\r\n  }\r\n}\r\n\r\nexport const compose = (p1, p2) => (C, map = null) => {\r\n  return (props, children) => (state, actions) => {\r\n    const more = (props, children) => {\r\n      return p1(C, map)(props, children)(state, actions)\r\n    }\r\n    const x = p2(more, map)(props, children)(state, actions)\r\n    return x || p1(C, map)(props, children)(state, actions)\r\n  }\r\n}\r\n\r\nconst addClass = (attributes, attr, clazz) => {\r\n  if (! clazz) return\r\n  if (! attributes.hasOwnProperty(attr)) attributes[attr] = ''\r\n  attributes[attr] += ' ' + clazz\r\n}\r\n\r\nconst addAttr = (attributes, attr, value) => {\r\n  if (! attr) return\r\n  attributes[attr] = value\r\n}\r\n\r\nexport const playTextbox = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.textbox, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-path':path, ...attributes} = props\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    attributes['data-mg-path'] = path\r\n    attributes['data-mg-value-attribute'] = map.value\r\n    attributes[map.oninput] = actions.onTextboxInput\r\n    attributes[map.onblur] = actions.onTextboxBlur\r\n    attributes[map.value] = slot.input\r\n    const invalid = ((slot.touched || false) && (slot.invalid || false))\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const Textbox = playTextbox(\"input\")\r\n\r\nexport const playSlider = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.slider, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-path':path, ...attributes} = props\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    attributes['data-mg-path'] = path\r\n    attributes['data-mg-value-attribute'] = map.value\r\n    attributes[map.oninput] = actions.onSliderInput\r\n    attributes[map.onchange] = actions.onSliderChange\r\n    attributes[map.value] = slot.input\r\n    const invalid = ((slot.touched || false) && (slot.invalid || false))\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const Slider = playSlider(\"input\")\r\n\r\nconst convertChildren = (input, selectedAttr, valueAttr, children) => {\r\n  const inner = (children) => {\r\n    children.forEach(c => {\r\n      if (typeof c != 'object') return\r\n      if (valueAttr in c.attributes) {\r\n        c.attributes[selectedAttr] = c.attributes[valueAttr] == input\r\n      }\r\n      if (c.children) {\r\n        inner(c.children)\r\n      }\r\n    })\r\n  }\r\n  inner(children)\r\n}\r\n\r\nexport const playListbox = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.listbox, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-path':path, ...attributes} = props\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    attributes['data-mg-path'] = path\r\n    attributes['data-mg-value-attribute'] = map.value\r\n    attributes[map.onchange] = actions.onListboxChange\r\n    const invalid = ((slot.touched || false) && (slot.invalid || false))\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    convertChildren(slot.input, map.option.selected, map.option.value, children)\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const Listbox = playListbox(\"select\")\r\n\r\nexport const playRadio = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.radio, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-path':path, ...attributes} = props\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    attributes['data-mg-path'] = path\r\n    attributes['data-mg-value-attribute'] = map.value\r\n    attributes[map.onchange] = actions.onRadioChange\r\n    attributes[map.checked] = attributes[map.value] == slot['@value']\r\n    const invalid = ((slot.touched || false) && (slot.invalid || false))\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const Radio = playRadio(\"input\")\r\n\r\nexport const playCheckbox = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.checkbox, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-path':path, ...attributes} = props\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    attributes['data-mg-path'] = path\r\n    attributes['data-mg-checked-attribute'] = map.checked\r\n    attributes[map.onchange] = actions.onCheckboxChange\r\n    attributes[map.checked] = slot['@value']\r\n    const invalid = ((slot.touched || false) && (slot.invalid || false))\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const Checkbox = playCheckbox(\"input\")\r\n\r\n// TODO: file, number, date, color, range, ...\r\n\r\nexport const playSmartControl = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.smartControl, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    const path = props['mg-path']\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    attributes[map.onchange] = actions.onSmartControlChange\r\n    addAttr(attributes, map.value, slot.input)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const playField = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.field, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-path':path, 'mg-fold-validity':foldValidity, ...attributes} = props\r\n    if (! API.test(path, state.env)) return null\r\n    const slot = API.getSlot(path, state.env)\r\n    const {invalid, message} = foldValidity ? API.foldValidity(path, env) : {invalid:slot.invalid && slot.touched, message:slot.message}\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const playUpdateButton = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.updateButton, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-update':update, 'mg-context':context, ...attributes} = props\r\n    attributes['data-mg-update'] = update\r\n    attributes['data-mg-context'] = JSON.stringify(typeof context == \"undefined\" ? null : context)\r\n    attributes[map.onclick] = actions.onUpdate\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const UpdateButton = playUpdateButton(\"button\")\r\n\r\nexport const playSettleButton = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.settleButton, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-name':name, 'mg-result':result, ...attributes} = props\r\n    attributes['data-mg-name'] = name\r\n    attributes['data-mg-result'] = JSON.stringify(typeof result == \"undefined\" ? null : result)\r\n    attributes[map.onclick] = actions.onPromiseSettle\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const SettleButton = playSettleButton(\"button\")\r\n\r\nconst dialogOnCreate = {\r\n  fade: (el) => {\r\n    suspendRoot()\r\n    el.animate([\r\n      {opacity: 0}, \r\n      {opacity: 1}\r\n    ], 200)\r\n  }, \r\n  scale: (el) => {\r\n    suspendRoot()\r\n    el.animate([\r\n      {transform: 'scale(0.8)'}, \r\n      {transform: 'scale(1)'}\r\n    ])\r\n  }\r\n}\r\nconst dialogOnRemove = {\r\n  fade: (el, done) => {\r\n    resumeRoot()\r\n    const anim = el.animate([\r\n      {opacity: 1}, \r\n      {opacity: 0}\r\n    ], 200)\r\n    prepareToDestroy(el, anim, done)\r\n  }, \r\n  scale: (el, done) => {\r\n    resumeRoot()\r\n    const anim = el.animate([\r\n      {transform: 'scale(1)'}, \r\n      {transform: 'scale(0.8)'}\r\n    ], 200)\r\n    prepareToDestroy(el, anim, done)\r\n  }\r\n}\r\n\r\nexport const playDialog = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.dialog, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    const name = attributes['mg-name']\r\n    const data = API.getDialog(name, state.env)\r\n    if (data === null && map['@nullIfHidden']) return null\r\n    attributes[map.data] = data\r\n    attributes.oncreate = dialogOnCreate[map['@transition']]\r\n    attributes.onremove = dialogOnRemove[map['@transition']]\r\n    addAttr(attributes, map.shown, (data !== null))\r\n    addClass(attributes, map.class, data !== null ? map.shownClass : \"\")\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nconst feedbackOnCreate = {\r\n  fade: (el) => {\r\n    el.animate([\r\n      {opacity: 0}, \r\n      {opacity: 1}\r\n    ], 200)\r\n    el.scrollIntoView()\r\n  }, \r\n  zoom: (el) => {\r\n    el.animate([\r\n      {transform: 'scale(0.8)'}, \r\n      {transform: 'scale(1)'}\r\n    ], 200)\r\n    el.scrollIntoView()\r\n  }, \r\n  slide: (el) => {\r\n    const r = el.getBoundingClientRect()\r\n    el.animate([\r\n      {offset:0, maxHeight: 0}, \r\n      {offset:0.999, maxHeight: ((r.height * 1.2) + 30) + 'px'}, \r\n      {offset:1, maxHeight:'none'}\r\n    ], 200)\r\n    el.scrollIntoView()\r\n  }\r\n}\r\nconst feedbackOnRemove = {\r\n  fade: (el, done) => {\r\n    const anim = el.animate([\r\n      {opacity: 1}, \r\n      {opacity: 0}\r\n    ], 200)\r\n    prepareToDestroy(el, anim, done)\r\n  }, \r\n  zoom: (el, done) => {\r\n    const anim = el.animate([\r\n      {transform: 'scale(1)'}, \r\n      {transform: 'scale(0.8)'}\r\n    ], 200)\r\n    prepareToDestroy(el, anim, done)\r\n  }, \r\n  slide: (el, done) => {\r\n    const r = el.getBoundingClientRect()\r\n    const anim = el.animate([\r\n      {maxHeight: ((r.height * 1.2) + 30) + 'px'}, \r\n      {maxHeight: 0}\r\n    ], 200)\r\n    prepareToDestroy(el, anim, done)\r\n  }\r\n}\r\n\r\nexport const playFeedback = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.feedback, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    const name = attributes['mg-name']\r\n    const duration = attributes['mg-duration']\r\n    const data = API.getFeedback(name, state.env)\r\n    if (data === null && map['@nullIfHidden']) return null\r\n    attributes[map.data] = data\r\n    attributes.oncreate = feedbackOnCreate[map['@transition']]\r\n    attributes.onremove = feedbackOnRemove[map['@transition']]\r\n    addAttr(attributes, map.shown, (data !== null))\r\n    addClass(attributes, map.class, data !== null ? map.shownClass : \"\")\r\n    if (duration && duration > 0) {\r\n      let timeoutId = null\r\n      const oncreate = attributes.oncreate\r\n      addAttr(attributes, 'oncreate', (el) => {\r\n        timeoutId = setTimeout(() => actions.onUpdate({update:\"closeFeedback\", context:[name]}), duration)\r\n        if (oncreate) oncreate(el)\r\n      })\r\n      const onremove = attributes.onremove\r\n      addAttr(attributes, 'onremove', (el, done) => {\r\n        if (timeoutId) {\r\n          clearTimeout(timeoutId)\r\n        }\r\n        if (onremove) onremove(el, done)\r\n      })\r\n    }\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const playProgress = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.progress, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    const name = attributes['mg-name']\r\n    const current = API.getProgress(name, state.env)\r\n    if (current === null && map['@nullIfHidden']) return null\r\n    if (current !== null && current != -1) addAttr(attributes, map.current, current)\r\n    addAttr(attributes, map.shown, current !== null)\r\n    addClass(attributes, map.class, current !== null ? map.shownClass : \"\")\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const playPage = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.page, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    const index = attributes['mg-index']\r\n    const name = attributes['mg-name']\r\n    const current = API.getPage(name, state.env)\r\n    const shown = (index == current)\r\n    if (! shown && map['@nullIfHidden']) return null\r\n    addAttr(attributes, map.shown, shown)\r\n    addClass(attributes, map.class, shown ? map.shownClass : \"\")\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const playSwitch = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.switch, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    const name = attributes['mg-name']\r\n    const shown = API.getSwitch(name, state.env)\r\n    if (! shown && map['@nullIfHidden']) return null\r\n    addAttr(attributes, map.shown, shown)\r\n    addClass(attributes, map.class, shown ? map.shownClass : \"\")\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const playReorderable = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.reorderable, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    const name = attributes['mg-name']\r\n    const extra = API.getExtra(name, state.env)\r\n    const active = !!extra\r\n    attributes[map.onstart] = actions.onUpdate\r\n    attributes[map.onend] = actions.onPromiseSettle\r\n    addAttr(attributes, map.active, active)\r\n    addClass(attributes, map.activeClass, active ? map.activeClass : \"\")\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nconst getSiblings = (pageNo, width, firstPageNo, lastPageNo) => {\r\n  const rv = []\r\n  for (let i = pageNo - width; i <= pageNo + width; i++) {\r\n    if (i < firstPageNo) continue\r\n    if (i > lastPageNo) continue\r\n    rv.push(i)\r\n  }\r\n  return rv\r\n}\r\n\r\n// width, pageProperty, limitProperty, listPath\r\n// prev:number, next:number, first:number, last:number, siblings:number[]\r\nexport const playPagination = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.pagination, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-width':width = 2, 'mg-page-property':pageProperty, 'mg-limit-property':limitProperty, ...attributes} = props\r\n    const listPath = attributes['mg-list-path']\r\n    const query = API.extract(listPath + '/query', state.env)\r\n    const totalCount = API.extract(listPath + '/totalCount', state.env)\r\n    const page = query[pageProperty]\r\n    if (totalCount) {\r\n      const first = 1\r\n      const last = Math.ceil(totalCount / query[limitProperty])\r\n      const siblings = getSiblings(page, width, first, last)\r\n      attributes[map.current] = page\r\n      attributes[map.prev] = first < page ? page - 1 : null\r\n      attributes[map.next] = page < last ? page + 1 : null\r\n      attributes[map.first] = first < page - width ? first : null\r\n      attributes[map.last] = page + width < last ? last : null\r\n      attributes[map.siblings] = siblings\r\n    } else {\r\n      attributes[map.current] = null\r\n      attributes[map.prev] = null\r\n      attributes[map.next] = null\r\n      attributes[map.first] = null\r\n      attributes[map.last] = null\r\n      attributes[map.siblings] = []\r\n    }\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\n\r\nconst listItemOnCreate = {\r\n  fade: (el) => {\r\n    el.animate([\r\n      {opacity: 0}, \r\n      {opacity: 1}\r\n    ], 200)\r\n    el.scrollIntoView()\r\n  }, \r\n  slide: (el) => {\r\n    const r = el.getBoundingClientRect()\r\n    el.animate([\r\n      {offset:0, maxHeight: 0}, \r\n      {offset:0.999, maxHeight: ((r.height * 1.2) + 30) + 'px'}, \r\n      {offset:1, maxHeight:'none'}\r\n    ], 200)\r\n    el.scrollIntoView()\r\n  }\r\n}\r\nconst listItemOnRemove = {\r\n  fade: (el, done) => {\r\n    const anim = el.animate([\r\n      {opacity: 1}, \r\n      {opacity: 0}\r\n    ], 200)\r\n    prepareToDestroy(el, anim, done)\r\n  }, \r\n  slide: (el, done) => {\r\n    const r = el.getBoundingClientRect()\r\n    const anim = el.animate([\r\n      {maxHeight: ((r.height * 1.2) + 30) + 'px'}, \r\n      {maxHeight: 0}\r\n    ], 200)\r\n    prepareToDestroy(el, anim, done)\r\n  }\r\n}\r\nexport const playListItem = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.listItem, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {...attributes} = props\r\n    attributes.oncreate = listItemOnCreate[map['@transition']]\r\n    attributes.onremove = listItemOnRemove[map['@transition']]\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nexport const playModal = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.modal, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-shown':shown = false, ...attributes} = props\r\n    if (! shown && map['@nullIfHidden']) return null\r\n    attributes.oncreate = dialogOnCreate[map['@transition']]\r\n    attributes.onremove = dialogOnRemove[map['@transition']]\r\n    addAttr(attributes, map.shown, shown)\r\n    addClass(attributes, map.class, shown ? map.shownClass : \"\")\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nconst createFlatpickr = (path, onchange, defaultValue, clearerId, config) => {\r\n  let instance = null\r\n  return {\r\n    oncreate: (el) => {\r\n      const cfg = {\r\n        ...config, \r\n        defaultDate: defaultValue || null\r\n      }\r\n      instance = flatpickr(el, cfg)\r\n      instance.config.onChange.push((selectedDates, dateStr) => {\r\n        onchange({path, input:dateStr})\r\n      })\r\n      if (clearerId) {\r\n        const clearer = document.getElementById(clearerId)\r\n        if (clearer) {\r\n          clearer.onclick = instance.clear\r\n        }\r\n      }\r\n    }, \r\n    ondestroy: (el) => {\r\n      if (instance) {\r\n        instance.destroy()\r\n        instance = null\r\n      }\r\n    }\r\n  }\r\n}\r\nexport const playFlatpickr = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.flatpickr, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    const {'mg-path':path, clearerId = null, config = {}, ...attributes} = props\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    const {oncreate, ondestroy} = createFlatpickr(path, actions.onSmartControlChange, slot.input, clearerId, config)\r\n    attributes.oncreate = oncreate\r\n    attributes.ondestroy = ondestroy\r\n    const invalid = ((slot.touched || false) && (slot.invalid || false))\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n\r\nconst createPickr = (path, onchange, defaultValue, clearerId, options) => {\r\n  let instance = null\r\n  return {\r\n    oncreate: (el) => {\r\n      const opts = {\r\n        ...options, \r\n        useAsButton: true, \r\n        default: defaultValue || null, \r\n        el\r\n      }\r\n      instance = Pickr.create(opts)\r\n      instance.on('clear', () => {\r\n        onchange({path, input:''})\r\n      }).on('save', (color) => {\r\n        const input = color ? color.toHEXA().toString() : null\r\n        instance.hide()\r\n        onchange({path, input})\r\n      })\r\n      if (clearerId) {\r\n        const clearer = document.getElementById(clearerId)\r\n        if (clearer) {\r\n          clearer.onclick = (ev) => {\r\n            instance.setColor(null)\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    ondestroy: (el) => {\r\n      if (instance) {\r\n        instance.destroy()\r\n        instance = null\r\n      }\r\n    }\r\n  }\r\n}\r\nexport const playPickr = (C, map = {}) => {\r\n  map = {...defaultAttributeMap.pickr, ...map}\r\n  return (props, children) => (state, actions) => {\r\n    console.log('playPickr/0')\r\n    const {'mg-path':path, clearerId = null, options = {}, ...attributes} = props\r\n    const slot = API.getSlot(path, state.env)\r\n    if (! slot) return null\r\n    const {oncreate, ondestroy} = createPickr(path, actions.onSmartControlChange, slot.input, clearerId, options)\r\n    attributes.oncreate = oncreate\r\n    attributes.ondestroy = ondestroy\r\n    const invalid = ((slot.touched || false) && (slot.invalid || false))\r\n    addAttr(attributes, map.value, slot.input)\r\n    addAttr(attributes, map.invalid, invalid)\r\n    addClass(attributes, map.class, invalid ? map.invalidClass : \"\")\r\n    addAttr(attributes, map.message, slot.message)\r\n    addClass(attributes, map.class, map.fixedClass)\r\n    console.log('playPickr/1')\r\n    return h(C, attributes, ...children)\r\n  }\r\n}\r\n","\r\nimport * as C from '../core/components'\r\nimport {API, start, h} from '../core/framework'\r\nexport {API, start, h} from '../core/framework'\r\n\r\nexport const Input = C.playTextbox('input', {fixedClass:'input', invalidClass:'is-danger'})\r\n\r\nexport const Textarea = C.playTextbox('textarea', {fixedClass:'textarea', invalidClass:'is-danger'})\r\n\r\n// bulma has no range-sliders\r\n\r\nexport const Select = C.playListbox(({onchange, 'data-mg-path':dataMgPath, 'data-mg-value-attribute':dataMgValueAttribute, disabled = false, ...props}, children) => {\r\n  return (\r\n    <div {...props}>\r\n      <select onchange={onchange} data-mg-path={dataMgPath} data-mg-value-attribute={dataMgValueAttribute} disabled={disabled}>\r\n        {children}\r\n      </select>\r\n    </div>\r\n  )\r\n}, {fixedClass:'select', invalidClass:'is-danger'})\r\n\r\nexport const Radio = C.playRadio(({onchange, 'data-mg-path':dataMgPath, 'data-mg-value-attribute':dataMgValueAttribute, disabled = false, name, checked = false, value, ...props}, children) => {\r\n  return (\r\n    <label disabled={disabled} {...props}>\r\n      <input type=\"radio\" onchange={onchange} data-mg-path={dataMgPath} data-mg-value-attribute={dataMgValueAttribute} name={name} disabled={disabled} checked={checked} value={value} />\r\n      {children}\r\n    </label>\r\n  )\r\n}, {fixedClass:'radio'})\r\n\r\nexport const Checkbox = C.playCheckbox(({onchange, 'data-mg-path':dataMgPath, 'data-mg-checked-attribute':dataMgCheckedAttribute, disabled = false, checked = false, ...props}, children) => {\r\n  return (\r\n    <label disabled={disabled} {...props}>\r\n      <input type=\"checkbox\" onchange={onchange} data-mg-path={dataMgPath} data-mg-checked-attribute={dataMgCheckedAttribute} disabled={disabled} checked={checked} />\r\n      {children}\r\n    </label>\r\n  )\r\n})\r\n\r\nexport const Field = C.playField(({invalid, message, label = '', ...props}, children) => {\r\n  return (\r\n    <div {...props}>\r\n      {label ? (<label class=\"label\">{label}</label>) : null}\r\n      {children}\r\n      {invalid && message ? (\r\n        <p class=\"help is-danger\">{message}</p>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}, {fixedClass:'field'})\r\n\r\nexport const UpdateButton = C.compose(C.playUpdateButton, C.playProgress)(\"button\", {fixedClass:'button', shownClass:'is-loading'})\r\n\r\nexport const SettleButton = C.playSettleButton('button', {fixedClass:'button'})\r\n\r\nexport const DeleteButton = C.playUpdateButton(\"button\", {fixedClass:\"delete\"})\r\n\r\nexport const Clickable = C.playUpdateButton(\"a\")\r\n\r\nexport const Dialog = C.playDialog(({'mg-name':name, title, createMessage = null, message = null, hideCancelButton = false, okLabel = 'OK', cancelLabel = 'Cancel', data, ...props}) => {\r\n  message = createMessage ? createMessage(data) : message\r\n  return (\r\n    <div key={name} {...props}>\r\n      <div class=\"modal-background\"></div>\r\n      <div class=\"modal-card\">\r\n        <header class=\"modal-card-head\">\r\n          <p class=\"modal-card-title\">{title}</p>\r\n        </header>\r\n        <section class=\"modal-card-body\">\r\n          <p>{message}</p>\r\n        </section>\r\n        <footer class=\"modal-card-foot\">\r\n          <SettleButton class=\"button is-success\" mg-name={name} mg-result={true}>{okLabel}</SettleButton>\r\n          {! hideCancelButton ? (<SettleButton class=\"button\" mg-name={name} mg-result={false}>{cancelLabel}</SettleButton>) : null}\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}, {fixedClass:'modal is-active', '@nullIfHidden':true, '@transition':'fade'})\r\n\r\nexport const Notification = C.playFeedback(({'mg-name':name, data, createMessage = null, message = null, ...props}) => {\r\n  message = createMessage ? createMessage(data) : message\r\n  return (\r\n    <div key={name} {...props}>\r\n      <DeleteButton mg-update=\"closeFeedback\" mg-context={[name]}></DeleteButton>\r\n      <p>{message}</p>\r\n    </div>\r\n  )\r\n}, {fixedClass:'notification', '@nullIfHidden': true, '@transition':'slide'})\r\n\r\nexport const Progress = C.playProgress(({value, ...props}) => {\r\n  return (\r\n    <progress class={clazz} {...props}>indeterminated</progress>\r\n  )\r\n}, {fixedClass:'progress', '@nullIfHidden': true, current: 'value'})\r\n\r\nexport const Modal = C.playModal((props, children) => {\r\n  return (\r\n    <div {...props}>\r\n      <div class=\"modal-background\"></div>\r\n      {children}\r\n    </div>\r\n  )\r\n}, {fixedClass:'modal is-active'})\r\n\r\nconst defaultShow = (n) => n\r\nexport const Pagination = C.playPagination(({page, prev, next, first, last, siblings, show = defaultShow, prevLabel = 'Previous', nextLabel = 'Next', 'mg-list-path':listPath, loadItemsOptions, ...props}) => {\r\n  return (\r\n    <nav class=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\r\n      <Clickable class=\"pagination-previous\" mg-update=\"loadItems\" mg-context={[listPath, {...loadItemsOptions, page:prev}]} disabled={! prev}>{prevLabel}</Clickable>\r\n      <Clickable class=\"pagination-next\" mg-update=\"loadItems\" mg-context={[listPath, {...loadItemsOptions, page:next}]} disabled={! next}>{nextLabel}</Clickable>\r\n      <ul class=\"pagination-list\">\r\n        {first ? (<li><Clickable class=\"pagination-link\" mg-update=\"loadItems\" mg-context={[listPath, {...loadItemsOptions, page:first}]}>{show(first)}</Clickable></li>) : null}\r\n        {first ? (<li><span class=\"pagination-ellipsis\">&hellip;</span></li>) : null}\r\n        {siblings.map(pno => (<li><Clickable class={`pagination-link ${pno == page ? 'is-current' : ''}`} mg-update=\"loadItems\" mg-context={[listPath, {...loadItemsOptions, page:pno}]}>{show(pno)}</Clickable></li>))}\r\n        {last ? (<li><span class=\"pagination-ellipsis\">&hellip;</span></li>) : null}\r\n        {last ? (<li><Clickable class=\"pagination-link\" mg-update=\"loadItems\" mg-context={[listPath, {...loadItemsOptions, page:last}]}>{show(last)}</Clickable></li>) : null}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}, {current:'page'})\r\n\r\nexport const DatePicker = C.playFlatpickr(\"input\", {fixedClass:'input', invalidClass:'is-danger'})\r\n\r\nexport const ColorPicker = C.playPickr(({value, iconClass = 'material-icons', iconText = 'palette', ...props}) => {\r\n  return (\r\n    <button {...props}>\r\n      <span class=\"icon\"><i class={iconClass} style={{color:value}}>{iconText}</i></span>\r\n    </button>\r\n  )\r\n}, {fixedClass:'button', invalidClass:'is-danger'})","\r\nimport {h, API, start, Input, Listbox, Radio, Checkbox, UpdateButton, SettleButton, Field, Dialog, Notification, Progress, DatePicker, ColorPicker} from '../../src/bindings/bulma'\r\nimport {playSmartControl, playReorderable} from '../../src/core/components'\r\n\r\n/*\r\nconst createPickr = (path, onchange, defaultValue, options0) => {\r\n  let instance = null\r\n  return {\r\n    oncreate: (el) => {\r\n      const options = {\r\n        ...options0, \r\n        useAsButton: true, \r\n        default: defaultValue || null, \r\n        el\r\n      }\r\n      instance = Pickr.create(options)\r\n      instance.on('clear', () => {\r\n        onchange({path, input:''})\r\n      }).on('save', (color) => {\r\n        const input = color ? color.toHEXA().toString() : null\r\n        instance.hide()\r\n        onchange({path, input})\r\n      })\r\n    }, \r\n    ondestroy: (el) => {\r\n      if (instance) {\r\n        instance.destroy()\r\n      }\r\n    }\r\n  }\r\n}\r\nconst ColorPicker = playSmartControl(({\r\n  'mg-path':path, \r\n  onchange, \r\n  value, \r\n  options = {\r\n    components: {\r\n        // Main components\r\n        preview: true,\r\n        opacity: true,\r\n        hue: true,\r\n\r\n        // Input / output Options\r\n        interaction: {\r\n            hex: true,\r\n            rgba: true,\r\n            hsla: true,\r\n            hsva: true,\r\n            cmyk: true,\r\n            input: true,\r\n            clear: true,\r\n            save: true\r\n        }\r\n    }\r\n  }, \r\n  ...props\r\n}) => {\r\n  const {oncreate, ondestroy} = createPickr(path, onchange, value, options)\r\n  return (\r\n    <div class=\"control\">\r\n      <button type=\"button\" oncreate={oncreate} ondestroy={ondestroy} {...props}>\r\n        <span class=\"icon\"><i class=\"material-icons\" style={{color:value}}>palette</i></span>\r\n      </button>\r\n    </div>\r\n  )\r\n}, {\r\n  onchange: 'onchange', \r\n  value: 'value'\r\n})\r\n*/\r\n\r\nconst instantiateSortable = (name, path, onStart, onEnd, options) => {\r\n  var instance = null;\r\n  var marker = null;\r\n  const effectiveOptions = {\r\n    ...options, \r\n    onStart: (ev) => {\r\n      marker = ev.item.nextElementSibling\r\n      onStart({\r\n        update: 'reorder', \r\n        context: [name, path + '/' + ev.oldIndex]\r\n      })\r\n    }, \r\n    onEnd: (ev) => {\r\n      setTimeout(function() {\r\n        ev.from.insertBefore(ev.item, marker)\r\n        marker = null\r\n      }, 0)\r\n      const toPath = ev.to.dataset.mgPath\r\n      onEnd({\r\n        name, \r\n        result: {\r\n          path: toPath + '/' + ev.newIndex\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return {\r\n    oncreate: (el) => {\r\n      instance = Sortable.create(el.firstChild, effectiveOptions)\r\n    }, \r\n    ondestroy: () => {\r\n      if (instance) {\r\n        instance.destroy()\r\n        instance = null\r\n      }\r\n    }\r\n  }\r\n}\r\nconst ReorderableMenu = playReorderable((\r\n  {\r\n    'mg-name':name, \r\n    path, \r\n    active, \r\n    onstart, \r\n    onend, \r\n    options = {}, \r\n    ...props\r\n  }, children) => {\r\n  const {oncreate, ondestroy} = instantiateSortable(name, path, onstart, onend, options)\r\n  return (\r\n    <div class=\"menu\" oncreate={oncreate} ondestroy={ondestroy} {...props}>\r\n      <ul class=\"menu-list\" data-mg-path={path}>\r\n        {children}\r\n      </ul>\r\n    </div>\r\n  )\r\n}, {\r\n  active: \"active\", \r\n  activeClass: \"\", \r\n  onstart: \"onstart\", \r\n  onend: \"onend\"\r\n})\r\n\r\nconst zipPattern = '^[0-9]{3}-?[0-9]{4}$'\r\nconst schema = {\r\n  type: 'object', \r\n  properties: {\r\n    date: {type:'string', minLength:1}, \r\n    date2: {type:'string', minLength:1}, \r\n    color: {type:'string', minLength:1}, \r\n    color2: {type:'string', minLength:1}, \r\n    email: {\r\n      type: 'object', \r\n      properties: {\r\n        firstTime: {type:'string', pattern:'^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$'}, \r\n        secondTime: {type:'string', same:'1/firstTime'}\r\n      }\r\n    }, \r\n    address: {\r\n      type: 'object', \r\n      properties: {\r\n        zip: {type:'string', pattern:zipPattern}, \r\n        pref: {type:'string', minLength:1}, \r\n        city: {type:'string', minLength:1}, \r\n        street: {type:'string', minLength:1}, \r\n        bld: {type:'string'}\r\n      }\r\n    }, \r\n    persons: {\r\n      type: 'array', \r\n      items: {type:'string'}\r\n    }\r\n  }\r\n}\r\n\r\nconst data = {\r\n  date: '', \r\n  date2: '', \r\n  color: '', \r\n  color2: '', \r\n  email: {firstTime:'', secondTime:''}, \r\n  address: {zip:'', pref:'', city:'', street:'', bld:''}, \r\n  persons: ['Dad', 'Mam', 'Me', 'Doggy']\r\n}\r\n\r\nconst updates = {\r\n  complementAddress: (env) => {\r\n    const zipSlot = API.getSlot('/address/zip', env)\r\n    return API.withEnv(null, \r\n      new Promise((fulfill, reject) => {\r\n        new YubinBango.Core(zipSlot.input.replace('-', ''), fulfill)\r\n      }).then(API.wrap(([result, env]) => {\r\n        const bld = API.extract('/address/bld', env)\r\n        const address = {zip:zipSlot.input, pref:result.region, city:result.locality, street:result.street, bld}\r\n        return API.add('/address', address, env)\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst onZipCreated = (el) => {\r\n  el.addEventListener('input', maybeComplementAddress)\r\n}\r\nconst maybeComplementAddress = (ev) => {\r\n  const zip = ev.currentTarget.value\r\n  if (zip.match(new RegExp(zipPattern))) {\r\n    onUpdate({\r\n      update:'complementAddress', \r\n      context: []\r\n    })\r\n  }\r\n}\r\n\r\nconst pickrOptions = {\r\n  components: {\r\n    // Main components\r\n    preview: true,\r\n    opacity: true,\r\n    hue: true,\r\n\r\n    // Input / output Options\r\n    interaction: {\r\n      hex: true,\r\n      rgba: true,\r\n      hsla: true,\r\n      hsva: true,\r\n      cmyk: true,\r\n      input: true,\r\n      clear: false,\r\n      save: true\r\n    }\r\n  }\r\n}\r\n\r\nconst view = (env) => {\r\n  console.log('view', env)\r\n  const data = API.extract(\"\", env)\r\n  return (\r\n    <div class=\"block\">\r\n      <Field mg-path=\"/date\" label=\"カレンダー\">\r\n        <div class=\"field has-addons\">\r\n          <div class=\"control\">\r\n            <DatePicker mg-path=\"/date\" class=\"input\" clearerId=\"datepicker-clearer\" />\r\n          </div>\r\n          <div class=\"control\">\r\n            <a class=\"button is-info\" id=\"datepicker-clearer\">Clear</a>\r\n          </div>\r\n        </div>\r\n      </Field>\r\n      <p>value: {data.date}</p>\r\n      <Field mg-path=\"/date2\" label=\"input type=date\">\r\n        <Input type=\"date\" mg-path=\"/date2\" />\r\n      </Field>\r\n      <p>value: {data.date2}</p>\r\n      <Field mg-path=\"/color\" label=\"カラー\">\r\n        <div class=\"field has-addons\">\r\n          <div class=\"control\">\r\n            <ColorPicker mg-path=\"/color\" class=\"button\" clearerId=\"colorpicker-clearer\" options={pickrOptions} />\r\n          </div>\r\n          <div class=\"control\">\r\n            <a class=\"button is-info\" id=\"colorpicker-clearer\">Clear</a>\r\n          </div>\r\n        </div>\r\n      </Field>\r\n      <p>value: {data.color}</p>\r\n      <Field mg-path=\"/color2\" label=\"input type=color\">\r\n        <Input class=\"input\" type=\"color\" mg-path=\"/color2\" />\r\n      </Field>\r\n      <p>value: {data.color2}</p>\r\n      {/*<Field mg-path=\"/email\" class=\"field\" foldValidity>\r\n        <label class=\"label\">メールアドレス</label>\r\n        <Textbox class=\"input\" mg-path=\"/email/firstTime\" />\r\n        <Textbox class=\"input\" mg-path=\"/email/secondTime\" />\r\n      </Field>\r\n      <Field mg0path=\"/address\" class=\"field\" foldValidity>\r\n        <label class=\"label\">住所</label>\r\n        <Textbox class=\"input\" mg-path=\"/address/zip\" oncreate={onZipCreated} />\r\n        <Textbox class=\"input\" mg-path=\"/address/pref\" />\r\n        <Textbox class=\"input\" mg-path=\"/address/city\" />\r\n        <Textbox class=\"input\" mg-path=\"/address/street\" />\r\n        <Textbox class=\"input\" mg-path=\"/address/bld\" />\r\n      </Field>\r\n      <hr />\r\n      <ReorderableMenu mg-name=\"persons\" path=\"/persons\">\r\n        {data.persons.map(p => (<li key={p}><a>{p}</a></li>))}\r\n  </ReorderableMenu> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst containerEl = document.getElementById('app')\r\n\r\nconst {onUpdate} = start({data, schema, view, containerEl, updates})"]}